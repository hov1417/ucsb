{
  "times": [
    [
      23363004782574,
      1
    ],
    [
      23363004782580,
      1
    ],
    [
      23363004782585,
      1
    ],
    [
      23363004848274,
      1
    ],
    [
      23363083877879,
      0
    ],
    [
      23363083885385,
      0
    ],
    [
      23363083886246,
      0
    ],
    [
      23363083923355,
      0
    ]
  ],
  "time_ms": 1746652340370,
  "syscalls": {},
  "threads": [
    {
      "timestamp_ns": 23363205588970,
      "tid": 199701,
      "start": 0
    },
    {
      "timestamp_ns": 23363205543540,
      "tid": 199666,
      "start": 0
    },
    {
      "timestamp_ns": 23363205542702,
      "tid": 199667,
      "start": 0
    },
    {
      "timestamp_ns": 23363205542330,
      "tid": 199665,
      "start": 0
    },
    {
      "timestamp_ns": 23363205284957,
      "tid": 199703,
      "start": 0
    },
    {
      "timestamp_ns": 23363205092083,
      "tid": 199702,
      "start": 0
    },
    {
      "timestamp_ns": 23363004831861,
      "tid": 132359198267664,
      "start": 1
    },
    {
      "timestamp_ns": 23363004785824,
      "tid": 132359189874960,
      "start": 1
    },
    {
      "timestamp_ns": 23363004709237,
      "tid": 132359181482256,
      "start": 1
    },
    {
      "timestamp_ns": 23362992812813,
      "tid": 199673,
      "start": 0
    },
    {
      "timestamp_ns": 23362986132507,
      "tid": 199672,
      "start": 0
    },
    {
      "timestamp_ns": 23362985832721,
      "tid": 199671,
      "start": 0
    },
    {
      "timestamp_ns": 23362985831783,
      "tid": 199670,
      "start": 0
    },
    {
      "timestamp_ns": 23362985593972,
      "tid": 199700,
      "start": 0
    },
    {
      "timestamp_ns": 23362985581915,
      "tid": 132359181482256,
      "start": 1
    },
    {
      "timestamp_ns": 23362985557649,
      "tid": 199699,
      "start": 0
    },
    {
      "timestamp_ns": 23362985537457,
      "tid": 132359189874960,
      "start": 1
    },
    {
      "timestamp_ns": 23362985513852,
      "tid": 199698,
      "start": 0
    },
    {
      "timestamp_ns": 23362985493393,
      "tid": 132359198267664,
      "start": 1
    },
    {
      "timestamp_ns": 23362985469470,
      "tid": 199697,
      "start": 0
    },
    {
      "timestamp_ns": 23362985450119,
      "tid": 132359206660368,
      "start": 1
    },
    {
      "timestamp_ns": 23362985426656,
      "tid": 199696,
      "start": 0
    },
    {
      "timestamp_ns": 23362985405921,
      "tid": 132359215053072,
      "start": 1
    },
    {
      "timestamp_ns": 23362985377236,
      "tid": 199695,
      "start": 0
    },
    {
      "timestamp_ns": 23362985358410,
      "tid": 132359223445776,
      "start": 1
    },
    {
      "timestamp_ns": 23362985331409,
      "tid": 199694,
      "start": 0
    },
    {
      "timestamp_ns": 23362985306340,
      "tid": 132359231838480,
      "start": 1
    },
    {
      "timestamp_ns": 23362985281785,
      "tid": 199693,
      "start": 0
    },
    {
      "timestamp_ns": 23362985260799,
      "tid": 132359240231184,
      "start": 1
    },
    {
      "timestamp_ns": 23362985236560,
      "tid": 199692,
      "start": 0
    },
    {
      "timestamp_ns": 23362985217553,
      "tid": 132359248623888,
      "start": 1
    },
    {
      "timestamp_ns": 23362985194843,
      "tid": 199691,
      "start": 0
    },
    {
      "timestamp_ns": 23362985175226,
      "tid": 132359257016592,
      "start": 1
    },
    {
      "timestamp_ns": 23362985149896,
      "tid": 199690,
      "start": 0
    },
    {
      "timestamp_ns": 23362985130785,
      "tid": 132359265409296,
      "start": 1
    },
    {
      "timestamp_ns": 23362985105530,
      "tid": 199689,
      "start": 0
    },
    {
      "timestamp_ns": 23362985087283,
      "tid": 132359273802000,
      "start": 1
    },
    {
      "timestamp_ns": 23362985068021,
      "tid": 199688,
      "start": 0
    },
    {
      "timestamp_ns": 23362985045322,
      "tid": 132359282194704,
      "start": 1
    },
    {
      "timestamp_ns": 23362985027565,
      "tid": 199687,
      "start": 0
    },
    {
      "timestamp_ns": 23362984999345,
      "tid": 132359290587408,
      "start": 1
    },
    {
      "timestamp_ns": 23362984975368,
      "tid": 199686,
      "start": 0
    },
    {
      "timestamp_ns": 23362984945805,
      "tid": 132359298980112,
      "start": 1
    },
    {
      "timestamp_ns": 23362984920119,
      "tid": 199685,
      "start": 0
    },
    {
      "timestamp_ns": 23362984901403,
      "tid": 132359307372816,
      "start": 1
    },
    {
      "timestamp_ns": 23362984876803,
      "tid": 199684,
      "start": 0
    },
    {
      "timestamp_ns": 23362984858015,
      "tid": 132359315765520,
      "start": 1
    },
    {
      "timestamp_ns": 23362984834707,
      "tid": 199683,
      "start": 0
    },
    {
      "timestamp_ns": 23362984815999,
      "tid": 132359324158224,
      "start": 1
    },
    {
      "timestamp_ns": 23362984792452,
      "tid": 199682,
      "start": 0
    },
    {
      "timestamp_ns": 23362984774112,
      "tid": 132359332550928,
      "start": 1
    },
    {
      "timestamp_ns": 23362984749836,
      "tid": 199681,
      "start": 0
    },
    {
      "timestamp_ns": 23362984729100,
      "tid": 132359340943632,
      "start": 1
    },
    {
      "timestamp_ns": 23362984703287,
      "tid": 199680,
      "start": 0
    },
    {
      "timestamp_ns": 23362984684521,
      "tid": 132359349336336,
      "start": 1
    },
    {
      "timestamp_ns": 23362984659930,
      "tid": 199679,
      "start": 0
    },
    {
      "timestamp_ns": 23362984637038,
      "tid": 132359634524432,
      "start": 1
    },
    {
      "timestamp_ns": 23362984603926,
      "tid": 199678,
      "start": 0
    },
    {
      "timestamp_ns": 23362984587022,
      "tid": 132359642917136,
      "start": 1
    },
    {
      "timestamp_ns": 23362984566409,
      "tid": 199677,
      "start": 0
    },
    {
      "timestamp_ns": 23362984540976,
      "tid": 132359651309840,
      "start": 1
    },
    {
      "timestamp_ns": 23362984522799,
      "tid": 199676,
      "start": 0
    },
    {
      "timestamp_ns": 23362984498274,
      "tid": 132359659702544,
      "start": 1
    },
    {
      "timestamp_ns": 23362984463185,
      "tid": 199675,
      "start": 0
    },
    {
      "timestamp_ns": 23362984462962,
      "tid": 199674,
      "start": 0
    },
    {
      "timestamp_ns": 23362984420282,
      "tid": 132359668095248,
      "start": 1
    },
    {
      "timestamp_ns": 23362984366834,
      "tid": 132359676487952,
      "start": 1
    },
    {
      "timestamp_ns": 23362984315129,
      "tid": 132359684880656,
      "start": 1
    },
    {
      "timestamp_ns": 23362984259874,
      "tid": 132359902955792,
      "start": 1
    },
    {
      "timestamp_ns": 23362984206741,
      "tid": 132359911348496,
      "start": 1
    },
    {
      "timestamp_ns": 23362984147467,
      "tid": 132359919741200,
      "start": 1
    },
    {
      "timestamp_ns": 23362981204478,
      "tid": 132359928133904,
      "start": 1
    },
    {
      "timestamp_ns": 23362981124982,
      "tid": 132359936526608,
      "start": 1
    },
    {
      "timestamp_ns": 23362979455884,
      "tid": 132359944919312,
      "start": 1
    },
    {
      "timestamp_ns": 23362979386419,
      "tid": 132359953312016,
      "start": 1
    },
    {
      "timestamp_ns": 23362979314362,
      "tid": 132359961704720,
      "start": 1
    }
  ],
  "syscall_details": {
    "syscall_stacks": {
      "199659": {
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "__pthread_sigmask+0x4b",
              "remove+0xd"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pthread_create@GLIBC_2.2.5+0x5d9",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 39
          },
          {
            "stack_trace": [
              "pthread_create@GLIBC_2.2.5+0x513",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 39
          },
          {
            "stack_trace": [
              "pthread_create@GLIBC_2.2.5+0x680"
            ],
            "count": 1
          }
        ],
        "kill": [
          {
            "stack_trace": [
              "kill+0xb",
              "remove+0xd",
              "[unknown]",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "kill+0xb"
            ],
            "count": 1
          }
        ],
        "getppid": [
          {
            "stack_trace": [
              "getppid+0xb",
              "remove+0xd",
              "[unknown]",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "getppid+0xb"
            ],
            "count": 1
          }
        ],
        "unlink": [
          {
            "stack_trace": [
              "__GI___unlink+0xb",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___unlink+0xb",
              "rocksdb::DeleteScheduler::DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x47c",
              "rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) [clone .localalias]+0x30",
              "rocksdb::DeleteDBFile(rocksdb::ImmutableDBOptions const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool)+0x3c",
              "rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileType, unsigned long)+0x8b",
              "rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)+0x193e",
              "rocksdb::DBImpl::CloseHelper()+0x342",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 3
          },
          {
            "stack_trace": [
              "__GI___unlink+0xb",
              "rocksdb::CompositeEnv::DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileType, unsigned long)+0x1ef",
              "rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)+0x193e",
              "rocksdb::DBImpl::DeleteObsoleteFiles()+0x94",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c72",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___unlink+0xb",
              "rocksdb::CompositeEnv::DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::DeleteObsoleteOptionsFiles()+0x608",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x200",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "close": [
          {
            "stack_trace": [
              "__close_nocancel+0xb"
            ],
            "count": 33
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::Directories::Close(rocksdb::IOOptions const&, rocksdb::IODebugContext*)+0x58",
              "rocksdb::DBImpl::CloseHelper()+0x7b3",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::EnvLogger::CloseHelper()+0x8b",
              "rocksdb::EnvLogger::CloseImpl()+0x25",
              "rocksdb::Logger::Close()+0x30",
              "rocksdb::DBImpl::CloseHelper()+0x6d3",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::CompositeEnv::UnlockFile(rocksdb::FileLock*)+0x158",
              "rocksdb::DBImpl::CloseHelper()+0x65e",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::log::Writer::~Writer()+0x95",
              "rocksdb::VersionSet::~VersionSet()+0x406",
              "rocksdb::VersionSet::~VersionSet()+0x16",
              "rocksdb::DBImpl::CloseHelper()+0x62f",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::PosixRandomAccessFile::~PosixRandomAccessFile()+0x16",
              "rocksdb::BlockBasedTable::Rep::~Rep()+0x179",
              "rocksdb::BlockBasedTable::~BlockBasedTable()+0x2d",
              "rocksdb::BlockBasedTable::~BlockBasedTable() [clone .localalias]+0x16",
              "rocksdb::lru_cache::LRUCacheShard::Erase(rocksdb::Slice const&, unsigned int)+0xdf",
              "rocksdb::TableCache::Evict(rocksdb::Cache*, unsigned long)+0x37",
              "rocksdb::VersionSet::~VersionSet()+0xa3",
              "rocksdb::VersionSet::~VersionSet()+0x16",
              "rocksdb::DBImpl::CloseHelper()+0x62f",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 5
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::PosixDirectory::~PosixDirectory()+0xfe",
              "rocksdb::PosixDirectory::~PosixDirectory()+0x16",
              "rocksdb::ColumnFamilyData::~ColumnFamilyData()+0x1fc",
              "rocksdb::ColumnFamilyData::UnrefAndTryDelete()+0xb9",
              "rocksdb::SuperVersion::Cleanup()+0x5b",
              "rocksdb::ColumnFamilyData::UnrefAndTryDelete()+0x92",
              "rocksdb::ColumnFamilySet::~ColumnFamilySet()+0x2d",
              "rocksdb::VersionSet::~VersionSet()+0x4c",
              "rocksdb::VersionSet::~VersionSet()+0x16",
              "rocksdb::DBImpl::CloseHelper()+0x62f",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::log::Writer::~Writer()+0x95",
              "rocksdb::DBImpl::CloseHelper()+0x481",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DBImpl::FindObsoleteFiles(rocksdb::JobContext*, bool, bool)+0x51a",
              "rocksdb::DBImpl::CloseHelper()+0x30d",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x20f4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DBImpl::FindObsoleteFiles(rocksdb::JobContext*, bool, bool)+0x51a",
              "rocksdb::DBImpl::DeleteObsoleteFiles()+0x68",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c72",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DBImpl::DeleteObsoleteOptionsFiles()+0x1b2",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x200",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x603",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x23a0",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::PosixWritableFile::~PosixWritableFile()+0xfe",
              "rocksdb::PosixWritableFile::~PosixWritableFile()+0x16",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x2cf",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::DBImpl::GetLogSizeAndMaybeTruncate(unsigned long, bool, rocksdb::DBImpl::LogFileNumberSize*)+0x53b",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x22f8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x101a",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::CompositeEnv::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)+0x15b",
              "rocksdb::DBImpl::DeleteUnreferencedSstFiles(rocksdb::DBImpl::RecoveryContext*)+0xd63",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0xf33",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "[unknown]"
            ],
            "count": 5
          },
          {
            "stack_trace": [
              "close+0x3b",
              "std::_Function_handler<rocksdb::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*), rocksdb::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*&&)+0x2c",
              "rocksdb::LogicalBlockSizeCache::RefAndCacheLogicalBlockSize(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x213",
              "rocksdb::(anonymous namespace)::PosixFileSystem::RegisterDbPaths(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x2c",
              "rocksdb::CompositeEnv::RegisterDbPaths(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x69",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x3fa",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::PosixRandomAccessFile::~PosixRandomAccessFile()+0x16",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x19f2",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::CompositeEnv::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)+0x15b",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x145",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DeleteScheduler::CleanupDirectory(rocksdb::Env*, rocksdb::SstFileManagerImpl*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x133",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x2f0",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "write": [
          {
            "stack_trace": [
              "write+0x4f",
              "[unknown]"
            ],
            "count": 32
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::DBImpl::CloseHelper()+0x69b",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)+0x13c4",
              "rocksdb::DBImpl::CloseHelper()+0x342",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1cac",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::WritableFileWriter::Sync(bool)+0xc4",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x235f",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0xfdd",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x203",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::log::Writer::AddRecord(rocksdb::Slice const&, rocksdb::Env::IOPriority)+0x3d7",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0xe04",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::log::Writer::AddRecord(rocksdb::Slice const&, rocksdb::Env::IOPriority)+0x3d7",
              "rocksdb::VersionSet::WriteCurrentStateToManifest(std::unordered_map<unsigned int, rocksdb::VersionSet::MutableCFState, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, rocksdb::VersionSet::MutableCFState> > > const&, rocksdb::VersionEdit const&, rocksdb::log::Writer*, rocksdb::IOStatus&)+0x12cb",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x22e9",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::log::Writer::AddRecord(rocksdb::Slice const&, rocksdb::Env::IOPriority)+0x3d7",
              "rocksdb::VersionSet::WriteCurrentStateToManifest(std::unordered_map<unsigned int, rocksdb::VersionSet::MutableCFState, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, rocksdb::VersionSet::MutableCFState> > > const&, rocksdb::VersionEdit const&, rocksdb::log::Writer*, rocksdb::IOStatus&)+0x547",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x22e9",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::SanitizeOptions(rocksdb::ImmutableDBOptions const&, rocksdb::ColumnFamilyOptions const&)+0x247",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x160",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::SanitizeOptions(rocksdb::ImmutableDBOptions const&, rocksdb::ColumnFamilyOptions const&)+0x1ee",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x160",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0x47b",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DumpRocksDBBuildVersion(rocksdb::Logger*)+0x52",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d35",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___write_nocancel+0xb",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "write+0x17",
              "[unknown]"
            ],
            "count": 4
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open+0xd4",
              "[unknown]"
            ],
            "count": 23
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DBImpl::FindObsoleteFiles(rocksdb::JobContext*, bool, bool)+0x51a",
              "rocksdb::DBImpl::CloseHelper()+0x30d",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "openat64+0xd3",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x20f4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DBImpl::FindObsoleteFiles(rocksdb::JobContext*, bool, bool)+0x51a",
              "rocksdb::DBImpl::DeleteObsoleteFiles()+0x68",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c72",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DBImpl::DeleteObsoleteOptionsFiles()+0x1b2",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x200",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x101a",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::CompositeEnv::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)+0x15b",
              "rocksdb::DBImpl::DeleteUnreferencedSstFiles(rocksdb::DBImpl::RecoveryContext*)+0xd63",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0xf33",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0x5b9",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::ColumnFamilyData::CreateNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x3f",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x4cd",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0xe1",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::ColumnFamilyData::CreateNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x3f",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x4cd",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::CompositeEnv::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)+0x15b",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x145",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DeleteScheduler::CleanupDirectory(rocksdb::Env*, rocksdb::SstFileManagerImpl*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x133",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x2f0",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open+0x5b",
              "[unknown]"
            ],
            "count": 23
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::CompressionContextCache::Instance()+0x5c",
              "rocksdb::Env::Default()+0x2c",
              "rocksdb::DBOptions::DBOptions()+0x31",
              "std::shared_ptr<ucsb::facebook::rocksdb_t>::shared_ptr<std::allocator<ucsb::facebook::rocksdb_t>, ucsb::facebook::db_mode_t>(std::_Sp_alloc_shared_tag<std::allocator<ucsb::facebook::rocksdb_t> >, ucsb::facebook::db_mode_t&&)+0xe8",
              "[unknown]",
              "std::_Sp_counted_ptr_inplace<ucsb::facebook::rocksdb_t, std::allocator<ucsb::facebook::rocksdb_t>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "newfstatat": [
          {
            "stack_trace": [
              "fstatat64+0xe",
              "[unknown]",
              "benchmark::internal::LambdaBenchmark<main::{lambda(benchmark::State&)#1}>::~LambdaBenchmark()+0x0",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::log::Writer::~Writer()+0x95",
              "rocksdb::VersionSet::~VersionSet()+0x406",
              "rocksdb::VersionSet::~VersionSet()+0x16",
              "rocksdb::DBImpl::CloseHelper()+0x62f",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe"
            ],
            "count": 21
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "[unknown]",
              "[unknown]"
            ],
            "count": 30
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x15b",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x286",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x15b",
              "rocksdb::DBImpl::GetLogSizeAndMaybeTruncate(unsigned long, bool, rocksdb::DBImpl::LogFileNumberSize*)+0xbe",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x22f8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::DBImpl::CreateAndNewDirectory(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*)+0xbb",
              "rocksdb::ColumnFamilyData::AddDirectories(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::FSDirectory>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::FSDirectory> > > >*)+0x160",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x3ab",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x15b",
              "rocksdb::DBImpl::CheckConsistency()+0x1595",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x9b5",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 4
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::PosixHelper::GetLogicalBlockSizeOfDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x47",
              "std::_Function_handler<rocksdb::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*), rocksdb::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*&&)+0x2c",
              "rocksdb::LogicalBlockSizeCache::RefAndCacheLogicalBlockSize(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x213",
              "rocksdb::(anonymous namespace)::PosixFileSystem::RegisterDbPaths(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x2c",
              "rocksdb::CompositeEnv::RegisterDbPaths(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x69",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x3fa",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::DBImpl::CreateAndNewDirectory(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*)+0xbb",
              "rocksdb::Directories::SetDirectories(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > const&)+0x5d",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0xea",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x5f6",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x486",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x15b",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x128b",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x15b",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x153b",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 3
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x1b0",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "read": [
          {
            "stack_trace": [
              "__GI_read+0x4c"
            ],
            "count": 17
          },
          {
            "stack_trace": [
              "__read_nocancel+0x8",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0x5b9",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::ColumnFamilyData::CreateNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x3f",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x4cd",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__read_nocancel+0x8",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0xe1",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::ColumnFamilyData::CreateNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x3f",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x4cd",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__read_nocancel+0x8"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__GI_read+0x12"
            ],
            "count": 26
          },
          {
            "stack_trace": [
              "__read_nocancel+0x8",
              "rocksdb::CompressionContextCache::Instance()+0x5c",
              "rocksdb::Env::Default()+0x2c",
              "rocksdb::DBOptions::DBOptions()+0x31",
              "std::shared_ptr<ucsb::facebook::rocksdb_t>::shared_ptr<std::allocator<ucsb::facebook::rocksdb_t>, ucsb::facebook::db_mode_t>(std::_Sp_alloc_shared_tag<std::allocator<ucsb::facebook::rocksdb_t> >, ucsb::facebook::db_mode_t&&)+0xe8",
              "[unknown]",
              "std::_Sp_counted_ptr_inplace<ucsb::facebook::rocksdb_t, std::allocator<ucsb::facebook::rocksdb_t>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "ioctl": [
          {
            "stack_trace": [
              "tcgetattr+0x2a",
              "[unknown]",
              "[unknown]"
            ],
            "count": 632
          },
          {
            "stack_trace": [
              "tcgetattr+0x2a",
              "[unknown]",
              "std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()+0x0",
              "[unknown]"
            ],
            "count": 201
          },
          {
            "stack_trace": [
              "tcgetattr+0x2a"
            ],
            "count": 16
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 36
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 30
          },
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 2
          }
        ],
        "gettid": [
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::CloseHelper()+0x693",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::DeleteScheduler::DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x671",
              "rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) [clone .localalias]+0x30",
              "rocksdb::DeleteDBFile(rocksdb::ImmutableDBOptions const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool)+0x3c",
              "rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileType, unsigned long)+0x8b",
              "rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)+0x193e",
              "rocksdb::DBImpl::CloseHelper()+0x342",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 3
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::CancelAllBackgroundWork(bool)+0x63",
              "rocksdb::DBImpl::CloseHelper()+0xc5",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0x120",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1ca4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x9c2",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1df3",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::Logger*, char const*, ...)+0x9a",
              "rocksdb::EventLogger::Log(rocksdb::Logger*, rocksdb::JSONWriter const&)+0x80",
              "rocksdb::EventLoggerStream::~EventLoggerStream()+0x4c",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x23aa",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0xc9c",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x1099",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::Logger*, char const*, ...)+0x9a",
              "rocksdb::EventLogger::Log(rocksdb::Logger*, rocksdb::JSONWriter const&)+0x80",
              "rocksdb::EventLoggerStream::~EventLoggerStream()+0x4c",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0xb92",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x2e0",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x54d",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x4eb",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x128c",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x119d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1181",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1164",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1143",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1122",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x10d7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x10a7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x108a",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x103e",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1021",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1004",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xfe7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xfca",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xfad",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf90",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf73",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf56",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf39",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf20",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf06",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xeec",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xece",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xeb4",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xe7e",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xaf6",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xad9",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xabc",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xa02",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x9e6",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x9ca",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x9ae",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x992",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x976",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x8be",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x801",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x7e4",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x7c7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x7aa",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x790",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x761",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x744",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x70d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 7
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x6d8",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x6b7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x69a",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x67d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x661",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x644",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x628",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x60c",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x5f0",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x5d3",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x5a5",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x589",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x565",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x549",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x52d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x511",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x4f5",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x4d9",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x4b5",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x498",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x474",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x458",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x43c",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x420",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x404",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x3e8",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x3cc",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x3b2",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x399",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x379",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x356",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x327",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x183d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1908",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x21e",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x206",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1c6",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x18b",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x153",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x12d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xe9",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xb7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x85",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x53",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x877",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Logger::Logv(rocksdb::InfoLogLevel, char const*, __va_list_tag*) [clone .part.0]+0xbc",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::SanitizeOptions(rocksdb::ImmutableDBOptions const&, rocksdb::ColumnFamilyOptions const&)+0x247",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x160",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Logger::Logv(rocksdb::InfoLogLevel, char const*, __va_list_tag*) [clone .part.0]+0xbc",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::SanitizeOptions(rocksdb::ImmutableDBOptions const&, rocksdb::ColumnFamilyOptions const&)+0x1ee",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x160",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::LockFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, rocksdb::FileLock**, rocksdb::IODebugContext*)+0xa0",
              "rocksdb::CompositeEnv::LockFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileLock**)+0x15b",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x6a0",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1e4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1e0b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1dda",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 8
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d8d",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x1a7",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x18d",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x173",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x159",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x13f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x126",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x10c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0xf3",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0xda",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0xc0",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0xa6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x8c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x72",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x58",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x3f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x26",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x78c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x76f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x752",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x735",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x719",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x6fc",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x6ca",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x6ad",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x690",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x673",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x656",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x639",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x61c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x5ff",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x5e2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x5c5",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x5a8",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x7d6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x547",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x52a",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x50d",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x4f0",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x4d3",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x4b6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x499",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x47c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(rocksdb::Logger*, char const*, ...)+0xa0",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x45f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x43a",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x420",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x403",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x3e6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x3ca",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x3ad",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x390",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x373",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x356",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x339",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x31c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x2ff",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x2e2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x2c6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x2a9",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x28f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x275",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x258",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x23b",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x21e",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x201",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x1e4",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x1c7",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x1aa",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x18d",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x170",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x153",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x139",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x11c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x103",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0xe9",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0xc3",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0xa9",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x8f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x75",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x5b",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x41",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x28",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x486",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x5ec",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x1355",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x1150",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x1120",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x10b",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xf7",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d35",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DumpRocksDBBuildVersion(rocksdb::Logger*)+0xc6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d35",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DumpRocksDBBuildVersion(rocksdb::Logger*)+0x52",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d35",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::GenerateRawUniqueId(unsigned long*, unsigned long*, bool)+0xf7",
              "rocksdb::SemiStructuredUniqueIdGen::Reset()+0x27",
              "rocksdb::(anonymous namespace)::DbSessionIdGen()+0x57",
              "rocksdb::DBImpl::GenerateDbSessionId[abi:cxx11](rocksdb::Env*)+0x33",
              "rocksdb::DBImpl::SetDbSessionId()+0x35",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1a9f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "fcntl": [
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::CompositeEnv::UnlockFile(rocksdb::FileLock*)+0x158",
              "rocksdb::DBImpl::CloseHelper()+0x65e",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel+0x45"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24"
            ],
            "count": 6
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x1f7",
              "rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x15a",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x2404",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x300",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x136",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1e6b",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::DBImpl::CreateWAL(unsigned long, unsigned long, unsigned long, rocksdb::log::Writer**)+0x211",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x12a4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::ReopenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30",
              "rocksdb::DBImpl::GetLogSizeAndMaybeTruncate(unsigned long, bool, rocksdb::DBImpl::LogFileNumberSize*)+0x2eb",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x22f8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0xd83",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::ReadFileToString(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)+0x106",
              "rocksdb::DBImpl::GetDbIdentityFromIdentityFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const+0xfb",
              "rocksdb::DBImpl::SetupDBId(bool, rocksdb::DBImpl::RecoveryContext*)+0x24c",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x298",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x1c8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::ReadFileToString(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)+0x106",
              "rocksdb::VersionSet::GetCurrentManifestPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long*)+0x86",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0xad",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1170",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::CompositeEnv::LockFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileLock**)+0x15b",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x6a0",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 3
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::FileSystem::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, std::shared_ptr<rocksdb::Logger>*, rocksdb::IODebugContext*)+0x126",
              "rocksdb::CompositeEnv::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<rocksdb::Logger>*)+0x15b",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x718",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x1f7",
              "rocksdb::LoadOptionsFromFile(rocksdb::ConfigOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions*, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> >*, std::shared_ptr<rocksdb::Cache>*)+0x79",
              "rocksdb::LoadOptionsFromFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Env*, rocksdb::DBOptions*, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> >*, bool, std::shared_ptr<rocksdb::Cache>*)+0x94",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0xfc6",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          }
        ],
        "ftruncate": [
          {
            "stack_trace": [
              "__ftruncate+0xb",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::log::Writer::~Writer()+0x95",
              "rocksdb::VersionSet::~VersionSet()+0x406",
              "rocksdb::VersionSet::~VersionSet()+0x16",
              "rocksdb::DBImpl::CloseHelper()+0x62f",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__ftruncate+0xb",
              "rocksdb::DBImpl::GetLogSizeAndMaybeTruncate(unsigned long, bool, rocksdb::DBImpl::LogFileNumberSize*)+0x43a",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x22f8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "getdents64": [
          {
            "stack_trace": [
              "__getdents+0x17",
              "[unknown]"
            ],
            "count": 9
          },
          {
            "stack_trace": [
              "__getdents+0x17"
            ],
            "count": 9
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7"
            ],
            "count": 6
          },
          {
            "stack_trace": [
              "___pthread_cond_broadcast+0x130"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "[unknown]",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__lll_lock_wake_private+0x18"
            ],
            "count": 32
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b"
            ],
            "count": 29
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__pthread_once_slow+0x110"
            ],
            "count": 7
          },
          {
            "stack_trace": [
              "__pthread_once_slow+0x110",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "clock_nanosleep": [
          {
            "stack_trace": [
              "__clock_nanosleep+0xc8",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0x1f1",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "clock_gettime": [
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0x1f1",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "sched_yield": [
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x1707",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0x8e",
              "rocksdb::DBImpl::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0xec",
              "ucsb::facebook::rocksdb_t::remove(unsigned long)+0x19a",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 8
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x9a6",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0x8e",
              "rocksdb::DBImpl::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0xec",
              "ucsb::facebook::rocksdb_t::remove(unsigned long)+0x19a",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 4
          }
        ],
        "clone3": [
          {
            "stack_trace": [
              "__clone3+0x1d"
            ],
            "count": 39
          }
        ],
        "fsync": [
          {
            "stack_trace": [
              "fsync+0x3b",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x514",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fsync+0x3b",
              "rocksdb::WritableFileWriter::SyncInternal(bool)+0x367",
              "rocksdb::WritableFileWriter::Sync(bool)+0x170",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x235f",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fsync+0x3b",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x568",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "fstatfs": [
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*, rocksdb::IODebugContext*)+0x130",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x3cd",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x300",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x136",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1e6b",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::DBImpl::CreateWAL(unsigned long, unsigned long, unsigned long, rocksdb::log::Writer**)+0x17f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x12a4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::ReopenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30",
              "rocksdb::DBImpl::GetLogSizeAndMaybeTruncate(unsigned long, bool, rocksdb::DBImpl::LogFileNumberSize*)+0x2eb",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x22f8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*, rocksdb::IODebugContext*)+0x130",
              "rocksdb::DBImpl::CreateAndNewDirectory(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*)+0x171",
              "rocksdb::Directories::SetDirectories(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > const&)+0x5d",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0xea",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::FileSystem::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, std::shared_ptr<rocksdb::Logger>*, rocksdb::IODebugContext*)+0x126",
              "rocksdb::CompositeEnv::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<rocksdb::Logger>*)+0x15b",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x718",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "rename": [
          {
            "stack_trace": [
              "rename+0xb",
              "rocksdb::CompositeEnv::RenameFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x173",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "rename+0xb",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x3d0",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "rename+0xb",
              "rocksdb::CompositeEnv::RenameFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x5b7",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "brk": [
          {
            "stack_trace": [
              "brk+0xb"
            ],
            "count": 4
          }
        ],
        "sync_file_range": [
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x300",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x136",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1e6b",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::DBImpl::CreateWAL(unsigned long, unsigned long, unsigned long, rocksdb::log::Writer**)+0x17f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x12a4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::ReopenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30",
              "rocksdb::DBImpl::GetLogSizeAndMaybeTruncate(unsigned long, bool, rocksdb::DBImpl::LogFileNumberSize*)+0x2eb",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x22f8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::FileSystem::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, std::shared_ptr<rocksdb::Logger>*, rocksdb::IODebugContext*)+0x126",
              "rocksdb::CompositeEnv::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<rocksdb::Logger>*)+0x15b",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x718",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "fdatasync": [
          {
            "stack_trace": [
              "__GI_fdatasync+0x3b",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x472",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_fdatasync+0x3b",
              "rocksdb::WritableFileWriter::SyncInternal(bool)+0x752",
              "rocksdb::WritableFileWriter::Sync(bool)+0x170",
              "rocksdb::SyncManifest(rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)+0x133",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x21ca",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "fallocate": [
          {
            "stack_trace": [
              "fallocate64+0x5f",
              "rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&, rocksdb::IODebugContext*)+0x8a",
              "rocksdb::WritableFileWriter::Append(rocksdb::Slice const&, unsigned int, rocksdb::Env::IOPriority)+0x2b0",
              "rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long, rocksdb::Env::IOPriority)+0xb5",
              "rocksdb::log::Writer::AddRecord(rocksdb::Slice const&, rocksdb::Env::IOPriority)+0x191",
              "rocksdb::VersionSet::WriteCurrentStateToManifest(std::unordered_map<unsigned int, rocksdb::VersionSet::MutableCFState, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, rocksdb::VersionSet::MutableCFState> > > const&, rocksdb::VersionEdit const&, rocksdb::log::Writer*, rocksdb::IOStatus&)+0x547",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x22e9",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "mkdir": [
          {
            "stack_trace": [
              "__GI_mkdir+0xb",
              "rocksdb::DBImpl::CreateAndNewDirectory(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*)+0xbb",
              "rocksdb::ColumnFamilyData::AddDirectories(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::FSDirectory>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::FSDirectory> > > >*)+0x160",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x3ab",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_mkdir+0xb",
              "rocksdb::DBImpl::CreateAndNewDirectory(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*)+0xbb",
              "rocksdb::Directories::SetDirectories(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > const&)+0x5d",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0xea",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_mkdir+0xb",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x5f6",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_mkdir+0xb",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x486",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_mkdir+0xb",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x1b0",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "access": [
          {
            "stack_trace": [
              "__GI___access+0xb",
              "rocksdb::DBImpl::SetupDBId(bool, rocksdb::DBImpl::RecoveryContext*)+0x3d9",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x298",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___access+0xb",
              "rocksdb::CompositeEnv::FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x75b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___access+0xb",
              "rocksdb::CompositeEnv::FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x3f1",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 36
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              "mmap64+0x17"
            ],
            "count": 37
          }
        ],
        "readlink": [
          {
            "stack_trace": [
              "__GI_readlink+0xb",
              "[unknown]"
            ],
            "count": 12
          }
        ],
        "getpid": [
          {
            "stack_trace": [
              "__getpid+0xb",
              "rocksdb::SemiStructuredUniqueIdGen::GenerateNext(unsigned long*, unsigned long*)+0x1f",
              "rocksdb::DBImpl::GenerateDbSessionId[abi:cxx11](rocksdb::Env*)+0x44",
              "rocksdb::DBImpl::SetDbSessionId()+0x35",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1a9f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__getpid+0xb",
              "rocksdb::GenerateRawUniqueId(unsigned long*, unsigned long*, bool)+0xe6",
              "rocksdb::SemiStructuredUniqueIdGen::Reset()+0x27",
              "rocksdb::(anonymous namespace)::DbSessionIdGen()+0x57",
              "rocksdb::DBImpl::GenerateDbSessionId[abi:cxx11](rocksdb::Env*)+0x33",
              "rocksdb::DBImpl::SetDbSessionId()+0x35",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1a9f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__getpid+0xb",
              "rocksdb::SemiStructuredUniqueIdGen::Reset()+0x15",
              "rocksdb::(anonymous namespace)::DbSessionIdGen()+0x57",
              "rocksdb::DBImpl::GenerateDbSessionId[abi:cxx11](rocksdb::Env*)+0x33",
              "rocksdb::DBImpl::SetDbSessionId()+0x35",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1a9f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "uname": [
          {
            "stack_trace": [
              "__GI___uname+0xb"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___uname+0xb",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "getcwd": [
          {
            "stack_trace": [
              "getcwd+0x95",
              "rocksdb::CompositeEnv::GetAbsolutePath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)+0x15b",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x102",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "rt_sigaction": [
          {
            "stack_trace": [
              "__libc_sigaction+0xc3"
            ],
            "count": 1
          }
        ],
        "lseek": [
          {
            "stack_trace": [
              "lseek64+0xb",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "sysinfo": [
          {
            "stack_trace": [
              "__GI___sysinfo+0xb"
            ],
            "count": 1
          }
        ]
      },
      "199701": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "rocksdb::Timer::Run()+0x362",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 5
          }
        ],
        "gettid": [
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::DumpStats()+0x3b8",
              "rocksdb::Timer::Run()+0x147",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::DumpStats()+0x397",
              "rocksdb::Timer::Run()+0x147",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "getpid": [
          {
            "stack_trace": [
              "__getpid+0xb",
              "rocksdb::InternalStats::CacheEntryRoleStats::BeginCollection(rocksdb::Cache*, rocksdb::SystemClock*, unsigned long)+0x4d0",
              "rocksdb::CacheEntryStatsCollector<rocksdb::InternalStats::CacheEntryRoleStats>::CollectStats(int, int)+0x11e",
              "rocksdb::DBImpl::DumpStats()+0x139",
              "rocksdb::Timer::Run()+0x147",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199666": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__lll_lock_wake_private+0x18"
            ],
            "count": 32
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b"
            ],
            "count": 17
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 3
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17"
            ],
            "count": 1
          }
        ],
        "clock_gettime": [
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0x1f1",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "write": [
          {
            "stack_trace": [
              "write+0x4f",
              "[unknown]"
            ],
            "count": 17
          }
        ],
        "sched_yield": [
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x9a6",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0x8e",
              "rocksdb::DBImpl::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0xec",
              "ucsb::facebook::rocksdb_t::remove(unsigned long)+0x19a",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 7
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x1707",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0x8e",
              "rocksdb::DBImpl::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0xec",
              "ucsb::facebook::rocksdb_t::remove(unsigned long)+0x19a",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              "mmap64+0x17"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199667": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "___pthread_cond_broadcast+0x130"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "rocksdb::DBImpl::WaitForFlushMemTables(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<unsigned long const*, 8ul> const&, bool)+0x336",
              "rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)+0x1141",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x23d",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__GI___pthread_cond_signal+0xa5"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__lll_lock_wake_private+0x18"
            ],
            "count": 36
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b"
            ],
            "count": 28
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 4
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17"
            ],
            "count": 1
          }
        ],
        "clock_gettime": [
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0x1f1",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "gettid": [
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x1c8",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::SwitchMemtable(rocksdb::ColumnFamilyData*, rocksdb::DBImpl::WriteContext*)+0x99d",
              "rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)+0x78f",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x23d",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x65",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "close": [
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "read": [
          {
            "stack_trace": [
              "__read_nocancel+0x8",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0x5b9",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::DBImpl::SwitchMemtable(rocksdb::ColumnFamilyData*, rocksdb::DBImpl::WriteContext*)+0x877",
              "rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)+0x78f",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x23d",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__read_nocancel+0x8",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0xe1",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::DBImpl::SwitchMemtable(rocksdb::ColumnFamilyData*, rocksdb::DBImpl::WriteContext*)+0x877",
              "rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)+0x78f",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x23d",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0x5b9",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::DBImpl::SwitchMemtable(rocksdb::ColumnFamilyData*, rocksdb::DBImpl::WriteContext*)+0x877",
              "rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)+0x78f",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x23d",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0xe1",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::DBImpl::SwitchMemtable(rocksdb::ColumnFamilyData*, rocksdb::DBImpl::WriteContext*)+0x877",
              "rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)+0x78f",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x23d",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "write": [
          {
            "stack_trace": [
              "write+0x4f",
              "[unknown]"
            ],
            "count": 18
          }
        ],
        "sched_yield": [
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x9a6",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0x8e",
              "rocksdb::DBImpl::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0xec",
              "ucsb::facebook::rocksdb_t::remove(unsigned long)+0x19a",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 6
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x1707",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0x8e",
              "rocksdb::DBImpl::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0xec",
              "ucsb::facebook::rocksdb_t::remove(unsigned long)+0x19a",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0xbd0",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0x8e",
              "rocksdb::DBImpl::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0xec",
              "ucsb::facebook::rocksdb_t::remove(unsigned long)+0x19a",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 5
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              "mmap64+0x17"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199665": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "[unknown]",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__lll_lock_wake_private+0x18"
            ],
            "count": 36
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b"
            ],
            "count": 24
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17"
            ],
            "count": 1
          }
        ],
        "clock_gettime": [
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0x1f1",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "write": [
          {
            "stack_trace": [
              "write+0x4f",
              "[unknown]"
            ],
            "count": 19
          }
        ],
        "sched_yield": [
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x9a6",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0x8e",
              "rocksdb::DBImpl::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0xec",
              "ucsb::facebook::rocksdb_t::remove(unsigned long)+0x19a",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 12
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0xbd0",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0x8e",
              "rocksdb::DBImpl::Delete(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&)+0xec",
              "ucsb::facebook::rocksdb_t::remove(unsigned long)+0x19a",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199703": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "clock_nanosleep": [
          {
            "stack_trace": [
              "__clock_nanosleep+0xc8",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "close": [
          {
            "stack_trace": [
              "__close_nocancel+0xb"
            ],
            "count": 2
          }
        ],
        "read": [
          {
            "stack_trace": [
              "__GI_read+0x4c"
            ],
            "count": 2
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open+0xd4",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199702": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              "mmap64+0x17"
            ],
            "count": 1
          }
        ],
        "clock_nanosleep": [
          {
            "stack_trace": [
              "__clock_nanosleep+0xc8"
            ],
            "count": 2
          }
        ],
        "times": [
          {
            "stack_trace": [
              "times+0xb"
            ],
            "count": 2
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199669": {
        "futex": [
          {
            "stack_trace": [
              "___pthread_cond_broadcast+0x130"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 3
          }
        ],
        "gettid": [
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::LogBuffer::FlushBufferToLog()+0xcd",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0x175",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 5
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::FlushJob::WriteLevel0Table()+0x160c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::FlushJob::GetFlushJobInfo() const+0x238",
              "rocksdb::FlushJob::WriteLevel0Table()+0x12a9",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::Logger*, char const*, ...)+0x9a",
              "rocksdb::EventLogger::Log(rocksdb::Logger*, rocksdb::JSONWriter const&)+0x80",
              "rocksdb::EventHelpers::LogAndNotifyTableFileCreationFinished(rocksdb::EventLogger*, std::vector<std::shared_ptr<rocksdb::EventListener>, std::allocator<std::shared_ptr<rocksdb::EventListener> > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, rocksdb::FileDescriptor const&, unsigned long, rocksdb::TableProperties const&, rocksdb::TableFileCreationReason, rocksdb::Status const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x1966",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x1f98",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::FlushJob::WriteLevel0Table()+0x9de",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::Logger*, char const*, ...)+0x9a",
              "rocksdb::EventLogger::Log(rocksdb::Logger*, rocksdb::JSONWriter const&)+0x80",
              "rocksdb::EventLoggerStream::~EventLoggerStream()+0x4c",
              "rocksdb::FlushJob::WriteLevel0Table()+0x957",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::FlushJob::WriteLevel0Table()+0x4dc",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::LogBuffer::FlushBufferToLog()+0xcd",
              "rocksdb::FlushJob::WriteLevel0Table()+0x390",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::ThreadStatusUtil::RegisterThread(rocksdb::Env const*, rocksdb::ThreadStatus::ThreadType)+0x41",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x4b",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "newfstatat": [
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::SstFileManagerImpl::OnAddFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xba",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xd11",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "write": [
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0xfdd",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::VersionSet::LogAndApply(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::VersionEdit*, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::function<void (rocksdb::Status const&)> const&)+0x2b9",
              "rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::FSDirectory*, rocksdb::LogBuffer*, std::__cxx11::list<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> >, std::allocator<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> > > >*, bool)+0x756",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0x1236",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::log::Writer::AddRecord(rocksdb::Slice const&, rocksdb::Env::IOPriority)+0x3d7",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0xe04",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::VersionSet::LogAndApply(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::VersionEdit*, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::function<void (rocksdb::Status const&)> const&)+0x2b9",
              "rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::FSDirectory*, rocksdb::LogBuffer*, std::__cxx11::list<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> >, std::allocator<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> > > >*, bool)+0x756",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0x1236",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::FlushJob::WriteLevel0Table()+0x105c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::WritableFileWriter::Sync(bool)+0xc4",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x251b",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fdatasync": [
          {
            "stack_trace": [
              "__GI_fdatasync+0x3b",
              "rocksdb::WritableFileWriter::SyncInternal(bool)+0x752",
              "rocksdb::WritableFileWriter::Sync(bool)+0x170",
              "rocksdb::SyncManifest(rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)+0x133",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x21ca",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::VersionSet::LogAndApply(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::VersionEdit*, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::function<void (rocksdb::Status const&)> const&)+0x2b9",
              "rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::FSDirectory*, rocksdb::LogBuffer*, std::__cxx11::list<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> >, std::allocator<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> > > >*, bool)+0x756",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0x1236",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_fdatasync+0x3b",
              "rocksdb::WritableFileWriter::SyncInternal(bool)+0x752",
              "rocksdb::WritableFileWriter::Sync(bool)+0x170",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x251b",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "clock_gettime": [
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "rocksdb::FlushJob::WriteLevel0Table()+0x15c4",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "rocksdb::FlushJob::WriteLevel0Table()+0x169",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fsync": [
          {
            "stack_trace": [
              "fsync+0x3b",
              "rocksdb::FlushJob::WriteLevel0Table()+0x256a",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "pread64": [
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock<rocksdb::Block>(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::UncompressionDict const&, rocksdb::CachableEntry<rocksdb::Block>*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const+0x19a",
              "rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry<rocksdb::Block>*)+0xda",
              "rocksdb::BinarySearchIndexReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x15d",
              "rocksdb::BlockBasedTable::CreateIndexReader(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x27f",
              "rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, rocksdb::BlockBasedTable*, bool, rocksdb::BlockBasedTableOptions const&, int, unsigned long, unsigned long, rocksdb::BlockCacheLookupContext*)+0x592",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xe33",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::BlockBasedTable::ReadMetaIndexBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, std::unique_ptr<rocksdb::InternalIteratorBase<rocksdb::Slice>, std::default_delete<rocksdb::InternalIteratorBase<rocksdb::Slice> > >*)+0xbf",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xaed",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::ReadFooterFromFile(rocksdb::IOOptions const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, unsigned long, rocksdb::Footer*, unsigned long)+0x897",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x4e2",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "readahead": [
          {
            "stack_trace": [
              "readahead+0xb",
              "rocksdb::BlockBasedTable::PrefetchTail(rocksdb::ReadOptions const&, rocksdb::RandomAccessFileReader*, unsigned long, bool, rocksdb::TailPrefetchStats*, bool, bool, std::unique_ptr<rocksdb::FilePrefetchBuffer, std::default_delete<rocksdb::FilePrefetchBuffer> >*)+0x430",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x1f9",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fadvise64": [
          {
            "stack_trace": [
              "posix_fadvise+0xe",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fcntl": [
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0x303",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x95e",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x899",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open+0xd4",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "close": [
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x25c0",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 4
          }
        ],
        "uname": [
          {
            "stack_trace": [
              "__GI___uname+0xb"
            ],
            "count": 1
          }
        ],
        "sync_file_range": [
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x899",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fstatfs": [
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x899",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              "mmap64+0x17"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199673": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "pread64": [
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock<rocksdb::Block>(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::UncompressionDict const&, rocksdb::CachableEntry<rocksdb::Block>*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const+0x19a",
              "rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry<rocksdb::Block>*)+0xda",
              "rocksdb::BinarySearchIndexReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x15d",
              "rocksdb::BlockBasedTable::CreateIndexReader(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x27f",
              "rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, rocksdb::BlockBasedTable*, bool, rocksdb::BlockBasedTableOptions const&, int, unsigned long, unsigned long, rocksdb::BlockCacheLookupContext*)+0x592",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xe33",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::ReadTablePropertiesHelper(rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ImmutableOptions const&, std::unique_ptr<rocksdb::TableProperties, std::default_delete<rocksdb::TableProperties> >*, rocksdb::MemoryAllocator*)+0x42d",
              "rocksdb::BlockBasedTable::ReadPropertiesBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, unsigned long)+0x652",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xb48",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::BlockBasedTable::ReadMetaIndexBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, std::unique_ptr<rocksdb::InternalIteratorBase<rocksdb::Slice>, std::default_delete<rocksdb::InternalIteratorBase<rocksdb::Slice> > >*)+0xbf",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xaed",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::ReadFooterFromFile(rocksdb::IOOptions const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, unsigned long, rocksdb::Footer*, unsigned long)+0x897",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x4e2",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              "mmap64+0x17"
            ],
            "count": 2
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__pthread_once_slow+0x78"
            ],
            "count": 1
          }
        ],
        "readahead": [
          {
            "stack_trace": [
              "readahead+0xb",
              "rocksdb::BlockBasedTable::PrefetchTail(rocksdb::ReadOptions const&, rocksdb::RandomAccessFileReader*, unsigned long, bool, rocksdb::TailPrefetchStats*, bool, bool, std::unique_ptr<rocksdb::FilePrefetchBuffer, std::default_delete<rocksdb::FilePrefetchBuffer> >*)+0x430",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x1f9",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fadvise64": [
          {
            "stack_trace": [
              "posix_fadvise+0xe",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fcntl": [
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0x303",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open+0xd4",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199672": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "pread64": [
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock<rocksdb::Block>(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::UncompressionDict const&, rocksdb::CachableEntry<rocksdb::Block>*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const+0x19a",
              "rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry<rocksdb::Block>*)+0xda",
              "rocksdb::BinarySearchIndexReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x15d",
              "rocksdb::BlockBasedTable::CreateIndexReader(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x27f",
              "rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, rocksdb::BlockBasedTable*, bool, rocksdb::BlockBasedTableOptions const&, int, unsigned long, unsigned long, rocksdb::BlockCacheLookupContext*)+0x592",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xe33",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::ReadTablePropertiesHelper(rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ImmutableOptions const&, std::unique_ptr<rocksdb::TableProperties, std::default_delete<rocksdb::TableProperties> >*, rocksdb::MemoryAllocator*)+0x42d",
              "rocksdb::BlockBasedTable::ReadPropertiesBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, unsigned long)+0x652",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xb48",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::BlockBasedTable::ReadMetaIndexBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, std::unique_ptr<rocksdb::InternalIteratorBase<rocksdb::Slice>, std::default_delete<rocksdb::InternalIteratorBase<rocksdb::Slice> > >*)+0xbf",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xaed",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::ReadFooterFromFile(rocksdb::IOOptions const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, unsigned long, rocksdb::Footer*, unsigned long)+0x897",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x4e2",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 2
          }
        ],
        "readahead": [
          {
            "stack_trace": [
              "readahead+0xb",
              "rocksdb::BlockBasedTable::PrefetchTail(rocksdb::ReadOptions const&, rocksdb::RandomAccessFileReader*, unsigned long, bool, rocksdb::TailPrefetchStats*, bool, bool, std::unique_ptr<rocksdb::FilePrefetchBuffer, std::default_delete<rocksdb::FilePrefetchBuffer> >*)+0x430",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x1f9",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fadvise64": [
          {
            "stack_trace": [
              "posix_fadvise+0xe",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fcntl": [
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0x303",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open+0xd4",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              "mmap64+0x17"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199671": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "pread64": [
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock<rocksdb::Block>(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::UncompressionDict const&, rocksdb::CachableEntry<rocksdb::Block>*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const+0x19a",
              "rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry<rocksdb::Block>*)+0xda",
              "rocksdb::BinarySearchIndexReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x15d",
              "rocksdb::BlockBasedTable::CreateIndexReader(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x27f",
              "rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, rocksdb::BlockBasedTable*, bool, rocksdb::BlockBasedTableOptions const&, int, unsigned long, unsigned long, rocksdb::BlockCacheLookupContext*)+0x592",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xe33",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::ReadTablePropertiesHelper(rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ImmutableOptions const&, std::unique_ptr<rocksdb::TableProperties, std::default_delete<rocksdb::TableProperties> >*, rocksdb::MemoryAllocator*)+0x42d",
              "rocksdb::BlockBasedTable::ReadPropertiesBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, unsigned long)+0x652",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xb48",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::BlockBasedTable::ReadMetaIndexBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, std::unique_ptr<rocksdb::InternalIteratorBase<rocksdb::Slice>, std::default_delete<rocksdb::InternalIteratorBase<rocksdb::Slice> > >*)+0xbf",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xaed",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::ReadFooterFromFile(rocksdb::IOOptions const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, unsigned long, rocksdb::Footer*, unsigned long)+0x897",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x4e2",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__pthread_once_slow+0x78"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "rocksdb::TailPrefetchStats::GetSuggestedPrefetchSize()+0x1f8",
              "rocksdb::BlockBasedTable::PrefetchTail(rocksdb::ReadOptions const&, rocksdb::RandomAccessFileReader*, unsigned long, bool, rocksdb::TailPrefetchStats*, bool, bool, std::unique_ptr<rocksdb::FilePrefetchBuffer, std::default_delete<rocksdb::FilePrefetchBuffer> >*)+0x61",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x1f9",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "readahead": [
          {
            "stack_trace": [
              "readahead+0xb",
              "rocksdb::BlockBasedTable::PrefetchTail(rocksdb::ReadOptions const&, rocksdb::RandomAccessFileReader*, unsigned long, bool, rocksdb::TailPrefetchStats*, bool, bool, std::unique_ptr<rocksdb::FilePrefetchBuffer, std::default_delete<rocksdb::FilePrefetchBuffer> >*)+0x430",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x1f9",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fadvise64": [
          {
            "stack_trace": [
              "posix_fadvise+0xe",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fcntl": [
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0x303",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open+0xd4",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              "mmap64+0x17"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199670": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "pread64": [
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock<rocksdb::Block>(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::UncompressionDict const&, rocksdb::CachableEntry<rocksdb::Block>*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const+0x19a",
              "rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry<rocksdb::Block>*)+0xda",
              "rocksdb::BinarySearchIndexReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x15d",
              "rocksdb::BlockBasedTable::CreateIndexReader(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x27f",
              "rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, rocksdb::BlockBasedTable*, bool, rocksdb::BlockBasedTableOptions const&, int, unsigned long, unsigned long, rocksdb::BlockCacheLookupContext*)+0x592",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xe33",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::ReadTablePropertiesHelper(rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ImmutableOptions const&, std::unique_ptr<rocksdb::TableProperties, std::default_delete<rocksdb::TableProperties> >*, rocksdb::MemoryAllocator*)+0x42d",
              "rocksdb::BlockBasedTable::ReadPropertiesBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, unsigned long)+0x652",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xb48",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::BlockBasedTable::ReadMetaIndexBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, std::unique_ptr<rocksdb::InternalIteratorBase<rocksdb::Slice>, std::default_delete<rocksdb::InternalIteratorBase<rocksdb::Slice> > >*)+0xbf",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xaed",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::ReadFooterFromFile(rocksdb::IOOptions const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, unsigned long, rocksdb::Footer*, unsigned long)+0x897",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x4e2",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__pthread_once_slow+0x110"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "rocksdb::TailPrefetchStats::GetSuggestedPrefetchSize()+0x1f8",
              "rocksdb::BlockBasedTable::PrefetchTail(rocksdb::ReadOptions const&, rocksdb::RandomAccessFileReader*, unsigned long, bool, rocksdb::TailPrefetchStats*, bool, bool, std::unique_ptr<rocksdb::FilePrefetchBuffer, std::default_delete<rocksdb::FilePrefetchBuffer> >*)+0x61",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x1f9",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait+0x30",
              "rocksdb::TailPrefetchStats::GetSuggestedPrefetchSize()+0x27",
              "rocksdb::BlockBasedTable::PrefetchTail(rocksdb::ReadOptions const&, rocksdb::RandomAccessFileReader*, unsigned long, bool, rocksdb::TailPrefetchStats*, bool, bool, std::unique_ptr<rocksdb::FilePrefetchBuffer, std::default_delete<rocksdb::FilePrefetchBuffer> >*)+0x61",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x1f9",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "readahead": [
          {
            "stack_trace": [
              "readahead+0xb",
              "rocksdb::BlockBasedTable::PrefetchTail(rocksdb::ReadOptions const&, rocksdb::RandomAccessFileReader*, unsigned long, bool, rocksdb::TailPrefetchStats*, bool, bool, std::unique_ptr<rocksdb::FilePrefetchBuffer, std::default_delete<rocksdb::FilePrefetchBuffer> >*)+0x430",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x1f9",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fadvise64": [
          {
            "stack_trace": [
              "posix_fadvise+0xe",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fcntl": [
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0x303",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open+0xd4",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              "mmap64+0x17"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199700": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199699": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199698": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199697": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199696": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199695": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199694": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199693": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199692": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199691": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199690": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199689": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199688": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199687": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199686": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199685": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199684": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199683": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199682": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199681": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199680": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199679": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199678": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199677": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199676": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199675": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199674": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              "mmap64+0x17"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "199668": {
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 2
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              "mmap64+0x17"
            ],
            "count": 1
          }
        ],
        "gettid": [
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::ThreadStatusUtil::RegisterThread(rocksdb::Env const*, rocksdb::ThreadStatus::ThreadType)+0x41",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x4b",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      }
    },
    "all": [
      {
        "id": "rt_sigprocmask",
        "stack_id": 817,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363209169440,
        "end_timestamp_ns": 23363209170758
      },
      {
        "id": "kill",
        "stack_id": 16176,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363209163962,
        "end_timestamp_ns": 23363209168505
      },
      {
        "id": "getppid",
        "stack_id": 5224,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363209162022,
        "end_timestamp_ns": 23363209163243
      },
      {
        "id": "unlink",
        "stack_id": 5979,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363209135828,
        "end_timestamp_ns": 23363209160698
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363209130706,
        "end_timestamp_ns": 23363209131551
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363209121474,
        "end_timestamp_ns": 23363209122765
      },
      {
        "id": "write",
        "stack_id": 8428,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363209106420,
        "end_timestamp_ns": 23363209119772
      },
      {
        "id": "openat",
        "stack_id": 14215,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363208124804,
        "end_timestamp_ns": 23363209088771
      },
      {
        "id": "newfstatat",
        "stack_id": 13470,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363208114307,
        "end_timestamp_ns": 23363208119905
      },
      {
        "id": "read",
        "stack_id": 12081,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363208074236,
        "end_timestamp_ns": 23363208078462
      },
      {
        "id": "openat",
        "stack_id": 14215,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363208048860,
        "end_timestamp_ns": 23363208068047
      },
      {
        "id": "newfstatat",
        "stack_id": 13470,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363208038846,
        "end_timestamp_ns": 23363208045004
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363208033105,
        "end_timestamp_ns": 23363208034656
      },
      {
        "id": "write",
        "stack_id": 5417,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363208022998,
        "end_timestamp_ns": 23363208029668
      },
      {
        "id": "write",
        "stack_id": 7034,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363208015550,
        "end_timestamp_ns": 23363208020173
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363208012612,
        "end_timestamp_ns": 23363208013421
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363208010150,
        "end_timestamp_ns": 23363208011314
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363208007842,
        "end_timestamp_ns": 23363208009100
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207999545,
        "end_timestamp_ns": 23363208006440
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207997861,
        "end_timestamp_ns": 23363207998657
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207996173,
        "end_timestamp_ns": 23363207996970
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207994491,
        "end_timestamp_ns": 23363207995286
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207992804,
        "end_timestamp_ns": 23363207993603
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207991128,
        "end_timestamp_ns": 23363207991925
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207989447,
        "end_timestamp_ns": 23363207990243
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207987774,
        "end_timestamp_ns": 23363207988568
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207986095,
        "end_timestamp_ns": 23363207986892
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207984423,
        "end_timestamp_ns": 23363207985217
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207982740,
        "end_timestamp_ns": 23363207983535
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207981064,
        "end_timestamp_ns": 23363207981857
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207979378,
        "end_timestamp_ns": 23363207980176
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207977704,
        "end_timestamp_ns": 23363207978500
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207976022,
        "end_timestamp_ns": 23363207976820
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207974350,
        "end_timestamp_ns": 23363207975144
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207972670,
        "end_timestamp_ns": 23363207973468
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207970991,
        "end_timestamp_ns": 23363207971788
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207969304,
        "end_timestamp_ns": 23363207970102
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207967622,
        "end_timestamp_ns": 23363207968418
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207965936,
        "end_timestamp_ns": 23363207966733
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207964257,
        "end_timestamp_ns": 23363207965054
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207962573,
        "end_timestamp_ns": 23363207963372
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207960899,
        "end_timestamp_ns": 23363207961695
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207959218,
        "end_timestamp_ns": 23363207960016
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207957540,
        "end_timestamp_ns": 23363207958336
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207955857,
        "end_timestamp_ns": 23363207956655
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207954181,
        "end_timestamp_ns": 23363207954974
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207952500,
        "end_timestamp_ns": 23363207953294
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207950826,
        "end_timestamp_ns": 23363207951621
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207949151,
        "end_timestamp_ns": 23363207949945
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207947471,
        "end_timestamp_ns": 23363207948264
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207945790,
        "end_timestamp_ns": 23363207946585
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207944109,
        "end_timestamp_ns": 23363207944903
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207942430,
        "end_timestamp_ns": 23363207943227
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207940754,
        "end_timestamp_ns": 23363207941550
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207939070,
        "end_timestamp_ns": 23363207939866
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207937382,
        "end_timestamp_ns": 23363207938180
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207935682,
        "end_timestamp_ns": 23363207936479
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207933996,
        "end_timestamp_ns": 23363207934795
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207932306,
        "end_timestamp_ns": 23363207933108
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207930628,
        "end_timestamp_ns": 23363207931425
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207928947,
        "end_timestamp_ns": 23363207929744
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207927272,
        "end_timestamp_ns": 23363207928067
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207925585,
        "end_timestamp_ns": 23363207926382
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207923910,
        "end_timestamp_ns": 23363207924705
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207922228,
        "end_timestamp_ns": 23363207923024
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207920556,
        "end_timestamp_ns": 23363207921349
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207918876,
        "end_timestamp_ns": 23363207919670
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207917198,
        "end_timestamp_ns": 23363207917991
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207915520,
        "end_timestamp_ns": 23363207916317
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207913848,
        "end_timestamp_ns": 23363207914642
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207912170,
        "end_timestamp_ns": 23363207912966
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207910493,
        "end_timestamp_ns": 23363207911289
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207908808,
        "end_timestamp_ns": 23363207909603
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207907128,
        "end_timestamp_ns": 23363207907926
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207905438,
        "end_timestamp_ns": 23363207906238
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207903753,
        "end_timestamp_ns": 23363207904551
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207902072,
        "end_timestamp_ns": 23363207902869
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207900393,
        "end_timestamp_ns": 23363207901190
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207898715,
        "end_timestamp_ns": 23363207899511
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207897038,
        "end_timestamp_ns": 23363207897833
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207895362,
        "end_timestamp_ns": 23363207896157
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207893687,
        "end_timestamp_ns": 23363207894481
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207892001,
        "end_timestamp_ns": 23363207892800
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207890322,
        "end_timestamp_ns": 23363207891116
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207888645,
        "end_timestamp_ns": 23363207889442
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207886974,
        "end_timestamp_ns": 23363207887768
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207885294,
        "end_timestamp_ns": 23363207886089
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207883619,
        "end_timestamp_ns": 23363207884413
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207881938,
        "end_timestamp_ns": 23363207882734
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207880262,
        "end_timestamp_ns": 23363207881056
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207878579,
        "end_timestamp_ns": 23363207879375
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207876903,
        "end_timestamp_ns": 23363207877700
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207875224,
        "end_timestamp_ns": 23363207876021
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207873545,
        "end_timestamp_ns": 23363207874342
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207871856,
        "end_timestamp_ns": 23363207872656
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207870178,
        "end_timestamp_ns": 23363207870975
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207868498,
        "end_timestamp_ns": 23363207869295
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207866815,
        "end_timestamp_ns": 23363207867611
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207865129,
        "end_timestamp_ns": 23363207865927
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207863448,
        "end_timestamp_ns": 23363207864244
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207861766,
        "end_timestamp_ns": 23363207862562
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207860089,
        "end_timestamp_ns": 23363207860882
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207858408,
        "end_timestamp_ns": 23363207859204
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207856738,
        "end_timestamp_ns": 23363207857533
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207855063,
        "end_timestamp_ns": 23363207855860
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207853392,
        "end_timestamp_ns": 23363207854184
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207851714,
        "end_timestamp_ns": 23363207852511
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207850040,
        "end_timestamp_ns": 23363207850835
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207848356,
        "end_timestamp_ns": 23363207849153
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207846687,
        "end_timestamp_ns": 23363207847481
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207845001,
        "end_timestamp_ns": 23363207845798
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207843325,
        "end_timestamp_ns": 23363207844123
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207841638,
        "end_timestamp_ns": 23363207842435
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207839957,
        "end_timestamp_ns": 23363207840754
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207838271,
        "end_timestamp_ns": 23363207839069
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207836585,
        "end_timestamp_ns": 23363207837383
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207834904,
        "end_timestamp_ns": 23363207835704
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207833227,
        "end_timestamp_ns": 23363207834022
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207831547,
        "end_timestamp_ns": 23363207832345
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207829873,
        "end_timestamp_ns": 23363207830668
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207828189,
        "end_timestamp_ns": 23363207828987
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207826514,
        "end_timestamp_ns": 23363207827308
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207824832,
        "end_timestamp_ns": 23363207825626
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207823155,
        "end_timestamp_ns": 23363207823948
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207821483,
        "end_timestamp_ns": 23363207822278
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207819805,
        "end_timestamp_ns": 23363207820603
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207818120,
        "end_timestamp_ns": 23363207818917
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207816445,
        "end_timestamp_ns": 23363207817241
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207814765,
        "end_timestamp_ns": 23363207815559
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207813087,
        "end_timestamp_ns": 23363207813883
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207811401,
        "end_timestamp_ns": 23363207812198
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207809714,
        "end_timestamp_ns": 23363207810513
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207808032,
        "end_timestamp_ns": 23363207808830
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207806353,
        "end_timestamp_ns": 23363207807150
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207804668,
        "end_timestamp_ns": 23363207805467
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207802987,
        "end_timestamp_ns": 23363207803786
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207801312,
        "end_timestamp_ns": 23363207802108
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207799634,
        "end_timestamp_ns": 23363207800430
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207797957,
        "end_timestamp_ns": 23363207798753
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207796273,
        "end_timestamp_ns": 23363207797070
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207794599,
        "end_timestamp_ns": 23363207795394
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207792924,
        "end_timestamp_ns": 23363207793720
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207791245,
        "end_timestamp_ns": 23363207792038
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207789559,
        "end_timestamp_ns": 23363207790359
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207787568,
        "end_timestamp_ns": 23363207788647
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207785477,
        "end_timestamp_ns": 23363207786501
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207783392,
        "end_timestamp_ns": 23363207784403
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207781216,
        "end_timestamp_ns": 23363207782330
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207779286,
        "end_timestamp_ns": 23363207780320
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207777194,
        "end_timestamp_ns": 23363207778427
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207775022,
        "end_timestamp_ns": 23363207776233
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207772988,
        "end_timestamp_ns": 23363207774025
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207771067,
        "end_timestamp_ns": 23363207772090
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207769245,
        "end_timestamp_ns": 23363207770233
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207767079,
        "end_timestamp_ns": 23363207768342
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207764957,
        "end_timestamp_ns": 23363207766053
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207763072,
        "end_timestamp_ns": 23363207764070
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207760717,
        "end_timestamp_ns": 23363207761795
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207758831,
        "end_timestamp_ns": 23363207759851
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207756943,
        "end_timestamp_ns": 23363207757930
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207754506,
        "end_timestamp_ns": 23363207755660
      },
      {
        "id": "write",
        "stack_id": 8799,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207747210,
        "end_timestamp_ns": 23363207750424
      },
      {
        "id": "ioctl",
        "stack_id": 9068,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207745134,
        "end_timestamp_ns": 23363207746181
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207741996,
        "end_timestamp_ns": 23363207742789
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207740236,
        "end_timestamp_ns": 23363207741072
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207733990,
        "end_timestamp_ns": 23363207734818
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207732233,
        "end_timestamp_ns": 23363207733177
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207730355,
        "end_timestamp_ns": 23363207731242
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207722812,
        "end_timestamp_ns": 23363207723691
      },
      {
        "id": "ioctl",
        "stack_id": 5181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207720268,
        "end_timestamp_ns": 23363207721945
      },
      {
        "id": "write",
        "stack_id": 5417,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207678400,
        "end_timestamp_ns": 23363207687387
      },
      {
        "id": "write",
        "stack_id": 7034,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207612803,
        "end_timestamp_ns": 23363207617783
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207609846,
        "end_timestamp_ns": 23363207610639
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207608077,
        "end_timestamp_ns": 23363207608867
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207606395,
        "end_timestamp_ns": 23363207607185
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207604719,
        "end_timestamp_ns": 23363207605511
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207603050,
        "end_timestamp_ns": 23363207603840
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207601374,
        "end_timestamp_ns": 23363207602164
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207599705,
        "end_timestamp_ns": 23363207600495
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207598033,
        "end_timestamp_ns": 23363207598823
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207596352,
        "end_timestamp_ns": 23363207597144
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207594683,
        "end_timestamp_ns": 23363207595474
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207593004,
        "end_timestamp_ns": 23363207593796
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207591328,
        "end_timestamp_ns": 23363207592123
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207589644,
        "end_timestamp_ns": 23363207590439
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207587966,
        "end_timestamp_ns": 23363207588759
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207586250,
        "end_timestamp_ns": 23363207587076
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207582304,
        "end_timestamp_ns": 23363207583099
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207580626,
        "end_timestamp_ns": 23363207581420
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207578942,
        "end_timestamp_ns": 23363207579731
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207577263,
        "end_timestamp_ns": 23363207578057
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207575587,
        "end_timestamp_ns": 23363207576378
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207573913,
        "end_timestamp_ns": 23363207574704
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207572240,
        "end_timestamp_ns": 23363207573028
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207570562,
        "end_timestamp_ns": 23363207571355
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207568885,
        "end_timestamp_ns": 23363207569678
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207567205,
        "end_timestamp_ns": 23363207567995
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207565530,
        "end_timestamp_ns": 23363207566320
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207563846,
        "end_timestamp_ns": 23363207564638
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207562162,
        "end_timestamp_ns": 23363207562955
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207560389,
        "end_timestamp_ns": 23363207561263
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207556158,
        "end_timestamp_ns": 23363207556948
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207554483,
        "end_timestamp_ns": 23363207555275
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207552805,
        "end_timestamp_ns": 23363207553595
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207551121,
        "end_timestamp_ns": 23363207551913
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207549369,
        "end_timestamp_ns": 23363207550197
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207547003,
        "end_timestamp_ns": 23363207548067
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207544874,
        "end_timestamp_ns": 23363207545933
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207542592,
        "end_timestamp_ns": 23363207544019
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207540517,
        "end_timestamp_ns": 23363207541553
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207538712,
        "end_timestamp_ns": 23363207539505
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207537036,
        "end_timestamp_ns": 23363207537830
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207535361,
        "end_timestamp_ns": 23363207536154
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207533597,
        "end_timestamp_ns": 23363207534424
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207530935,
        "end_timestamp_ns": 23363207532112
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207525707,
        "end_timestamp_ns": 23363207526785
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207523691,
        "end_timestamp_ns": 23363207524607
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207522000,
        "end_timestamp_ns": 23363207522810
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207520312,
        "end_timestamp_ns": 23363207521121
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207518621,
        "end_timestamp_ns": 23363207519429
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207516924,
        "end_timestamp_ns": 23363207517734
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207515230,
        "end_timestamp_ns": 23363207516039
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207513536,
        "end_timestamp_ns": 23363207514344
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207511842,
        "end_timestamp_ns": 23363207512650
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207510159,
        "end_timestamp_ns": 23363207510966
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207508476,
        "end_timestamp_ns": 23363207509281
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207506790,
        "end_timestamp_ns": 23363207507599
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207505110,
        "end_timestamp_ns": 23363207505913
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207503374,
        "end_timestamp_ns": 23363207504222
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207499426,
        "end_timestamp_ns": 23363207500231
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207497749,
        "end_timestamp_ns": 23363207498551
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207496070,
        "end_timestamp_ns": 23363207496872
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207494385,
        "end_timestamp_ns": 23363207495189
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207492703,
        "end_timestamp_ns": 23363207493505
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207491012,
        "end_timestamp_ns": 23363207491817
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207489325,
        "end_timestamp_ns": 23363207490130
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207487635,
        "end_timestamp_ns": 23363207488442
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207485943,
        "end_timestamp_ns": 23363207486747
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207484260,
        "end_timestamp_ns": 23363207485064
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207482573,
        "end_timestamp_ns": 23363207483381
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207480890,
        "end_timestamp_ns": 23363207481695
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207479203,
        "end_timestamp_ns": 23363207480008
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207477458,
        "end_timestamp_ns": 23363207478312
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207473185,
        "end_timestamp_ns": 23363207473987
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207471506,
        "end_timestamp_ns": 23363207472307
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207469833,
        "end_timestamp_ns": 23363207470634
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207468155,
        "end_timestamp_ns": 23363207468956
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207466478,
        "end_timestamp_ns": 23363207467280
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207464803,
        "end_timestamp_ns": 23363207465604
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207463122,
        "end_timestamp_ns": 23363207463925
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207461439,
        "end_timestamp_ns": 23363207462247
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207459750,
        "end_timestamp_ns": 23363207460552
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207457665,
        "end_timestamp_ns": 23363207458795
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207455486,
        "end_timestamp_ns": 23363207456557
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207453120,
        "end_timestamp_ns": 23363207454360
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207450986,
        "end_timestamp_ns": 23363207452049
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207448560,
        "end_timestamp_ns": 23363207450184
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207442535,
        "end_timestamp_ns": 23363207443706
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207440305,
        "end_timestamp_ns": 23363207441635
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207438008,
        "end_timestamp_ns": 23363207439115
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207435979,
        "end_timestamp_ns": 23363207436871
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207434217,
        "end_timestamp_ns": 23363207435076
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207432460,
        "end_timestamp_ns": 23363207433316
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207430680,
        "end_timestamp_ns": 23363207431554
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207428887,
        "end_timestamp_ns": 23363207429771
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207426275,
        "end_timestamp_ns": 23363207427443
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207423979,
        "end_timestamp_ns": 23363207425152
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207421375,
        "end_timestamp_ns": 23363207422703
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207419128,
        "end_timestamp_ns": 23363207420273
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207416929,
        "end_timestamp_ns": 23363207418029
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207414750,
        "end_timestamp_ns": 23363207415927
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207409236,
        "end_timestamp_ns": 23363207410222
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207407439,
        "end_timestamp_ns": 23363207408228
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207405762,
        "end_timestamp_ns": 23363207406556
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207404090,
        "end_timestamp_ns": 23363207404882
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207402413,
        "end_timestamp_ns": 23363207403206
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207400726,
        "end_timestamp_ns": 23363207401520
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207399044,
        "end_timestamp_ns": 23363207399837
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207397362,
        "end_timestamp_ns": 23363207398158
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207395673,
        "end_timestamp_ns": 23363207396470
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207393989,
        "end_timestamp_ns": 23363207394787
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207392304,
        "end_timestamp_ns": 23363207393100
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207390608,
        "end_timestamp_ns": 23363207391409
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207388918,
        "end_timestamp_ns": 23363207389717
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207387192,
        "end_timestamp_ns": 23363207388023
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207383201,
        "end_timestamp_ns": 23363207383998
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207381517,
        "end_timestamp_ns": 23363207382311
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207379828,
        "end_timestamp_ns": 23363207380625
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207378154,
        "end_timestamp_ns": 23363207378949
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207376472,
        "end_timestamp_ns": 23363207377265
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207374797,
        "end_timestamp_ns": 23363207375591
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207373122,
        "end_timestamp_ns": 23363207373916
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207371434,
        "end_timestamp_ns": 23363207372229
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207369750,
        "end_timestamp_ns": 23363207370544
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207368066,
        "end_timestamp_ns": 23363207368862
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207366377,
        "end_timestamp_ns": 23363207367174
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207364698,
        "end_timestamp_ns": 23363207365493
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207363003,
        "end_timestamp_ns": 23363207363803
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207361098,
        "end_timestamp_ns": 23363207362089
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207356265,
        "end_timestamp_ns": 23363207357132
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207354470,
        "end_timestamp_ns": 23363207355358
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207351806,
        "end_timestamp_ns": 23363207352913
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207349629,
        "end_timestamp_ns": 23363207350723
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207347414,
        "end_timestamp_ns": 23363207348559
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207345468,
        "end_timestamp_ns": 23363207346560
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207343495,
        "end_timestamp_ns": 23363207344601
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207341213,
        "end_timestamp_ns": 23363207342395
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207339007,
        "end_timestamp_ns": 23363207340128
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207336957,
        "end_timestamp_ns": 23363207338078
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207334949,
        "end_timestamp_ns": 23363207336060
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207332894,
        "end_timestamp_ns": 23363207334010
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207330629,
        "end_timestamp_ns": 23363207331770
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207328111,
        "end_timestamp_ns": 23363207329277
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207326105,
        "end_timestamp_ns": 23363207327252
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207323828,
        "end_timestamp_ns": 23363207324951
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207321602,
        "end_timestamp_ns": 23363207322678
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207319561,
        "end_timestamp_ns": 23363207320654
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207317157,
        "end_timestamp_ns": 23363207318684
      },
      {
        "id": "write",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207308690,
        "end_timestamp_ns": 23363207312568
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207306423,
        "end_timestamp_ns": 23363207307460
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207289693,
        "end_timestamp_ns": 23363207290719
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207287422,
        "end_timestamp_ns": 23363207288264
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207285908,
        "end_timestamp_ns": 23363207286713
      },
      {
        "id": "ioctl",
        "stack_id": 850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207283186,
        "end_timestamp_ns": 23363207284268
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207277157,
        "end_timestamp_ns": 23363207278189
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207274989,
        "end_timestamp_ns": 23363207276329
      },
      {
        "id": "ioctl",
        "stack_id": 5396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207270021,
        "end_timestamp_ns": 23363207271003
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207265275,
        "end_timestamp_ns": 23363207266071
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207263544,
        "end_timestamp_ns": 23363207264354
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207260174,
        "end_timestamp_ns": 23363207260993
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207255446,
        "end_timestamp_ns": 23363207256243
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207253716,
        "end_timestamp_ns": 23363207254521
      },
      {
        "id": "ioctl",
        "stack_id": 951,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207250192,
        "end_timestamp_ns": 23363207251167
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207245470,
        "end_timestamp_ns": 23363207246269
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207243741,
        "end_timestamp_ns": 23363207244547
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207240559,
        "end_timestamp_ns": 23363207241383
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207235808,
        "end_timestamp_ns": 23363207236605
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207234080,
        "end_timestamp_ns": 23363207234888
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207230872,
        "end_timestamp_ns": 23363207231710
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207226018,
        "end_timestamp_ns": 23363207226889
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207224182,
        "end_timestamp_ns": 23363207225074
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207220683,
        "end_timestamp_ns": 23363207221684
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207215928,
        "end_timestamp_ns": 23363207216723
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207214198,
        "end_timestamp_ns": 23363207215008
      },
      {
        "id": "ioctl",
        "stack_id": 15712,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207210816,
        "end_timestamp_ns": 23363207211787
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207205835,
        "end_timestamp_ns": 23363207206650
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207203556,
        "end_timestamp_ns": 23363207204845
      },
      {
        "id": "ioctl",
        "stack_id": 12660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207199195,
        "end_timestamp_ns": 23363207200559
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207192660,
        "end_timestamp_ns": 23363207193600
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207175906,
        "end_timestamp_ns": 23363207176733
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207174204,
        "end_timestamp_ns": 23363207175090
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207172168,
        "end_timestamp_ns": 23363207173013
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207168698,
        "end_timestamp_ns": 23363207169681
      },
      {
        "id": "ioctl",
        "stack_id": 11561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363207165043,
        "end_timestamp_ns": 23363207167636
      },
      {
        "id": "write",
        "stack_id": 7034,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206926750,
        "end_timestamp_ns": 23363206931953
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206922741,
        "end_timestamp_ns": 23363206923518
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206921005,
        "end_timestamp_ns": 23363206921782
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206919366,
        "end_timestamp_ns": 23363206920141
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206917718,
        "end_timestamp_ns": 23363206918496
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206916070,
        "end_timestamp_ns": 23363206916846
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206914251,
        "end_timestamp_ns": 23363206915029
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206912597,
        "end_timestamp_ns": 23363206913376
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206910942,
        "end_timestamp_ns": 23363206911721
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206909289,
        "end_timestamp_ns": 23363206910067
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206907644,
        "end_timestamp_ns": 23363206908422
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206906004,
        "end_timestamp_ns": 23363206906780
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206904360,
        "end_timestamp_ns": 23363206905139
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206902721,
        "end_timestamp_ns": 23363206903495
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206901061,
        "end_timestamp_ns": 23363206901839
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206899382,
        "end_timestamp_ns": 23363206900195
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206895533,
        "end_timestamp_ns": 23363206896310
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206893887,
        "end_timestamp_ns": 23363206894662
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206892249,
        "end_timestamp_ns": 23363206893026
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206890611,
        "end_timestamp_ns": 23363206891386
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206888963,
        "end_timestamp_ns": 23363206889741
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206887314,
        "end_timestamp_ns": 23363206888090
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206885673,
        "end_timestamp_ns": 23363206886449
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206884026,
        "end_timestamp_ns": 23363206884807
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206882376,
        "end_timestamp_ns": 23363206883156
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206880722,
        "end_timestamp_ns": 23363206881502
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206879061,
        "end_timestamp_ns": 23363206879857
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206877401,
        "end_timestamp_ns": 23363206878195
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206875733,
        "end_timestamp_ns": 23363206876529
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206873961,
        "end_timestamp_ns": 23363206874853
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206869740,
        "end_timestamp_ns": 23363206870506
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206868103,
        "end_timestamp_ns": 23363206868869
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206866462,
        "end_timestamp_ns": 23363206867233
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206864818,
        "end_timestamp_ns": 23363206865598
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206862657,
        "end_timestamp_ns": 23363206863800
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206860668,
        "end_timestamp_ns": 23363206861619
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206858594,
        "end_timestamp_ns": 23363206859574
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206856262,
        "end_timestamp_ns": 23363206857525
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206854174,
        "end_timestamp_ns": 23363206855175
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206852074,
        "end_timestamp_ns": 23363206853127
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206849967,
        "end_timestamp_ns": 23363206851278
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206847770,
        "end_timestamp_ns": 23363206848806
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206845557,
        "end_timestamp_ns": 23363206846568
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206843266,
        "end_timestamp_ns": 23363206844423
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206837069,
        "end_timestamp_ns": 23363206838229
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206835047,
        "end_timestamp_ns": 23363206836033
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206833194,
        "end_timestamp_ns": 23363206834131
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206831019,
        "end_timestamp_ns": 23363206832219
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206828996,
        "end_timestamp_ns": 23363206829993
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206827172,
        "end_timestamp_ns": 23363206828022
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206824950,
        "end_timestamp_ns": 23363206825974
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206822812,
        "end_timestamp_ns": 23363206823873
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206821083,
        "end_timestamp_ns": 23363206821957
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206819048,
        "end_timestamp_ns": 23363206820209
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206816826,
        "end_timestamp_ns": 23363206817812
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206814622,
        "end_timestamp_ns": 23363206815668
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206812746,
        "end_timestamp_ns": 23363206813552
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206811189,
        "end_timestamp_ns": 23363206812046
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206793923,
        "end_timestamp_ns": 23363206794716
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206792408,
        "end_timestamp_ns": 23363206793199
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206790890,
        "end_timestamp_ns": 23363206791684
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206789369,
        "end_timestamp_ns": 23363206790164
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206787859,
        "end_timestamp_ns": 23363206788655
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206786344,
        "end_timestamp_ns": 23363206787141
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206784831,
        "end_timestamp_ns": 23363206785626
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206783317,
        "end_timestamp_ns": 23363206784113
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206781800,
        "end_timestamp_ns": 23363206782595
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206780280,
        "end_timestamp_ns": 23363206781077
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206778770,
        "end_timestamp_ns": 23363206779565
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206777251,
        "end_timestamp_ns": 23363206778054
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206755868,
        "end_timestamp_ns": 23363206776334
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206754375,
        "end_timestamp_ns": 23363206755196
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206751535,
        "end_timestamp_ns": 23363206752309
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206750054,
        "end_timestamp_ns": 23363206750830
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206748577,
        "end_timestamp_ns": 23363206749352
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206747096,
        "end_timestamp_ns": 23363206747869
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206745623,
        "end_timestamp_ns": 23363206746398
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206744148,
        "end_timestamp_ns": 23363206744920
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206742679,
        "end_timestamp_ns": 23363206743451
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206741204,
        "end_timestamp_ns": 23363206741976
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206739728,
        "end_timestamp_ns": 23363206740501
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206738255,
        "end_timestamp_ns": 23363206739027
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206736787,
        "end_timestamp_ns": 23363206737558
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206735323,
        "end_timestamp_ns": 23363206736092
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206733838,
        "end_timestamp_ns": 23363206734626
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206732347,
        "end_timestamp_ns": 23363206733159
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206729476,
        "end_timestamp_ns": 23363206730250
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206727993,
        "end_timestamp_ns": 23363206728768
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206726510,
        "end_timestamp_ns": 23363206727286
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206725029,
        "end_timestamp_ns": 23363206725804
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206723554,
        "end_timestamp_ns": 23363206724328
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206722071,
        "end_timestamp_ns": 23363206722847
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206720589,
        "end_timestamp_ns": 23363206721364
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206719112,
        "end_timestamp_ns": 23363206719889
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206717630,
        "end_timestamp_ns": 23363206718408
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206716149,
        "end_timestamp_ns": 23363206716924
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206714669,
        "end_timestamp_ns": 23363206715445
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206713186,
        "end_timestamp_ns": 23363206713961
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206711710,
        "end_timestamp_ns": 23363206712488
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206710124,
        "end_timestamp_ns": 23363206710982
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206706875,
        "end_timestamp_ns": 23363206707649
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206705402,
        "end_timestamp_ns": 23363206706176
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206703926,
        "end_timestamp_ns": 23363206704705
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206702448,
        "end_timestamp_ns": 23363206703230
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206700738,
        "end_timestamp_ns": 23363206701689
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206698478,
        "end_timestamp_ns": 23363206699490
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206696507,
        "end_timestamp_ns": 23363206697465
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206694436,
        "end_timestamp_ns": 23363206695476
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206692573,
        "end_timestamp_ns": 23363206693569
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206690740,
        "end_timestamp_ns": 23363206691706
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206688554,
        "end_timestamp_ns": 23363206689595
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206686496,
        "end_timestamp_ns": 23363206687507
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206684631,
        "end_timestamp_ns": 23363206685623
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206682581,
        "end_timestamp_ns": 23363206683732
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206677354,
        "end_timestamp_ns": 23363206678410
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206675351,
        "end_timestamp_ns": 23363206676521
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206673331,
        "end_timestamp_ns": 23363206674302
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206671500,
        "end_timestamp_ns": 23363206672421
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206669745,
        "end_timestamp_ns": 23363206670671
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206667871,
        "end_timestamp_ns": 23363206668956
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206665850,
        "end_timestamp_ns": 23363206666834
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206663800,
        "end_timestamp_ns": 23363206664781
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206661818,
        "end_timestamp_ns": 23363206662674
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206660324,
        "end_timestamp_ns": 23363206661098
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206658843,
        "end_timestamp_ns": 23363206659615
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206657363,
        "end_timestamp_ns": 23363206658141
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206655881,
        "end_timestamp_ns": 23363206656656
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206654377,
        "end_timestamp_ns": 23363206655200
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206651458,
        "end_timestamp_ns": 23363206652230
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206649980,
        "end_timestamp_ns": 23363206650752
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206648507,
        "end_timestamp_ns": 23363206649281
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206647038,
        "end_timestamp_ns": 23363206647809
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206645562,
        "end_timestamp_ns": 23363206646335
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206644083,
        "end_timestamp_ns": 23363206644857
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206642609,
        "end_timestamp_ns": 23363206643379
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206641132,
        "end_timestamp_ns": 23363206641905
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206639667,
        "end_timestamp_ns": 23363206640437
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206638200,
        "end_timestamp_ns": 23363206638968
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206636724,
        "end_timestamp_ns": 23363206637496
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206635257,
        "end_timestamp_ns": 23363206636027
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206633791,
        "end_timestamp_ns": 23363206634561
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206632316,
        "end_timestamp_ns": 23363206633087
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206630838,
        "end_timestamp_ns": 23363206631610
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206629353,
        "end_timestamp_ns": 23363206630129
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206627862,
        "end_timestamp_ns": 23363206628635
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206626364,
        "end_timestamp_ns": 23363206627139
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206624721,
        "end_timestamp_ns": 23363206625585
      },
      {
        "id": "write",
        "stack_id": 8799,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206618941,
        "end_timestamp_ns": 23363206622340
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206617222,
        "end_timestamp_ns": 23363206618017
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206609058,
        "end_timestamp_ns": 23363206609832
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206607561,
        "end_timestamp_ns": 23363206608331
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206606017,
        "end_timestamp_ns": 23363206606826
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206604546,
        "end_timestamp_ns": 23363206605345
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206601286,
        "end_timestamp_ns": 23363206602060
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206599753,
        "end_timestamp_ns": 23363206600563
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206598254,
        "end_timestamp_ns": 23363206599069
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206594951,
        "end_timestamp_ns": 23363206595736
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206593407,
        "end_timestamp_ns": 23363206594219
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206591927,
        "end_timestamp_ns": 23363206592727
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206588632,
        "end_timestamp_ns": 23363206589418
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206587058,
        "end_timestamp_ns": 23363206587870
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206585564,
        "end_timestamp_ns": 23363206586376
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206582236,
        "end_timestamp_ns": 23363206583009
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206580656,
        "end_timestamp_ns": 23363206581462
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206579198,
        "end_timestamp_ns": 23363206579980
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206577671,
        "end_timestamp_ns": 23363206578489
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206575484,
        "end_timestamp_ns": 23363206576288
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206574009,
        "end_timestamp_ns": 23363206574810
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206570585,
        "end_timestamp_ns": 23363206571352
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206569005,
        "end_timestamp_ns": 23363206569811
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206567436,
        "end_timestamp_ns": 23363206568292
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206565869,
        "end_timestamp_ns": 23363206566701
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206563458,
        "end_timestamp_ns": 23363206564277
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206561708,
        "end_timestamp_ns": 23363206562700
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206555087,
        "end_timestamp_ns": 23363206556132
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206553028,
        "end_timestamp_ns": 23363206554099
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206551081,
        "end_timestamp_ns": 23363206552210
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206544785,
        "end_timestamp_ns": 23363206545781
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206542768,
        "end_timestamp_ns": 23363206543786
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206540832,
        "end_timestamp_ns": 23363206541916
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206538601,
        "end_timestamp_ns": 23363206539724
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206534834,
        "end_timestamp_ns": 23363206535902
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206532849,
        "end_timestamp_ns": 23363206533953
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206526795,
        "end_timestamp_ns": 23363206527744
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206524786,
        "end_timestamp_ns": 23363206525806
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206522791,
        "end_timestamp_ns": 23363206523950
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206516109,
        "end_timestamp_ns": 23363206517092
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206513308,
        "end_timestamp_ns": 23363206514376
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206511073,
        "end_timestamp_ns": 23363206512329
      },
      {
        "id": "write",
        "stack_id": 8799,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206500491,
        "end_timestamp_ns": 23363206505838
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206498722,
        "end_timestamp_ns": 23363206499508
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206496971,
        "end_timestamp_ns": 23363206497759
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206495418,
        "end_timestamp_ns": 23363206496221
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206492832,
        "end_timestamp_ns": 23363206494092
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206490786,
        "end_timestamp_ns": 23363206491856
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206488584,
        "end_timestamp_ns": 23363206489679
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206485457,
        "end_timestamp_ns": 23363206486399
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206483335,
        "end_timestamp_ns": 23363206484719
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206476934,
        "end_timestamp_ns": 23363206477923
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206475018,
        "end_timestamp_ns": 23363206475824
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206473565,
        "end_timestamp_ns": 23363206474348
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206472031,
        "end_timestamp_ns": 23363206472846
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206469898,
        "end_timestamp_ns": 23363206470713
      },
      {
        "id": "ioctl",
        "stack_id": 8855,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206468288,
        "end_timestamp_ns": 23363206469223
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206465039,
        "end_timestamp_ns": 23363206465808
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206463544,
        "end_timestamp_ns": 23363206464353
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206462087,
        "end_timestamp_ns": 23363206462873
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206460555,
        "end_timestamp_ns": 23363206461376
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206458451,
        "end_timestamp_ns": 23363206459264
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206456993,
        "end_timestamp_ns": 23363206457766
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206453724,
        "end_timestamp_ns": 23363206454490
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206452231,
        "end_timestamp_ns": 23363206453038
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206450772,
        "end_timestamp_ns": 23363206451553
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206449214,
        "end_timestamp_ns": 23363206450032
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206447083,
        "end_timestamp_ns": 23363206447890
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206445419,
        "end_timestamp_ns": 23363206446406
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206442139,
        "end_timestamp_ns": 23363206442919
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206440592,
        "end_timestamp_ns": 23363206441400
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206439143,
        "end_timestamp_ns": 23363206439924
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206437616,
        "end_timestamp_ns": 23363206438430
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206435412,
        "end_timestamp_ns": 23363206436221
      },
      {
        "id": "ioctl",
        "stack_id": 16159,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206433786,
        "end_timestamp_ns": 23363206434730
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206430415,
        "end_timestamp_ns": 23363206431207
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206428828,
        "end_timestamp_ns": 23363206429633
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206427368,
        "end_timestamp_ns": 23363206428153
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206425824,
        "end_timestamp_ns": 23363206426645
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206423569,
        "end_timestamp_ns": 23363206424380
      },
      {
        "id": "ioctl",
        "stack_id": 4064,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206421599,
        "end_timestamp_ns": 23363206422886
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206418273,
        "end_timestamp_ns": 23363206419059
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206416771,
        "end_timestamp_ns": 23363206417579
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206415321,
        "end_timestamp_ns": 23363206416104
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206413791,
        "end_timestamp_ns": 23363206414605
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206411639,
        "end_timestamp_ns": 23363206412445
      },
      {
        "id": "ioctl",
        "stack_id": 10005,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206410028,
        "end_timestamp_ns": 23363206410965
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206406653,
        "end_timestamp_ns": 23363206407442
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206405035,
        "end_timestamp_ns": 23363206405843
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206403579,
        "end_timestamp_ns": 23363206404365
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206402035,
        "end_timestamp_ns": 23363206402856
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206399660,
        "end_timestamp_ns": 23363206400468
      },
      {
        "id": "ioctl",
        "stack_id": 4543,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206398021,
        "end_timestamp_ns": 23363206398974
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206394711,
        "end_timestamp_ns": 23363206395497
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206393185,
        "end_timestamp_ns": 23363206393993
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206391664,
        "end_timestamp_ns": 23363206392456
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206390077,
        "end_timestamp_ns": 23363206390893
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206387950,
        "end_timestamp_ns": 23363206388762
      },
      {
        "id": "ioctl",
        "stack_id": 10308,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206386363,
        "end_timestamp_ns": 23363206387255
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206382877,
        "end_timestamp_ns": 23363206383657
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206381180,
        "end_timestamp_ns": 23363206381996
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206379407,
        "end_timestamp_ns": 23363206380464
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206377781,
        "end_timestamp_ns": 23363206378622
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206374520,
        "end_timestamp_ns": 23363206375654
      },
      {
        "id": "ioctl",
        "stack_id": 11881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206371140,
        "end_timestamp_ns": 23363206373619
      },
      {
        "id": "munmap",
        "stack_id": 3290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206225827,
        "end_timestamp_ns": 23363206239187
      },
      {
        "id": "munmap",
        "stack_id": 15802,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206216280,
        "end_timestamp_ns": 23363206224875
      },
      {
        "id": "munmap",
        "stack_id": 4824,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206203680,
        "end_timestamp_ns": 23363206214892
      },
      {
        "id": "write",
        "stack_id": 3185,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206192710,
        "end_timestamp_ns": 23363206195574
      },
      {
        "id": "close",
        "stack_id": 842,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206162143,
        "end_timestamp_ns": 23363206162997
      },
      {
        "id": "close",
        "stack_id": 15687,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206159337,
        "end_timestamp_ns": 23363206160117
      },
      {
        "id": "write",
        "stack_id": 15763,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206154077,
        "end_timestamp_ns": 23363206157897
      },
      {
        "id": "gettid",
        "stack_id": 6600,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206149841,
        "end_timestamp_ns": 23363206150714
      },
      {
        "id": "close",
        "stack_id": 13835,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206146657,
        "end_timestamp_ns": 23363206147421
      },
      {
        "id": "fcntl",
        "stack_id": 14576,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206143584,
        "end_timestamp_ns": 23363206145997
      },
      {
        "id": "close",
        "stack_id": 1158,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206136616,
        "end_timestamp_ns": 23363206137442
      },
      {
        "id": "newfstatat",
        "stack_id": 5991,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206133563,
        "end_timestamp_ns": 23363206135915
      },
      {
        "id": "ftruncate",
        "stack_id": 9650,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206112525,
        "end_timestamp_ns": 23363206132620
      },
      {
        "id": "close",
        "stack_id": 14600,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363206107753,
        "end_timestamp_ns": 23363206108935
      },
      {
        "id": "munmap",
        "stack_id": 4195,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205839235,
        "end_timestamp_ns": 23363206106140
      },
      {
        "id": "close",
        "stack_id": 14600,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205835502,
        "end_timestamp_ns": 23363205836425
      },
      {
        "id": "close",
        "stack_id": 14600,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205830954,
        "end_timestamp_ns": 23363205831906
      },
      {
        "id": "close",
        "stack_id": 14600,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205825504,
        "end_timestamp_ns": 23363205826437
      },
      {
        "id": "close",
        "stack_id": 14600,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205819467,
        "end_timestamp_ns": 23363205820879
      },
      {
        "id": "close",
        "stack_id": 10901,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205802725,
        "end_timestamp_ns": 23363205803945
      },
      {
        "id": "close",
        "stack_id": 8558,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205781195,
        "end_timestamp_ns": 23363205782658
      },
      {
        "id": "write",
        "stack_id": 1379,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205715194,
        "end_timestamp_ns": 23363205775731
      },
      {
        "id": "gettid",
        "stack_id": 15565,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205711022,
        "end_timestamp_ns": 23363205711785
      },
      {
        "id": "unlink",
        "stack_id": 12759,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205701529,
        "end_timestamp_ns": 23363205710083
      },
      {
        "id": "gettid",
        "stack_id": 15565,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205697924,
        "end_timestamp_ns": 23363205698735
      },
      {
        "id": "unlink",
        "stack_id": 12759,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205686883,
        "end_timestamp_ns": 23363205696955
      },
      {
        "id": "gettid",
        "stack_id": 15565,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205679239,
        "end_timestamp_ns": 23363205680215
      },
      {
        "id": "unlink",
        "stack_id": 12759,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205654743,
        "end_timestamp_ns": 23363205677074
      },
      {
        "id": "close",
        "stack_id": 10956,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205628357,
        "end_timestamp_ns": 23363205629347
      },
      {
        "id": "getdents64",
        "stack_id": 4612,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205626390,
        "end_timestamp_ns": 23363205627502
      },
      {
        "id": "getdents64",
        "stack_id": 7972,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205613225,
        "end_timestamp_ns": 23363205623244
      },
      {
        "id": "newfstatat",
        "stack_id": 10124,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205610003,
        "end_timestamp_ns": 23363205611858
      },
      {
        "id": "openat",
        "stack_id": 691,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205605069,
        "end_timestamp_ns": 23363205609318
      },
      {
        "id": "futex",
        "stack_id": 12151,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205564719,
        "end_timestamp_ns": 23363205593720
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363205580003,
        "end_timestamp_ns": 23363205585914
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363205578329,
        "end_timestamp_ns": 23363205579313
      },
      {
        "id": "futex",
        "stack_id": 4658,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363205573043,
        "end_timestamp_ns": 23363205574475
      },
      {
        "id": "futex",
        "stack_id": 295,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363005004167,
        "end_timestamp_ns": 23363205569952
      },
      {
        "id": "futex",
        "stack_id": 1202,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205561472,
        "end_timestamp_ns": 23363205563586
      },
      {
        "id": "gettid",
        "stack_id": 3183,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205552215,
        "end_timestamp_ns": 23363205553492
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363205529320,
        "end_timestamp_ns": 23363205540273
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363205529932,
        "end_timestamp_ns": 23363205539319
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363205529323,
        "end_timestamp_ns": 23363205539102
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363205528156,
        "end_timestamp_ns": 23363205529159
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363205527557,
        "end_timestamp_ns": 23363205528577
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363205527512,
        "end_timestamp_ns": 23363205528517
      },
      {
        "id": "write",
        "stack_id": 3185,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205521011,
        "end_timestamp_ns": 23363205526472
      },
      {
        "id": "futex",
        "stack_id": 13167,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363205522994,
        "end_timestamp_ns": 23363205523971
      },
      {
        "id": "futex",
        "stack_id": 13167,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363205522779,
        "end_timestamp_ns": 23363205523780
      },
      {
        "id": "futex",
        "stack_id": -17,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363205519809,
        "end_timestamp_ns": 23363205522072
      },
      {
        "id": "futex",
        "stack_id": -17,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363205519692,
        "end_timestamp_ns": 23363205521777
      },
      {
        "id": "futex",
        "stack_id": 13167,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363205519935,
        "end_timestamp_ns": 23363205521699
      },
      {
        "id": "close",
        "stack_id": 4007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205510534,
        "end_timestamp_ns": 23363205512131
      },
      {
        "id": "getdents64",
        "stack_id": 4612,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205506590,
        "end_timestamp_ns": 23363205508101
      },
      {
        "id": "newfstatat",
        "stack_id": 14536,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205502753,
        "end_timestamp_ns": 23363205505961
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205497597,
        "end_timestamp_ns": 23363205501705
      },
      {
        "id": "newfstatat",
        "stack_id": 4945,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205494619,
        "end_timestamp_ns": 23363205496587
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205488785,
        "end_timestamp_ns": 23363205493547
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205483843,
        "end_timestamp_ns": 23363205487662
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205478898,
        "end_timestamp_ns": 23363205482800
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205474253,
        "end_timestamp_ns": 23363205477856
      },
      {
        "id": "newfstatat",
        "stack_id": 10746,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205471557,
        "end_timestamp_ns": 23363205473241
      },
      {
        "id": "newfstatat",
        "stack_id": 10746,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205468733,
        "end_timestamp_ns": 23363205470564
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205463376,
        "end_timestamp_ns": 23363205467682
      },
      {
        "id": "newfstatat",
        "stack_id": 14536,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205460513,
        "end_timestamp_ns": 23363205462371
      },
      {
        "id": "newfstatat",
        "stack_id": 10746,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205457826,
        "end_timestamp_ns": 23363205459527
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205453081,
        "end_timestamp_ns": 23363205456758
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205448291,
        "end_timestamp_ns": 23363205452035
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205442527,
        "end_timestamp_ns": 23363205447230
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205437628,
        "end_timestamp_ns": 23363205441459
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205433049,
        "end_timestamp_ns": 23363205436543
      },
      {
        "id": "newfstatat",
        "stack_id": 694,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205430179,
        "end_timestamp_ns": 23363205432024
      },
      {
        "id": "newfstatat",
        "stack_id": 7032,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205427331,
        "end_timestamp_ns": 23363205429220
      },
      {
        "id": "newfstatat",
        "stack_id": 10746,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205424652,
        "end_timestamp_ns": 23363205426316
      },
      {
        "id": "newfstatat",
        "stack_id": 3036,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205421850,
        "end_timestamp_ns": 23363205423709
      },
      {
        "id": "newfstatat",
        "stack_id": 10746,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205419223,
        "end_timestamp_ns": 23363205420881
      },
      {
        "id": "newfstatat",
        "stack_id": 10746,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205416527,
        "end_timestamp_ns": 23363205418239
      },
      {
        "id": "newfstatat",
        "stack_id": 10746,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205413688,
        "end_timestamp_ns": 23363205415498
      },
      {
        "id": "newfstatat",
        "stack_id": 12638,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205410669,
        "end_timestamp_ns": 23363205412704
      },
      {
        "id": "newfstatat",
        "stack_id": 10746,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205407783,
        "end_timestamp_ns": 23363205409652
      },
      {
        "id": "newfstatat",
        "stack_id": 10746,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205404266,
        "end_timestamp_ns": 23363205406536
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205391978,
        "end_timestamp_ns": 23363205402950
      },
      {
        "id": "newfstatat",
        "stack_id": 16107,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205387618,
        "end_timestamp_ns": 23363205390206
      },
      {
        "id": "getdents64",
        "stack_id": 7972,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205360993,
        "end_timestamp_ns": 23363205381821
      },
      {
        "id": "fcntl",
        "stack_id": 14181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205349959,
        "end_timestamp_ns": 23363205350673
      },
      {
        "id": "fcntl",
        "stack_id": 14181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205348142,
        "end_timestamp_ns": 23363205349304
      },
      {
        "id": "newfstatat",
        "stack_id": 10124,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205344591,
        "end_timestamp_ns": 23363205347399
      },
      {
        "id": "openat",
        "stack_id": 5377,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205334564,
        "end_timestamp_ns": 23363205341730
      },
      {
        "id": "futex",
        "stack_id": 12151,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363205133222,
        "end_timestamp_ns": 23363205323565
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363205277767,
        "end_timestamp_ns": 23363205282016
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363205275713,
        "end_timestamp_ns": 23363205276955
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 13285,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363105166965,
        "end_timestamp_ns": 23363205272059
      },
      {
        "id": "futex",
        "stack_id": 12151,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363185003865,
        "end_timestamp_ns": 23363205130832
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363205083611,
        "end_timestamp_ns": 23363205087424
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363205081606,
        "end_timestamp_ns": 23363205082907
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363205069258,
        "end_timestamp_ns": 23363205073665
      },
      {
        "id": "munmap",
        "stack_id": 4195,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363205061023,
        "end_timestamp_ns": 23363205068592
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363205048993,
        "end_timestamp_ns": 23363205060266
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 11567,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363104938774,
        "end_timestamp_ns": 23363205045183
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 8740,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363083896211,
        "end_timestamp_ns": 23363185000774
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363105162413,
        "end_timestamp_ns": 23363105163818
      },
      {
        "id": "read",
        "stack_id": 12081,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363105148184,
        "end_timestamp_ns": 23363105157144
      },
      {
        "id": "openat",
        "stack_id": 16013,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363105130280,
        "end_timestamp_ns": 23363105144202
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 13285,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363005009306,
        "end_timestamp_ns": 23363105121896
      },
      {
        "id": "times",
        "stack_id": 5027,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363104934571,
        "end_timestamp_ns": 23363104937686
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 11567,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363004826371,
        "end_timestamp_ns": 23363104931805
      },
      {
        "id": "futex",
        "stack_id": 16367,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363083919376,
        "end_timestamp_ns": 23363083921047
      },
      {
        "id": "futex",
        "stack_id": 10751,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363058509892,
        "end_timestamp_ns": 23363083917458
      },
      {
        "id": "write",
        "stack_id": 9518,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363083890404,
        "end_timestamp_ns": 23363083895215
      },
      {
        "id": "futex",
        "stack_id": 8145,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363083882791,
        "end_timestamp_ns": 23363083884507
      },
      {
        "id": "futex",
        "stack_id": 12462,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363083881000,
        "end_timestamp_ns": 23363083882780
      },
      {
        "id": "futex",
        "stack_id": 10751,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363058674281,
        "end_timestamp_ns": 23363083880472
      },
      {
        "id": "futex",
        "stack_id": 10751,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363058636307,
        "end_timestamp_ns": 23363083879259
      },
      {
        "id": "futex",
        "stack_id": 1202,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363083869699,
        "end_timestamp_ns": 23363083872551
      },
      {
        "id": "clock_gettime",
        "stack_id": 2970,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363083866252,
        "end_timestamp_ns": 23363083868417
      },
      {
        "id": "gettid",
        "stack_id": 12924,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363083859074,
        "end_timestamp_ns": 23363083860174
      },
      {
        "id": "futex",
        "stack_id": 12937,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363083854163,
        "end_timestamp_ns": 23363083856274
      },
      {
        "id": "futex",
        "stack_id": 295,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363059009011,
        "end_timestamp_ns": 23363083851450
      },
      {
        "id": "futex",
        "stack_id": 1202,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363083810500,
        "end_timestamp_ns": 23363083812487
      },
      {
        "id": "munmap",
        "stack_id": 4195,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363083761009,
        "end_timestamp_ns": 23363083807804
      },
      {
        "id": "munmap",
        "stack_id": 4195,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363083698471,
        "end_timestamp_ns": 23363083759804
      },
      {
        "id": "gettid",
        "stack_id": 6643,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363083693339,
        "end_timestamp_ns": 23363083694205
      },
      {
        "id": "gettid",
        "stack_id": 6643,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363083690768,
        "end_timestamp_ns": 23363083691640
      },
      {
        "id": "gettid",
        "stack_id": 6643,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363083688275,
        "end_timestamp_ns": 23363083689176
      },
      {
        "id": "gettid",
        "stack_id": 6643,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363083685576,
        "end_timestamp_ns": 23363083686512
      },
      {
        "id": "gettid",
        "stack_id": 6643,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363083681557,
        "end_timestamp_ns": 23363083682741
      },
      {
        "id": "newfstatat",
        "stack_id": 3657,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363083669276,
        "end_timestamp_ns": 23363083673635
      },
      {
        "id": "write",
        "stack_id": 6331,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363083636252,
        "end_timestamp_ns": 23363083643572
      },
      {
        "id": "fdatasync",
        "stack_id": 4933,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363082182543,
        "end_timestamp_ns": 23363083633386
      },
      {
        "id": "write",
        "stack_id": 45,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363082177975,
        "end_timestamp_ns": 23363082181288
      },
      {
        "id": "write",
        "stack_id": 45,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363082165986,
        "end_timestamp_ns": 23363082176030
      },
      {
        "id": "gettid",
        "stack_id": 14481,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363082132842,
        "end_timestamp_ns": 23363082133934
      },
      {
        "id": "clock_gettime",
        "stack_id": 7697,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363082129958,
        "end_timestamp_ns": 23363082131862
      },
      {
        "id": "gettid",
        "stack_id": 7182,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363082126172,
        "end_timestamp_ns": 23363082127748
      },
      {
        "id": "fsync",
        "stack_id": 6184,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080780124,
        "end_timestamp_ns": 23363082119590
      },
      {
        "id": "write",
        "stack_id": 5961,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080762420,
        "end_timestamp_ns": 23363080776418
      },
      {
        "id": "gettid",
        "stack_id": 12917,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080749368,
        "end_timestamp_ns": 23363080751026
      },
      {
        "id": "pread64",
        "stack_id": 11717,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080715111,
        "end_timestamp_ns": 23363080717260
      },
      {
        "id": "pread64",
        "stack_id": -17,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080689790,
        "end_timestamp_ns": 23363080691984
      },
      {
        "id": "pread64",
        "stack_id": 7588,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080683358,
        "end_timestamp_ns": 23363080685407
      },
      {
        "id": "pread64",
        "stack_id": 10320,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080668707,
        "end_timestamp_ns": 23363080674111
      },
      {
        "id": "readahead",
        "stack_id": 9188,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080663006,
        "end_timestamp_ns": 23363080665341
      },
      {
        "id": "fadvise64",
        "stack_id": 13840,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080658435,
        "end_timestamp_ns": 23363080659895
      },
      {
        "id": "fcntl",
        "stack_id": 13982,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080656165,
        "end_timestamp_ns": 23363080657273
      },
      {
        "id": "fcntl",
        "stack_id": 13982,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080653815,
        "end_timestamp_ns": 23363080655489
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080645706,
        "end_timestamp_ns": 23363080652814
      },
      {
        "id": "close",
        "stack_id": 5364,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363080630589,
        "end_timestamp_ns": 23363080632503
      },
      {
        "id": "fdatasync",
        "stack_id": 14601,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363077761690,
        "end_timestamp_ns": 23363080627113
      },
      {
        "id": "write",
        "stack_id": 12172,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363077386795,
        "end_timestamp_ns": 23363077759761
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363069967394,
        "end_timestamp_ns": 23363069973847
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363064763926,
        "end_timestamp_ns": 23363064767998
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363062161997,
        "end_timestamp_ns": 23363062176263
      },
      {
        "id": "uname",
        "stack_id": 15280,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059465764,
        "end_timestamp_ns": 23363059467400
      },
      {
        "id": "fcntl",
        "stack_id": 4454,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059132647,
        "end_timestamp_ns": 23363059133793
      },
      {
        "id": "sync_file_range",
        "stack_id": 5053,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059130255,
        "end_timestamp_ns": 23363059131728
      },
      {
        "id": "fstatfs",
        "stack_id": 5355,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059126788,
        "end_timestamp_ns": 23363059129528
      },
      {
        "id": "fcntl",
        "stack_id": 3161,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059124512,
        "end_timestamp_ns": 23363059125605
      },
      {
        "id": "fcntl",
        "stack_id": 3161,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059122084,
        "end_timestamp_ns": 23363059123840
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059083124,
        "end_timestamp_ns": 23363059120966
      },
      {
        "id": "gettid",
        "stack_id": 11672,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059073715,
        "end_timestamp_ns": 23363059074838
      },
      {
        "id": "gettid",
        "stack_id": 12400,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059061001,
        "end_timestamp_ns": 23363059062245
      },
      {
        "id": "gettid",
        "stack_id": 5919,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059045901,
        "end_timestamp_ns": 23363059047037
      },
      {
        "id": "gettid",
        "stack_id": 8155,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059038692,
        "end_timestamp_ns": 23363059039933
      },
      {
        "id": "clock_gettime",
        "stack_id": 14803,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059034906,
        "end_timestamp_ns": 23363059036754
      },
      {
        "id": "futex",
        "stack_id": 12417,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23363059014242,
        "end_timestamp_ns": 23363059015929
      },
      {
        "id": "futex",
        "stack_id": 295,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23362981244023,
        "end_timestamp_ns": 23363059011802
      },
      {
        "id": "futex",
        "stack_id": 9683,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363059005250,
        "end_timestamp_ns": 23363059007216
      },
      {
        "id": "gettid",
        "stack_id": 4876,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363058988977,
        "end_timestamp_ns": 23363058989993
      },
      {
        "id": "close",
        "stack_id": 5692,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363058983597,
        "end_timestamp_ns": 23363058984347
      },
      {
        "id": "read",
        "stack_id": 5190,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363058980821,
        "end_timestamp_ns": 23363058982875
      },
      {
        "id": "openat",
        "stack_id": 9042,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363058976648,
        "end_timestamp_ns": 23363058980218
      },
      {
        "id": "close",
        "stack_id": 4459,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363058970316,
        "end_timestamp_ns": 23363058971611
      },
      {
        "id": "read",
        "stack_id": 2089,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363058964121,
        "end_timestamp_ns": 23363058969127
      },
      {
        "id": "openat",
        "stack_id": 2583,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363058949546,
        "end_timestamp_ns": 23363058963455
      },
      {
        "id": "gettid",
        "stack_id": 8206,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363058938114,
        "end_timestamp_ns": 23363058939627
      },
      {
        "id": "write",
        "stack_id": 425,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363058934661,
        "end_timestamp_ns": 23363058935837
      },
      {
        "id": "write",
        "stack_id": 11348,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363058930298,
        "end_timestamp_ns": 23363058933236
      },
      {
        "id": "clock_gettime",
        "stack_id": 2970,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363058670737,
        "end_timestamp_ns": 23363058672974
      },
      {
        "id": "clock_gettime",
        "stack_id": 2970,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363058633330,
        "end_timestamp_ns": 23363058635169
      },
      {
        "id": "clock_gettime",
        "stack_id": 2970,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363058505101,
        "end_timestamp_ns": 23363058508154
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363056925110,
        "end_timestamp_ns": 23363056928470
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363056923533,
        "end_timestamp_ns": 23363056924224
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363056918381,
        "end_timestamp_ns": 23363056922445
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363056919637,
        "end_timestamp_ns": 23363056921118
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363056916131,
        "end_timestamp_ns": 23363056918755
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363056913935,
        "end_timestamp_ns": 23363056917589
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363056914891,
        "end_timestamp_ns": 23363056916481
      },
      {
        "id": "write",
        "stack_id": 2496,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363056910800,
        "end_timestamp_ns": 23363056913966
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363056898543,
        "end_timestamp_ns": 23363056912987
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363056909331,
        "end_timestamp_ns": 23363056910751
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363056896427,
        "end_timestamp_ns": 23363056908200
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363056904050,
        "end_timestamp_ns": 23363056905422
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363056895760,
        "end_timestamp_ns": 23363056902922
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363056899111,
        "end_timestamp_ns": 23363056900568
      },
      {
        "id": "write",
        "stack_id": 2496,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363056894876,
        "end_timestamp_ns": 23363056898280
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363056893576,
        "end_timestamp_ns": 23363056895486
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363056893528,
        "end_timestamp_ns": 23363056894852
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363056248307,
        "end_timestamp_ns": 23363056249611
      },
      {
        "id": "sched_yield",
        "stack_id": 10566,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363056245432,
        "end_timestamp_ns": 23363056247982
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363056245163,
        "end_timestamp_ns": 23363056247419
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363056244811,
        "end_timestamp_ns": 23363056247288
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363054366103,
        "end_timestamp_ns": 23363054368832
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363054363969,
        "end_timestamp_ns": 23363054365090
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363054339924,
        "end_timestamp_ns": 23363054362555
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363054357945,
        "end_timestamp_ns": 23363054359413
      },
      {
        "id": "futex",
        "stack_id": 12307,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363054338421,
        "end_timestamp_ns": 23363054356841
      },
      {
        "id": "write",
        "stack_id": 11348,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363054354622,
        "end_timestamp_ns": 23363054356792
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363054348875,
        "end_timestamp_ns": 23363054350123
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363054337315,
        "end_timestamp_ns": 23363054347689
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363054343481,
        "end_timestamp_ns": 23363054345156
      },
      {
        "id": "write",
        "stack_id": 6410,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363054336809,
        "end_timestamp_ns": 23363054342616
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363054335880,
        "end_timestamp_ns": 23363054337552
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363054335565,
        "end_timestamp_ns": 23363054336540
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363054332871,
        "end_timestamp_ns": 23363054334555
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363054332873,
        "end_timestamp_ns": 23363054334508
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363053112780,
        "end_timestamp_ns": 23363053115970
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363051524187,
        "end_timestamp_ns": 23363051525530
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363051520601,
        "end_timestamp_ns": 23363051522963
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363051520603,
        "end_timestamp_ns": 23363051522965
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363051295891,
        "end_timestamp_ns": 23363051300615
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363051293803,
        "end_timestamp_ns": 23363051294788
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363051286277,
        "end_timestamp_ns": 23363051292343
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363051288836,
        "end_timestamp_ns": 23363051290203
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363051284650,
        "end_timestamp_ns": 23363051287890
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363051276478,
        "end_timestamp_ns": 23363051285426
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363051282319,
        "end_timestamp_ns": 23363051283658
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363051273454,
        "end_timestamp_ns": 23363051280971
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363051277302,
        "end_timestamp_ns": 23363051278668
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363051272465,
        "end_timestamp_ns": 23363051276337
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363051265783,
        "end_timestamp_ns": 23363051274757
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363051262818,
        "end_timestamp_ns": 23363051272344
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363051269761,
        "end_timestamp_ns": 23363051271363
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363051267844,
        "end_timestamp_ns": 23363051269308
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363051267508,
        "end_timestamp_ns": 23363051268820
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363051262828,
        "end_timestamp_ns": 23363051266523
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363051261307,
        "end_timestamp_ns": 23363051262129
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363051260928,
        "end_timestamp_ns": 23363051262022
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363051257488,
        "end_timestamp_ns": 23363051259775
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363051257500,
        "end_timestamp_ns": 23363051259663
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363051257482,
        "end_timestamp_ns": 23363051259616
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363048922161,
        "end_timestamp_ns": 23363048922958
      },
      {
        "id": "futex",
        "stack_id": 14985,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363048914504,
        "end_timestamp_ns": 23363048921260
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363048915356,
        "end_timestamp_ns": 23363048916679
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363048911344,
        "end_timestamp_ns": 23363048914439
      },
      {
        "id": "futex",
        "stack_id": 14985,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363048903360,
        "end_timestamp_ns": 23363048913684
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363048909543,
        "end_timestamp_ns": 23363048910408
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363048907163,
        "end_timestamp_ns": 23363048908753
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363048906979,
        "end_timestamp_ns": 23363048908287
      },
      {
        "id": "write",
        "stack_id": 11348,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363048901905,
        "end_timestamp_ns": 23363048905968
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363048867135,
        "end_timestamp_ns": 23363048905661
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363048901192,
        "end_timestamp_ns": 23363048902503
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363048867169,
        "end_timestamp_ns": 23363048900001
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363048873851,
        "end_timestamp_ns": 23363048897462
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363048865150,
        "end_timestamp_ns": 23363048872740
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363048868914,
        "end_timestamp_ns": 23363048870219
      },
      {
        "id": "write",
        "stack_id": 6410,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363048864888,
        "end_timestamp_ns": 23363048868169
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363048862280,
        "end_timestamp_ns": 23363048864267
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363048862322,
        "end_timestamp_ns": 23363048863971
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363046470083,
        "end_timestamp_ns": 23363046472552
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363046468493,
        "end_timestamp_ns": 23363046469253
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363046462958,
        "end_timestamp_ns": 23363046467397
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363046464755,
        "end_timestamp_ns": 23363046465933
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363046461511,
        "end_timestamp_ns": 23363046463954
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363046453535,
        "end_timestamp_ns": 23363046462137
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363046459323,
        "end_timestamp_ns": 23363046460597
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363046439163,
        "end_timestamp_ns": 23363046458088
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363046454280,
        "end_timestamp_ns": 23363046455678
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363046450813,
        "end_timestamp_ns": 23363046453448
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363046438371,
        "end_timestamp_ns": 23363046452493
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363046448471,
        "end_timestamp_ns": 23363046449915
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363046437976,
        "end_timestamp_ns": 23363046447173
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363046442329,
        "end_timestamp_ns": 23363046444090
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363046437273,
        "end_timestamp_ns": 23363046441294
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363044053283,
        "end_timestamp_ns": 23363044056050
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363044051667,
        "end_timestamp_ns": 23363044052445
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363044043825,
        "end_timestamp_ns": 23363044050635
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363044047056,
        "end_timestamp_ns": 23363044048460
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363044042910,
        "end_timestamp_ns": 23363044046186
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363044015508,
        "end_timestamp_ns": 23363044042506
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363044041056,
        "end_timestamp_ns": 23363044041984
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363044017116,
        "end_timestamp_ns": 23363044039961
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363044017044,
        "end_timestamp_ns": 23363044018335
      },
      {
        "id": "write",
        "stack_id": 2496,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363044012203,
        "end_timestamp_ns": 23363044015718
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363043993848,
        "end_timestamp_ns": 23363044015339
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363044010671,
        "end_timestamp_ns": 23363044012006
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363043992504,
        "end_timestamp_ns": 23363044009555
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363044005638,
        "end_timestamp_ns": 23363044007192
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363043992399,
        "end_timestamp_ns": 23363044004301
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363043995744,
        "end_timestamp_ns": 23363043997249
      },
      {
        "id": "write",
        "stack_id": 2496,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363043991903,
        "end_timestamp_ns": 23363043994956
      },
      {
        "id": "sched_yield",
        "stack_id": 10566,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363041931361,
        "end_timestamp_ns": 23363041933294
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363041909320,
        "end_timestamp_ns": 23363041931532
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363041576712,
        "end_timestamp_ns": 23363041579679
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363041575033,
        "end_timestamp_ns": 23363041575837
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363041568219,
        "end_timestamp_ns": 23363041573925
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363041569824,
        "end_timestamp_ns": 23363041571061
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363041566360,
        "end_timestamp_ns": 23363041569032
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363041558532,
        "end_timestamp_ns": 23363041567331
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363041564303,
        "end_timestamp_ns": 23363041565503
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363041543267,
        "end_timestamp_ns": 23363041563157
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363041559574,
        "end_timestamp_ns": 23363041561040
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363041555388,
        "end_timestamp_ns": 23363041558645
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363041542377,
        "end_timestamp_ns": 23363041556987
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363041552942,
        "end_timestamp_ns": 23363041554382
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363041541854,
        "end_timestamp_ns": 23363041551605
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363041547202,
        "end_timestamp_ns": 23363041548638
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363041541842,
        "end_timestamp_ns": 23363041546126
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363041538567,
        "end_timestamp_ns": 23363041539786
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363040015289,
        "end_timestamp_ns": 23363040016557
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363040013787,
        "end_timestamp_ns": 23363040014787
      },
      {
        "id": "sched_yield",
        "stack_id": 10566,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363040012578,
        "end_timestamp_ns": 23363040014612
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363040012054,
        "end_timestamp_ns": 23363040014229
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363040011959,
        "end_timestamp_ns": 23363040013079
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363040007498,
        "end_timestamp_ns": 23363040010463
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363038889624,
        "end_timestamp_ns": 23363038892786
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363038887771,
        "end_timestamp_ns": 23363038888710
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363038881024,
        "end_timestamp_ns": 23363038886715
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363038883341,
        "end_timestamp_ns": 23363038884657
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363038878786,
        "end_timestamp_ns": 23363038882439
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363038870671,
        "end_timestamp_ns": 23363038880097
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363038876421,
        "end_timestamp_ns": 23363038877787
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363038857869,
        "end_timestamp_ns": 23363038875280
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363038871848,
        "end_timestamp_ns": 23363038873048
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363038867979,
        "end_timestamp_ns": 23363038871027
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363038857514,
        "end_timestamp_ns": 23363038869614
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363038865689,
        "end_timestamp_ns": 23363038867075
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363038855607,
        "end_timestamp_ns": 23363038864397
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363038860104,
        "end_timestamp_ns": 23363038861825
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363038855158,
        "end_timestamp_ns": 23363038858958
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363038853963,
        "end_timestamp_ns": 23363038854872
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363038851249,
        "end_timestamp_ns": 23363038852816
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363038851246,
        "end_timestamp_ns": 23363038852823
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363036216237,
        "end_timestamp_ns": 23363036219573
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363036213932,
        "end_timestamp_ns": 23363036215165
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363036152846,
        "end_timestamp_ns": 23363036211768
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363036175389,
        "end_timestamp_ns": 23363036178255
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363036173253,
        "end_timestamp_ns": 23363036174239
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363036171316,
        "end_timestamp_ns": 23363036172318
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363036171004,
        "end_timestamp_ns": 23363036172178
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363036167524,
        "end_timestamp_ns": 23363036170477
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363036152425,
        "end_timestamp_ns": 23363036169908
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363036165296,
        "end_timestamp_ns": 23363036166509
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363036151806,
        "end_timestamp_ns": 23363036163715
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363036159676,
        "end_timestamp_ns": 23363036161214
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363036151445,
        "end_timestamp_ns": 23363036158772
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363036148029,
        "end_timestamp_ns": 23363036148981
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363036147765,
        "end_timestamp_ns": 23363036148536
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363036143803,
        "end_timestamp_ns": 23363036147093
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363036143769,
        "end_timestamp_ns": 23363036147003
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363036143735,
        "end_timestamp_ns": 23363036146976
      },
      {
        "id": "sched_yield",
        "stack_id": 14683,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363034289521,
        "end_timestamp_ns": 23363034290978
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363034288755,
        "end_timestamp_ns": 23363034290275
      },
      {
        "id": "sched_yield",
        "stack_id": 10566,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363034289150,
        "end_timestamp_ns": 23363034290157
      },
      {
        "id": "sched_yield",
        "stack_id": 14683,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363034287153,
        "end_timestamp_ns": 23363034288693
      },
      {
        "id": "sched_yield",
        "stack_id": 10566,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363034287467,
        "end_timestamp_ns": 23363034288471
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363034286366,
        "end_timestamp_ns": 23363034287912
      },
      {
        "id": "sched_yield",
        "stack_id": 10566,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363034285718,
        "end_timestamp_ns": 23363034286754
      },
      {
        "id": "sched_yield",
        "stack_id": 14683,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363034284723,
        "end_timestamp_ns": 23363034286312
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363034284018,
        "end_timestamp_ns": 23363034285505
      },
      {
        "id": "sched_yield",
        "stack_id": 10566,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363034283789,
        "end_timestamp_ns": 23363034284984
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363034271427,
        "end_timestamp_ns": 23363034284321
      },
      {
        "id": "sched_yield",
        "stack_id": 14683,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363034282351,
        "end_timestamp_ns": 23363034283931
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363034281545,
        "end_timestamp_ns": 23363034283120
      },
      {
        "id": "sched_yield",
        "stack_id": 10566,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363034280062,
        "end_timestamp_ns": 23363034282953
      },
      {
        "id": "sched_yield",
        "stack_id": 14683,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363034278918,
        "end_timestamp_ns": 23363034281556
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363034277893,
        "end_timestamp_ns": 23363034280486
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363033168755,
        "end_timestamp_ns": 23363033172601
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363033167149,
        "end_timestamp_ns": 23363033167922
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363033158430,
        "end_timestamp_ns": 23363033166024
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363033162354,
        "end_timestamp_ns": 23363033163906
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363033156225,
        "end_timestamp_ns": 23363033161180
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363033065602,
        "end_timestamp_ns": 23363033157114
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363033151969,
        "end_timestamp_ns": 23363033154761
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363033065046,
        "end_timestamp_ns": 23363033149140
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363033078501,
        "end_timestamp_ns": 23363033081951
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363033075952,
        "end_timestamp_ns": 23363033077522
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363033064190,
        "end_timestamp_ns": 23363033074632
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363033070124,
        "end_timestamp_ns": 23363033071821
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363033064220,
        "end_timestamp_ns": 23363033069105
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363033059202,
        "end_timestamp_ns": 23363033060885
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363031587727,
        "end_timestamp_ns": 23363031590367
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363029869345,
        "end_timestamp_ns": 23363029870566
      },
      {
        "id": "futex",
        "stack_id": 2580,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363029836283,
        "end_timestamp_ns": 23363029868304
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363029837513,
        "end_timestamp_ns": 23363029839127
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363029832493,
        "end_timestamp_ns": 23363029836665
      },
      {
        "id": "futex",
        "stack_id": 2580,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363029824868,
        "end_timestamp_ns": 23363029835286
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363029830418,
        "end_timestamp_ns": 23363029831442
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363029827574,
        "end_timestamp_ns": 23363029828989
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363029808912,
        "end_timestamp_ns": 23363029828667
      },
      {
        "id": "write",
        "stack_id": 11348,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363029823263,
        "end_timestamp_ns": 23363029826618
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363029822483,
        "end_timestamp_ns": 23363029823941
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363029808391,
        "end_timestamp_ns": 23363029821196
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363029817003,
        "end_timestamp_ns": 23363029818685
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363029806523,
        "end_timestamp_ns": 23363029815617
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363029811259,
        "end_timestamp_ns": 23363029812703
      },
      {
        "id": "write",
        "stack_id": 6410,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363029806630,
        "end_timestamp_ns": 23363029810444
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363029804024,
        "end_timestamp_ns": 23363029805764
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363029804029,
        "end_timestamp_ns": 23363029805611
      },
      {
        "id": "write",
        "stack_id": 11348,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363027352543,
        "end_timestamp_ns": 23363027355951
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363027346846,
        "end_timestamp_ns": 23363027348002
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363027310522,
        "end_timestamp_ns": 23363027345396
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363027340146,
        "end_timestamp_ns": 23363027341688
      },
      {
        "id": "futex",
        "stack_id": 2580,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363027310467,
        "end_timestamp_ns": 23363027339063
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363027313367,
        "end_timestamp_ns": 23363027334836
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363027312795,
        "end_timestamp_ns": 23363027314242
      },
      {
        "id": "write",
        "stack_id": 2496,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363027308129,
        "end_timestamp_ns": 23363027311978
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363027307791,
        "end_timestamp_ns": 23363027309222
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363027307817,
        "end_timestamp_ns": 23363027309246
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363027307790,
        "end_timestamp_ns": 23363027309217
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363027154084,
        "end_timestamp_ns": 23363027155366
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363027153760,
        "end_timestamp_ns": 23363027154954
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363027151125,
        "end_timestamp_ns": 23363027153128
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363027150717,
        "end_timestamp_ns": 23363027153083
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363027150838,
        "end_timestamp_ns": 23363027152994
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363024399287,
        "end_timestamp_ns": 23363024401810
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363024397536,
        "end_timestamp_ns": 23363024398403
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363024391747,
        "end_timestamp_ns": 23363024396442
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363024393581,
        "end_timestamp_ns": 23363024394911
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363024389518,
        "end_timestamp_ns": 23363024392702
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363024379832,
        "end_timestamp_ns": 23363024390831
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363024386991,
        "end_timestamp_ns": 23363024388405
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363024369250,
        "end_timestamp_ns": 23363024385536
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363024381206,
        "end_timestamp_ns": 23363024382416
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363024377318,
        "end_timestamp_ns": 23363024380380
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363024368358,
        "end_timestamp_ns": 23363024378838
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363024375122,
        "end_timestamp_ns": 23363024376422
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363024367457,
        "end_timestamp_ns": 23363024373855
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363024369787,
        "end_timestamp_ns": 23363024371224
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363024365791,
        "end_timestamp_ns": 23363024368912
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363024364832,
        "end_timestamp_ns": 23363024365775
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363024362171,
        "end_timestamp_ns": 23363024363646
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363024362169,
        "end_timestamp_ns": 23363024363641
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363024065387,
        "end_timestamp_ns": 23363024066819
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363024061400,
        "end_timestamp_ns": 23363024064163
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363024061402,
        "end_timestamp_ns": 23363024064164
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363021908181,
        "end_timestamp_ns": 23363021912135
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363021906011,
        "end_timestamp_ns": 23363021907163
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363021838659,
        "end_timestamp_ns": 23363021904147
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363021857261,
        "end_timestamp_ns": 23363021860513
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363021854850,
        "end_timestamp_ns": 23363021856259
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363021850121,
        "end_timestamp_ns": 23363021853340
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363021838114,
        "end_timestamp_ns": 23363021853094
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363021847741,
        "end_timestamp_ns": 23363021849139
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363021838112,
        "end_timestamp_ns": 23363021846441
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363021842233,
        "end_timestamp_ns": 23363021843618
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363021837925,
        "end_timestamp_ns": 23363021841405
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363019523474,
        "end_timestamp_ns": 23363019527287
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363019521330,
        "end_timestamp_ns": 23363019522392
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363019515118,
        "end_timestamp_ns": 23363019519888
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363019515888,
        "end_timestamp_ns": 23363019517234
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363019511129,
        "end_timestamp_ns": 23363019515024
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363019445389,
        "end_timestamp_ns": 23363019513886
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363019508093,
        "end_timestamp_ns": 23363019510056
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363019387288,
        "end_timestamp_ns": 23363019483676
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363019446477,
        "end_timestamp_ns": 23363019447765
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363019423809,
        "end_timestamp_ns": 23363019445623
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363019386537,
        "end_timestamp_ns": 23363019444236
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363019421214,
        "end_timestamp_ns": 23363019422754
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363019386564,
        "end_timestamp_ns": 23363019419373
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363019391064,
        "end_timestamp_ns": 23363019392710
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363019386072,
        "end_timestamp_ns": 23363019390211
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363016719464,
        "end_timestamp_ns": 23363016723146
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363016717278,
        "end_timestamp_ns": 23363016718349
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363016568672,
        "end_timestamp_ns": 23363016715342
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363016708265,
        "end_timestamp_ns": 23363016710832
      },
      {
        "id": "futex",
        "stack_id": 14985,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363016568309,
        "end_timestamp_ns": 23363016706382
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363016647038,
        "end_timestamp_ns": 23363016672896
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363016644004,
        "end_timestamp_ns": 23363016645962
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363016568133,
        "end_timestamp_ns": 23363016641809
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363016578461,
        "end_timestamp_ns": 23363016579629
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363016567767,
        "end_timestamp_ns": 23363016577556
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363016566791,
        "end_timestamp_ns": 23363016567924
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363016566736,
        "end_timestamp_ns": 23363016567573
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363016566657,
        "end_timestamp_ns": 23363016567468
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363016562815,
        "end_timestamp_ns": 23363016563711
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363016562288,
        "end_timestamp_ns": 23363016563127
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363016560085,
        "end_timestamp_ns": 23363016561617
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363016560087,
        "end_timestamp_ns": 23363016561608
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363016558805,
        "end_timestamp_ns": 23363016561348
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363016558756,
        "end_timestamp_ns": 23363016561225
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363013483463,
        "end_timestamp_ns": 23363013486961
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363013481856,
        "end_timestamp_ns": 23363013482587
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363013480280,
        "end_timestamp_ns": 23363013481341
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363013480020,
        "end_timestamp_ns": 23363013480886
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363013476037,
        "end_timestamp_ns": 23363013479359
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363013430894,
        "end_timestamp_ns": 23363013478797
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363013473406,
        "end_timestamp_ns": 23363013474956
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363013429956,
        "end_timestamp_ns": 23363013471611
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363013467702,
        "end_timestamp_ns": 23363013471230
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363013465079,
        "end_timestamp_ns": 23363013466581
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363013429926,
        "end_timestamp_ns": 23363013463510
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363013432407,
        "end_timestamp_ns": 23363013433856
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363013427887,
        "end_timestamp_ns": 23363013431571
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363013425973,
        "end_timestamp_ns": 23363013426872
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363013425003,
        "end_timestamp_ns": 23363013425867
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363013423234,
        "end_timestamp_ns": 23363013424742
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363013423232,
        "end_timestamp_ns": 23363013424731
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363013421852,
        "end_timestamp_ns": 23363013424078
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363013421899,
        "end_timestamp_ns": 23363013423319
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363011837558,
        "end_timestamp_ns": 23363011840326
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363010281108,
        "end_timestamp_ns": 23363010284435
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363010278281,
        "end_timestamp_ns": 23363010280019
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363010187578,
        "end_timestamp_ns": 23363010275888
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363010213310,
        "end_timestamp_ns": 23363010233577
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363010210496,
        "end_timestamp_ns": 23363010212195
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363010186352,
        "end_timestamp_ns": 23363010208641
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363010204853,
        "end_timestamp_ns": 23363010208065
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363010202495,
        "end_timestamp_ns": 23363010203888
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363010186375,
        "end_timestamp_ns": 23363010200828
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363010192008,
        "end_timestamp_ns": 23363010193456
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363010186354,
        "end_timestamp_ns": 23363010190715
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363010183973,
        "end_timestamp_ns": 23363010185527
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363010184035,
        "end_timestamp_ns": 23363010185057
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363010183183,
        "end_timestamp_ns": 23363010183926
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363010181213,
        "end_timestamp_ns": 23363010182042
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363010181098,
        "end_timestamp_ns": 23363010182015
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363010178415,
        "end_timestamp_ns": 23363010180436
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363010178281,
        "end_timestamp_ns": 23363010180307
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363010178361,
        "end_timestamp_ns": 23363010180178
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363007733985,
        "end_timestamp_ns": 23363007737900
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363007732075,
        "end_timestamp_ns": 23363007732924
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363007710094,
        "end_timestamp_ns": 23363007730758
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363007726851,
        "end_timestamp_ns": 23363007728739
      },
      {
        "id": "futex",
        "stack_id": 2580,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363007709194,
        "end_timestamp_ns": 23363007725256
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363007716006,
        "end_timestamp_ns": 23363007717642
      },
      {
        "id": "write",
        "stack_id": 1136,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363007709196,
        "end_timestamp_ns": 23363007714853
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363007700377,
        "end_timestamp_ns": 23363007708997
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363007707145,
        "end_timestamp_ns": 23363007708133
      },
      {
        "id": "futex",
        "stack_id": 4376,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363007704286,
        "end_timestamp_ns": 23363007706498
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363007704029,
        "end_timestamp_ns": 23363007705705
      },
      {
        "id": "write",
        "stack_id": 1318,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363007697441,
        "end_timestamp_ns": 23363007703020
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363007688288,
        "end_timestamp_ns": 23363007689279
      },
      {
        "id": "futex",
        "stack_id": 8723,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363007684689,
        "end_timestamp_ns": 23363007687453
      },
      {
        "id": "futex",
        "stack_id": 7007,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363007684665,
        "end_timestamp_ns": 23363007687059
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363005004373,
        "end_timestamp_ns": 23363005005591
      },
      {
        "id": "sched_yield",
        "stack_id": 2269,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363005001054,
        "end_timestamp_ns": 23363005003404
      },
      {
        "id": "sched_yield",
        "stack_id": 10566,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363005000284,
        "end_timestamp_ns": 23363005001397
      },
      {
        "id": "sched_yield",
        "stack_id": 14683,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363004997672,
        "end_timestamp_ns": 23363005000590
      },
      {
        "id": "sched_yield",
        "stack_id": 10566,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004997421,
        "end_timestamp_ns": 23363004999529
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363004988985,
        "end_timestamp_ns": 23363004997313
      },
      {
        "id": "read",
        "stack_id": 12081,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363004985566,
        "end_timestamp_ns": 23363004995697
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363004986609,
        "end_timestamp_ns": 23363004993630
      },
      {
        "id": "openat",
        "stack_id": 16013,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363004965630,
        "end_timestamp_ns": 23363004980505
      },
      {
        "id": "gettid",
        "stack_id": 6976,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363004977199,
        "end_timestamp_ns": 23363004978209
      },
      {
        "id": "gettid",
        "stack_id": 12768,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363004972511,
        "end_timestamp_ns": 23363004974003
      },
      {
        "id": "clock_gettime",
        "stack_id": 11865,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363004957242,
        "end_timestamp_ns": 23363004959279
      },
      {
        "id": "clock_gettime",
        "stack_id": 13412,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363004957244,
        "end_timestamp_ns": 23363004959176
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363004956096,
        "end_timestamp_ns": 23363004957009
      },
      {
        "id": "clock_gettime",
        "stack_id": 1103,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363004955390,
        "end_timestamp_ns": 23363004956814
      },
      {
        "id": "futex",
        "stack_id": 12187,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363004953840,
        "end_timestamp_ns": 23363004955610
      },
      {
        "id": "futex",
        "stack_id": 12187,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363004953924,
        "end_timestamp_ns": 23363004955609
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363004933554,
        "end_timestamp_ns": 23363004954860
      },
      {
        "id": "futex",
        "stack_id": 12187,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363004932347,
        "end_timestamp_ns": 23363004954106
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363004931808,
        "end_timestamp_ns": 23363004933815
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551767,
        "start_timestamp_ns": 23363004930330,
        "end_timestamp_ns": 23363004932337
      },
      {
        "id": "futex",
        "stack_id": 295,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23363004821650,
        "end_timestamp_ns": 23363004932049
      },
      {
        "id": "futex",
        "stack_id": 295,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23363004818487,
        "end_timestamp_ns": 23363004932052
      },
      {
        "id": "futex",
        "stack_id": 295,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23363004819209,
        "end_timestamp_ns": 23363004930615
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363004890029,
        "end_timestamp_ns": 23363004892038
      },
      {
        "id": "clock_gettime",
        "stack_id": 8077,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004872885,
        "end_timestamp_ns": 23363004889969
      },
      {
        "id": "futex",
        "stack_id": 1202,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004865972,
        "end_timestamp_ns": 23363004868905
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363004844044,
        "end_timestamp_ns": 23363004847072
      },
      {
        "id": "write",
        "stack_id": 11348,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004841088,
        "end_timestamp_ns": 23363004846080
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 12466,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004832918,
        "end_timestamp_ns": 23363004837286
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004817003,
        "end_timestamp_ns": 23363004832222
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363004814270,
        "end_timestamp_ns": 23363004825660
      },
      {
        "id": "times",
        "stack_id": 5027,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363004822777,
        "end_timestamp_ns": 23363004825482
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363004820474,
        "end_timestamp_ns": 23363004821415
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363004818828,
        "end_timestamp_ns": 23363004819762
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551766,
        "start_timestamp_ns": 23363004815956,
        "end_timestamp_ns": 23363004817871
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 2212,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004811647,
        "end_timestamp_ns": 23363004816299
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 8976,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004786891,
        "end_timestamp_ns": 23363004810016
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004775510,
        "end_timestamp_ns": 23363004786207
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15193,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004770388,
        "end_timestamp_ns": 23363004774807
      },
      {
        "id": "getpid",
        "stack_id": 15962,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363004763989,
        "end_timestamp_ns": 23363004765898
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363004743589,
        "end_timestamp_ns": 23363004744560
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363004741397,
        "end_timestamp_ns": 23363004742879
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551765,
        "start_timestamp_ns": 23363004738351,
        "end_timestamp_ns": 23363004740438
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6786,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004710672,
        "end_timestamp_ns": 23363004733631
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004689610,
        "end_timestamp_ns": 23363004709913
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15961,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004684032,
        "end_timestamp_ns": 23363004688765
      },
      {
        "id": "write",
        "stack_id": 10152,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004672706,
        "end_timestamp_ns": 23363004677985
      },
      {
        "id": "gettid",
        "stack_id": 13112,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004669147,
        "end_timestamp_ns": 23363004670124
      },
      {
        "id": "close",
        "stack_id": 7695,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004659493,
        "end_timestamp_ns": 23363004660613
      },
      {
        "id": "getdents64",
        "stack_id": 15614,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004657682,
        "end_timestamp_ns": 23363004658792
      },
      {
        "id": "getdents64",
        "stack_id": 7972,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004647135,
        "end_timestamp_ns": 23363004655763
      },
      {
        "id": "newfstatat",
        "stack_id": 10124,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004643021,
        "end_timestamp_ns": 23363004644875
      },
      {
        "id": "openat",
        "stack_id": 7630,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004638467,
        "end_timestamp_ns": 23363004642420
      },
      {
        "id": "gettid",
        "stack_id": 102,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004625415,
        "end_timestamp_ns": 23363004626714
      },
      {
        "id": "unlink",
        "stack_id": 7599,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004590649,
        "end_timestamp_ns": 23363004616757
      },
      {
        "id": "close",
        "stack_id": 2761,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004569411,
        "end_timestamp_ns": 23363004570554
      },
      {
        "id": "getdents64",
        "stack_id": 10441,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004567587,
        "end_timestamp_ns": 23363004568701
      },
      {
        "id": "getdents64",
        "stack_id": 7972,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004556585,
        "end_timestamp_ns": 23363004565655
      },
      {
        "id": "newfstatat",
        "stack_id": 10124,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004553475,
        "end_timestamp_ns": 23363004555266
      },
      {
        "id": "openat",
        "stack_id": 2389,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004549349,
        "end_timestamp_ns": 23363004552871
      },
      {
        "id": "unlink",
        "stack_id": 3553,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004510771,
        "end_timestamp_ns": 23363004543964
      },
      {
        "id": "close",
        "stack_id": 11040,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004504177,
        "end_timestamp_ns": 23363004505322
      },
      {
        "id": "getdents64",
        "stack_id": 8345,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004502142,
        "end_timestamp_ns": 23363004503342
      },
      {
        "id": "getdents64",
        "stack_id": 7972,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004486088,
        "end_timestamp_ns": 23363004499495
      },
      {
        "id": "newfstatat",
        "stack_id": 10124,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004478680,
        "end_timestamp_ns": 23363004480957
      },
      {
        "id": "openat",
        "stack_id": 9877,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004473177,
        "end_timestamp_ns": 23363004477964
      },
      {
        "id": "close",
        "stack_id": 11391,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363004469155,
        "end_timestamp_ns": 23363004470690
      },
      {
        "id": "fsync",
        "stack_id": 7665,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000384492,
        "end_timestamp_ns": 23363004467029
      },
      {
        "id": "fstatfs",
        "stack_id": 6354,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000381656,
        "end_timestamp_ns": 23363000383441
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000377552,
        "end_timestamp_ns": 23363000380816
      },
      {
        "id": "rename",
        "stack_id": 1768,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000358471,
        "end_timestamp_ns": 23363000376326
      },
      {
        "id": "newfstatat",
        "stack_id": 3522,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000353666,
        "end_timestamp_ns": 23363000357430
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000310802,
        "end_timestamp_ns": 23363000312137
      },
      {
        "id": "futex",
        "stack_id": 10816,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000249549,
        "end_timestamp_ns": 23363000250412
      },
      {
        "id": "futex",
        "stack_id": 10816,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000243620,
        "end_timestamp_ns": 23363000244548
      },
      {
        "id": "futex",
        "stack_id": 10816,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000227986,
        "end_timestamp_ns": 23363000228833
      },
      {
        "id": "futex",
        "stack_id": 10816,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000221995,
        "end_timestamp_ns": 23363000223120
      },
      {
        "id": "futex",
        "stack_id": 13801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000162234,
        "end_timestamp_ns": 23363000163256
      },
      {
        "id": "futex",
        "stack_id": 10816,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000156955,
        "end_timestamp_ns": 23363000158059
      },
      {
        "id": "futex",
        "stack_id": 10816,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23363000138776,
        "end_timestamp_ns": 23363000140369
      },
      {
        "id": "futex",
        "stack_id": 10816,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362999948107,
        "end_timestamp_ns": 23362999949865
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362999844267,
        "end_timestamp_ns": 23362999845243
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362999824401,
        "end_timestamp_ns": 23362999843541
      },
      {
        "id": "newfstatat",
        "stack_id": 15528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362999821095,
        "end_timestamp_ns": 23362999823479
      },
      {
        "id": "brk",
        "stack_id": 881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362999811288,
        "end_timestamp_ns": 23362999815383
      },
      {
        "id": "fcntl",
        "stack_id": 11453,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362999808182,
        "end_timestamp_ns": 23362999809138
      },
      {
        "id": "fcntl",
        "stack_id": 10768,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362999806318,
        "end_timestamp_ns": 23362999807362
      },
      {
        "id": "fcntl",
        "stack_id": 10768,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362999804330,
        "end_timestamp_ns": 23362999805644
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362999798936,
        "end_timestamp_ns": 23362999803523
      },
      {
        "id": "close",
        "stack_id": 13486,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362999792035,
        "end_timestamp_ns": 23362999793609
      },
      {
        "id": "fsync",
        "stack_id": 14847,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362998467707,
        "end_timestamp_ns": 23362999789558
      },
      {
        "id": "write",
        "stack_id": 7538,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362998453977,
        "end_timestamp_ns": 23362998466506
      },
      {
        "id": "brk",
        "stack_id": 881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362998360458,
        "end_timestamp_ns": 23362998368341
      },
      {
        "id": "sync_file_range",
        "stack_id": 14285,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362998356532,
        "end_timestamp_ns": 23362998357901
      },
      {
        "id": "fstatfs",
        "stack_id": 5450,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362998354104,
        "end_timestamp_ns": 23362998355869
      },
      {
        "id": "fcntl",
        "stack_id": 7660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362998352206,
        "end_timestamp_ns": 23362998353185
      },
      {
        "id": "fcntl",
        "stack_id": 7660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362998350146,
        "end_timestamp_ns": 23362998351527
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362998331145,
        "end_timestamp_ns": 23362998349133
      },
      {
        "id": "write",
        "stack_id": 16157,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362998299627,
        "end_timestamp_ns": 23362998315699
      },
      {
        "id": "fsync",
        "stack_id": 12503,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362997054731,
        "end_timestamp_ns": 23362998296370
      },
      {
        "id": "rename",
        "stack_id": 14521,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362997000237,
        "end_timestamp_ns": 23362997045630
      },
      {
        "id": "close",
        "stack_id": 1741,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362996994827,
        "end_timestamp_ns": 23362996996482
      },
      {
        "id": "fdatasync",
        "stack_id": 10006,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362995611472,
        "end_timestamp_ns": 23362996992886
      },
      {
        "id": "write",
        "stack_id": 14890,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362995601046,
        "end_timestamp_ns": 23362995610620
      },
      {
        "id": "sync_file_range",
        "stack_id": 7086,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362995599055,
        "end_timestamp_ns": 23362995600262
      },
      {
        "id": "fstatfs",
        "stack_id": 6621,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362995596378,
        "end_timestamp_ns": 23362995598347
      },
      {
        "id": "fcntl",
        "stack_id": 9732,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362995594342,
        "end_timestamp_ns": 23362995595356
      },
      {
        "id": "fcntl",
        "stack_id": 9732,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362995592224,
        "end_timestamp_ns": 23362995593661
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362995570897,
        "end_timestamp_ns": 23362995591200
      },
      {
        "id": "fdatasync",
        "stack_id": 4791,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994104061,
        "end_timestamp_ns": 23362995565493
      },
      {
        "id": "write",
        "stack_id": 12401,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994100219,
        "end_timestamp_ns": 23362994102796
      },
      {
        "id": "write",
        "stack_id": 12401,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994096078,
        "end_timestamp_ns": 23362994099075
      },
      {
        "id": "write",
        "stack_id": 14170,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994085716,
        "end_timestamp_ns": 23362994089560
      },
      {
        "id": "write",
        "stack_id": 11970,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994063466,
        "end_timestamp_ns": 23362994071446
      },
      {
        "id": "fallocate",
        "stack_id": 5011,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994041798,
        "end_timestamp_ns": 23362994059534
      },
      {
        "id": "sync_file_range",
        "stack_id": 9993,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994032003,
        "end_timestamp_ns": 23362994033137
      },
      {
        "id": "fstatfs",
        "stack_id": 965,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994029884,
        "end_timestamp_ns": 23362994031396
      },
      {
        "id": "fcntl",
        "stack_id": 11656,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994028114,
        "end_timestamp_ns": 23362994029092
      },
      {
        "id": "fcntl",
        "stack_id": 11656,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994026276,
        "end_timestamp_ns": 23362994027481
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994012616,
        "end_timestamp_ns": 23362994025494
      },
      {
        "id": "gettid",
        "stack_id": 9283,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362994007994,
        "end_timestamp_ns": 23362994009174
      },
      {
        "id": "fcntl",
        "stack_id": 2168,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993987768,
        "end_timestamp_ns": 23362993988840
      },
      {
        "id": "sync_file_range",
        "stack_id": 10099,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993985707,
        "end_timestamp_ns": 23362993986783
      },
      {
        "id": "fstatfs",
        "stack_id": 11207,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993983626,
        "end_timestamp_ns": 23362993985097
      },
      {
        "id": "fcntl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993981782,
        "end_timestamp_ns": 23362993982677
      },
      {
        "id": "fcntl",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993979800,
        "end_timestamp_ns": 23362993981131
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993942972,
        "end_timestamp_ns": 23362993978937
      },
      {
        "id": "gettid",
        "stack_id": 12929,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993932341,
        "end_timestamp_ns": 23362993933492
      },
      {
        "id": "close",
        "stack_id": 6963,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993927246,
        "end_timestamp_ns": 23362993928370
      },
      {
        "id": "ftruncate",
        "stack_id": 12921,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993912405,
        "end_timestamp_ns": 23362993926191
      },
      {
        "id": "sync_file_range",
        "stack_id": 14552,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993910000,
        "end_timestamp_ns": 23362993911314
      },
      {
        "id": "fstatfs",
        "stack_id": 14454,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993907414,
        "end_timestamp_ns": 23362993909068
      },
      {
        "id": "fcntl",
        "stack_id": 14756,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993905387,
        "end_timestamp_ns": 23362993906355
      },
      {
        "id": "fcntl",
        "stack_id": 14756,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993903645,
        "end_timestamp_ns": 23362993904733
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993899408,
        "end_timestamp_ns": 23362993902979
      },
      {
        "id": "newfstatat",
        "stack_id": 799,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993894929,
        "end_timestamp_ns": 23362993897135
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993891054,
        "end_timestamp_ns": 23362993891965
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993878432,
        "end_timestamp_ns": 23362993884233
      },
      {
        "id": "newfstatat",
        "stack_id": 15528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993875596,
        "end_timestamp_ns": 23362993877627
      },
      {
        "id": "fcntl",
        "stack_id": 11453,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993870913,
        "end_timestamp_ns": 23362993871711
      },
      {
        "id": "fcntl",
        "stack_id": 8966,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993868943,
        "end_timestamp_ns": 23362993869877
      },
      {
        "id": "fcntl",
        "stack_id": 8966,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993867002,
        "end_timestamp_ns": 23362993868292
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993862897,
        "end_timestamp_ns": 23362993866294
      },
      {
        "id": "gettid",
        "stack_id": 1325,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993859520,
        "end_timestamp_ns": 23362993860632
      },
      {
        "id": "gettid",
        "stack_id": 2722,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993856679,
        "end_timestamp_ns": 23362993857638
      },
      {
        "id": "gettid",
        "stack_id": 2722,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993853714,
        "end_timestamp_ns": 23362993854945
      },
      {
        "id": "gettid",
        "stack_id": 13669,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993848769,
        "end_timestamp_ns": 23362993850135
      },
      {
        "id": "close",
        "stack_id": 12593,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993827677,
        "end_timestamp_ns": 23362993829036
      },
      {
        "id": "getdents64",
        "stack_id": 5546,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993825772,
        "end_timestamp_ns": 23362993826872
      },
      {
        "id": "getdents64",
        "stack_id": 7972,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993813598,
        "end_timestamp_ns": 23362993823385
      },
      {
        "id": "newfstatat",
        "stack_id": 10124,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993811045,
        "end_timestamp_ns": 23362993812578
      },
      {
        "id": "openat",
        "stack_id": 1380,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993808122,
        "end_timestamp_ns": 23362993810427
      },
      {
        "id": "fstatfs",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993802728,
        "end_timestamp_ns": 23362993805281
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993798564,
        "end_timestamp_ns": 23362993801590
      },
      {
        "id": "newfstatat",
        "stack_id": 12947,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993795808,
        "end_timestamp_ns": 23362993797664
      },
      {
        "id": "mkdir",
        "stack_id": 2116,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993792502,
        "end_timestamp_ns": 23362993794977
      },
      {
        "id": "newfstatat",
        "stack_id": 455,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993788805,
        "end_timestamp_ns": 23362993790926
      },
      {
        "id": "newfstatat",
        "stack_id": 455,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993785992,
        "end_timestamp_ns": 23362993788110
      },
      {
        "id": "newfstatat",
        "stack_id": 455,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993782602,
        "end_timestamp_ns": 23362993785234
      },
      {
        "id": "newfstatat",
        "stack_id": 455,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993777582,
        "end_timestamp_ns": 23362993781585
      },
      {
        "id": "close",
        "stack_id": 13707,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993515965,
        "end_timestamp_ns": 23362993518030
      },
      {
        "id": "getdents64",
        "stack_id": 5546,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993513353,
        "end_timestamp_ns": 23362993514851
      },
      {
        "id": "getdents64",
        "stack_id": 7972,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993489483,
        "end_timestamp_ns": 23362993509547
      },
      {
        "id": "newfstatat",
        "stack_id": 10124,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993482458,
        "end_timestamp_ns": 23362993485094
      },
      {
        "id": "openat",
        "stack_id": 11044,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993476597,
        "end_timestamp_ns": 23362993481589
      },
      {
        "id": "gettid",
        "stack_id": 1255,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993467116,
        "end_timestamp_ns": 23362993468628
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993462884,
        "end_timestamp_ns": 23362993463948
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993459866,
        "end_timestamp_ns": 23362993461009
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993457145,
        "end_timestamp_ns": 23362993458353
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993298828,
        "end_timestamp_ns": 23362993456046
      },
      {
        "id": "newfstatat",
        "stack_id": 15528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993294611,
        "end_timestamp_ns": 23362993297844
      },
      {
        "id": "fcntl",
        "stack_id": 11453,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993288678,
        "end_timestamp_ns": 23362993289624
      },
      {
        "id": "fcntl",
        "stack_id": 11218,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993286592,
        "end_timestamp_ns": 23362993287573
      },
      {
        "id": "fcntl",
        "stack_id": 11218,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993284396,
        "end_timestamp_ns": 23362993285922
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993276917,
        "end_timestamp_ns": 23362993283165
      },
      {
        "id": "access",
        "stack_id": 8153,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993253575,
        "end_timestamp_ns": 23362993273163
      },
      {
        "id": "gettid",
        "stack_id": 1767,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993248929,
        "end_timestamp_ns": 23362993250045
      },
      {
        "id": "gettid",
        "stack_id": 770,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993236310,
        "end_timestamp_ns": 23362993238927
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993228685,
        "end_timestamp_ns": 23362993231132
      },
      {
        "id": "munmap",
        "stack_id": 10663,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993179437,
        "end_timestamp_ns": 23362993190527
      },
      {
        "id": "munmap",
        "stack_id": 7802,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993167240,
        "end_timestamp_ns": 23362993178284
      },
      {
        "id": "munmap",
        "stack_id": 2870,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993154026,
        "end_timestamp_ns": 23362993165731
      },
      {
        "id": "munmap",
        "stack_id": 15253,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993143756,
        "end_timestamp_ns": 23362993152839
      },
      {
        "id": "munmap",
        "stack_id": 7281,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993129735,
        "end_timestamp_ns": 23362993142184
      },
      {
        "id": "munmap",
        "stack_id": 9168,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993119197,
        "end_timestamp_ns": 23362993128546
      },
      {
        "id": "munmap",
        "stack_id": 12439,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993108484,
        "end_timestamp_ns": 23362993117915
      },
      {
        "id": "munmap",
        "stack_id": 10550,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993095309,
        "end_timestamp_ns": 23362993107301
      },
      {
        "id": "munmap",
        "stack_id": 11660,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993080958,
        "end_timestamp_ns": 23362993093820
      },
      {
        "id": "munmap",
        "stack_id": 15258,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993066977,
        "end_timestamp_ns": 23362993079766
      },
      {
        "id": "munmap",
        "stack_id": 5678,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993054916,
        "end_timestamp_ns": 23362993065782
      },
      {
        "id": "munmap",
        "stack_id": 13311,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993044613,
        "end_timestamp_ns": 23362993053597
      },
      {
        "id": "munmap",
        "stack_id": 15412,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993032112,
        "end_timestamp_ns": 23362993043459
      },
      {
        "id": "munmap",
        "stack_id": 15505,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993022008,
        "end_timestamp_ns": 23362993030995
      },
      {
        "id": "munmap",
        "stack_id": 4132,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993011963,
        "end_timestamp_ns": 23362993020715
      },
      {
        "id": "munmap",
        "stack_id": 12082,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362993002021,
        "end_timestamp_ns": 23362993010767
      },
      {
        "id": "munmap",
        "stack_id": 1631,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362992991441,
        "end_timestamp_ns": 23362993000864
      },
      {
        "id": "munmap",
        "stack_id": 1844,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362992980967,
        "end_timestamp_ns": 23362992990231
      },
      {
        "id": "munmap",
        "stack_id": 3136,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362992970051,
        "end_timestamp_ns": 23362992979899
      },
      {
        "id": "munmap",
        "stack_id": 9997,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362992957585,
        "end_timestamp_ns": 23362992968896
      },
      {
        "id": "munmap",
        "stack_id": 9696,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362992943781,
        "end_timestamp_ns": 23362992956237
      },
      {
        "id": "munmap",
        "stack_id": 6256,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362992933480,
        "end_timestamp_ns": 23362992942759
      },
      {
        "id": "munmap",
        "stack_id": 13268,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362992916968,
        "end_timestamp_ns": 23362992932258
      },
      {
        "id": "munmap",
        "stack_id": 12581,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362992905072,
        "end_timestamp_ns": 23362992915873
      },
      {
        "id": "munmap",
        "stack_id": 6203,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362992893658,
        "end_timestamp_ns": 23362992904023
      },
      {
        "id": "munmap",
        "stack_id": 1823,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362992880324,
        "end_timestamp_ns": 23362992892231
      },
      {
        "id": "munmap",
        "stack_id": 15052,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362992857464,
        "end_timestamp_ns": 23362992878957
      },
      {
        "id": "futex",
        "stack_id": 12151,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362986137795,
        "end_timestamp_ns": 23362992849447
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362992800047,
        "end_timestamp_ns": 23362992806352
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362992795461,
        "end_timestamp_ns": 23362992799102
      },
      {
        "id": "pread64",
        "stack_id": 12796,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362985792260,
        "end_timestamp_ns": 23362992092482
      },
      {
        "id": "futex",
        "stack_id": 12151,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985837410,
        "end_timestamp_ns": 23362986135941
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362986123558,
        "end_timestamp_ns": 23362986127991
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362986121057,
        "end_timestamp_ns": 23362986122644
      },
      {
        "id": "pread64",
        "stack_id": 12796,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362985784310,
        "end_timestamp_ns": 23362986030897
      },
      {
        "id": "futex",
        "stack_id": 12151,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985590994,
        "end_timestamp_ns": 23362985835734
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362985826759,
        "end_timestamp_ns": 23362985830391
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362985826056,
        "end_timestamp_ns": 23362985828918
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362985824874,
        "end_timestamp_ns": 23362985825986
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362985823964,
        "end_timestamp_ns": 23362985825111
      },
      {
        "id": "pread64",
        "stack_id": 12796,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362985774660,
        "end_timestamp_ns": 23362985812416
      },
      {
        "id": "pread64",
        "stack_id": 12796,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362985771238,
        "end_timestamp_ns": 23362985811435
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362985773389,
        "end_timestamp_ns": 23362985786647
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362985773688,
        "end_timestamp_ns": 23362985780591
      },
      {
        "id": "futex",
        "stack_id": 15285,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362985759736,
        "end_timestamp_ns": 23362985768226
      },
      {
        "id": "futex",
        "stack_id": 15285,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362985758719,
        "end_timestamp_ns": 23362985767665
      },
      {
        "id": "futex",
        "stack_id": 10816,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362985762795,
        "end_timestamp_ns": 23362985765010
      },
      {
        "id": "pread64",
        "stack_id": 15865,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362985740887,
        "end_timestamp_ns": 23362985742919
      },
      {
        "id": "pread64",
        "stack_id": 560,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362985735622,
        "end_timestamp_ns": 23362985738171
      },
      {
        "id": "pread64",
        "stack_id": 15865,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362985724804,
        "end_timestamp_ns": 23362985727363
      },
      {
        "id": "pread64",
        "stack_id": 15865,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362985723857,
        "end_timestamp_ns": 23362985726915
      },
      {
        "id": "pread64",
        "stack_id": 15865,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362985723739,
        "end_timestamp_ns": 23362985726780
      },
      {
        "id": "pread64",
        "stack_id": 1783,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362985292928,
        "end_timestamp_ns": 23362985723968
      },
      {
        "id": "pread64",
        "stack_id": 560,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362985611965,
        "end_timestamp_ns": 23362985614161
      },
      {
        "id": "pread64",
        "stack_id": 1783,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362985292930,
        "end_timestamp_ns": 23362985601401
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551764,
        "start_timestamp_ns": 23362985590555,
        "end_timestamp_ns": 23362985592418
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551764,
        "start_timestamp_ns": 23362985589139,
        "end_timestamp_ns": 23362985589861
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6786,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985583170,
        "end_timestamp_ns": 23362985587951
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551764,
        "start_timestamp_ns": 23362985587221,
        "end_timestamp_ns": 23362985587960
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551764,
        "start_timestamp_ns": 23362985585865,
        "end_timestamp_ns": 23362985586545
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551764,
        "start_timestamp_ns": 23362985584227,
        "end_timestamp_ns": 23362985585067
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985571953,
        "end_timestamp_ns": 23362985582372
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15961,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985566340,
        "end_timestamp_ns": 23362985571193
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985549792,
        "end_timestamp_ns": 23362985556763
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551763,
        "start_timestamp_ns": 23362985546015,
        "end_timestamp_ns": 23362985552112
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985545031,
        "end_timestamp_ns": 23362985549027
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551763,
        "start_timestamp_ns": 23362985544600,
        "end_timestamp_ns": 23362985545328
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 8976,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985538861,
        "end_timestamp_ns": 23362985543653
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551763,
        "start_timestamp_ns": 23362985542700,
        "end_timestamp_ns": 23362985543437
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551763,
        "start_timestamp_ns": 23362985541351,
        "end_timestamp_ns": 23362985542024
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551763,
        "start_timestamp_ns": 23362985539731,
        "end_timestamp_ns": 23362985540553
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985526197,
        "end_timestamp_ns": 23362985537889
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15193,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985520636,
        "end_timestamp_ns": 23362985525439
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985504731,
        "end_timestamp_ns": 23362985512964
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551762,
        "start_timestamp_ns": 23362985502251,
        "end_timestamp_ns": 23362985507832
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985500339,
        "end_timestamp_ns": 23362985503980
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551762,
        "start_timestamp_ns": 23362985500819,
        "end_timestamp_ns": 23362985501534
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 12466,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985494639,
        "end_timestamp_ns": 23362985499390
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551762,
        "start_timestamp_ns": 23362985498602,
        "end_timestamp_ns": 23362985499342
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551762,
        "start_timestamp_ns": 23362985497248,
        "end_timestamp_ns": 23362985497930
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551762,
        "start_timestamp_ns": 23362985495663,
        "end_timestamp_ns": 23362985496484
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985482365,
        "end_timestamp_ns": 23362985493832
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 2212,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985476861,
        "end_timestamp_ns": 23362985481598
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985461369,
        "end_timestamp_ns": 23362985468576
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551761,
        "start_timestamp_ns": 23362985458943,
        "end_timestamp_ns": 23362985463617
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985457114,
        "end_timestamp_ns": 23362985460629
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551761,
        "start_timestamp_ns": 23362985457507,
        "end_timestamp_ns": 23362985458220
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985451407,
        "end_timestamp_ns": 23362985456133
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551761,
        "start_timestamp_ns": 23362985455251,
        "end_timestamp_ns": 23362985456000
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551761,
        "start_timestamp_ns": 23362985453896,
        "end_timestamp_ns": 23362985454571
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551761,
        "start_timestamp_ns": 23362985452296,
        "end_timestamp_ns": 23362985453136
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985439106,
        "end_timestamp_ns": 23362985450596
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6138,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985433564,
        "end_timestamp_ns": 23362985438349
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985416928,
        "end_timestamp_ns": 23362985425740
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551760,
        "start_timestamp_ns": 23362985415012,
        "end_timestamp_ns": 23362985419679
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985412940,
        "end_timestamp_ns": 23362985416174
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551760,
        "start_timestamp_ns": 23362985413567,
        "end_timestamp_ns": 23362985414289
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11718,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985407189,
        "end_timestamp_ns": 23362985411954
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551760,
        "start_timestamp_ns": 23362985411156,
        "end_timestamp_ns": 23362985411894
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551760,
        "start_timestamp_ns": 23362985409813,
        "end_timestamp_ns": 23362985410488
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551760,
        "start_timestamp_ns": 23362985408145,
        "end_timestamp_ns": 23362985409000
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985394711,
        "end_timestamp_ns": 23362985406355
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 10978,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985389128,
        "end_timestamp_ns": 23362985393933
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985369747,
        "end_timestamp_ns": 23362985376323
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551759,
        "start_timestamp_ns": 23362985369200,
        "end_timestamp_ns": 23362985371740
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985365575,
        "end_timestamp_ns": 23362985368991
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551759,
        "start_timestamp_ns": 23362985367710,
        "end_timestamp_ns": 23362985368480
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551759,
        "start_timestamp_ns": 23362985365088,
        "end_timestamp_ns": 23362985365945
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 13157,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985359643,
        "end_timestamp_ns": 23362985364573
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551759,
        "start_timestamp_ns": 23362985363574,
        "end_timestamp_ns": 23362985364383
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551759,
        "start_timestamp_ns": 23362985361319,
        "end_timestamp_ns": 23362985362738
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985345450,
        "end_timestamp_ns": 23362985358829
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14389,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985339878,
        "end_timestamp_ns": 23362985344694
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985317211,
        "end_timestamp_ns": 23362985330127
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551758,
        "start_timestamp_ns": 23362985318453,
        "end_timestamp_ns": 23362985323377
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551758,
        "start_timestamp_ns": 23362985316784,
        "end_timestamp_ns": 23362985317576
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985313336,
        "end_timestamp_ns": 23362985316463
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551758,
        "start_timestamp_ns": 23362985313792,
        "end_timestamp_ns": 23362985314664
      },
      {
        "id": "pread64",
        "stack_id": 560,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362985312086,
        "end_timestamp_ns": 23362985314183
      },
      {
        "id": "pread64",
        "stack_id": 560,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362985310982,
        "end_timestamp_ns": 23362985313586
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551758,
        "start_timestamp_ns": 23362985312172,
        "end_timestamp_ns": 23362985312963
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 3732,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985307560,
        "end_timestamp_ns": 23362985312390
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551758,
        "start_timestamp_ns": 23362985309388,
        "end_timestamp_ns": 23362985311100
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985294655,
        "end_timestamp_ns": 23362985306740
      },
      {
        "id": "pread64",
        "stack_id": 1783,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362985292924,
        "end_timestamp_ns": 23362985298108
      },
      {
        "id": "pread64",
        "stack_id": 1783,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362985292641,
        "end_timestamp_ns": 23362985297424
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9519,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985288978,
        "end_timestamp_ns": 23362985293907
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985271603,
        "end_timestamp_ns": 23362985280695
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551757,
        "start_timestamp_ns": 23362985270643,
        "end_timestamp_ns": 23362985273915
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985267805,
        "end_timestamp_ns": 23362985270836
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551757,
        "start_timestamp_ns": 23362985268625,
        "end_timestamp_ns": 23362985269552
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551757,
        "start_timestamp_ns": 23362985266107,
        "end_timestamp_ns": 23362985267029
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9309,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985262031,
        "end_timestamp_ns": 23362985266799
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551757,
        "start_timestamp_ns": 23362985264715,
        "end_timestamp_ns": 23362985265385
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551757,
        "start_timestamp_ns": 23362985263120,
        "end_timestamp_ns": 23362985263923
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985249549,
        "end_timestamp_ns": 23362985261211
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 12681,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985243868,
        "end_timestamp_ns": 23362985248776
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985228732,
        "end_timestamp_ns": 23362985235706
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551756,
        "start_timestamp_ns": 23362985226293,
        "end_timestamp_ns": 23362985230725
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985224645,
        "end_timestamp_ns": 23362985227973
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551756,
        "start_timestamp_ns": 23362985224914,
        "end_timestamp_ns": 23362985225634
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14813,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985218837,
        "end_timestamp_ns": 23362985223691
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551756,
        "start_timestamp_ns": 23362985222839,
        "end_timestamp_ns": 23362985223590
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551756,
        "start_timestamp_ns": 23362985221494,
        "end_timestamp_ns": 23362985222171
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551756,
        "start_timestamp_ns": 23362985219858,
        "end_timestamp_ns": 23362985220723
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985207201,
        "end_timestamp_ns": 23362985217995
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14123,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985201637,
        "end_timestamp_ns": 23362985206429
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985186344,
        "end_timestamp_ns": 23362985193905
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551755,
        "start_timestamp_ns": 23362985184060,
        "end_timestamp_ns": 23362985189746
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985182512,
        "end_timestamp_ns": 23362985185562
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551755,
        "start_timestamp_ns": 23362985182610,
        "end_timestamp_ns": 23362985183338
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6438,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985176624,
        "end_timestamp_ns": 23362985181488
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551755,
        "start_timestamp_ns": 23362985180488,
        "end_timestamp_ns": 23362985181235
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551755,
        "start_timestamp_ns": 23362985179143,
        "end_timestamp_ns": 23362985179827
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551755,
        "start_timestamp_ns": 23362985177541,
        "end_timestamp_ns": 23362985178342
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985162166,
        "end_timestamp_ns": 23362985175667
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985156592,
        "end_timestamp_ns": 23362985161393
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985141741,
        "end_timestamp_ns": 23362985148923
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551754,
        "start_timestamp_ns": 23362985139607,
        "end_timestamp_ns": 23362985144500
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985137776,
        "end_timestamp_ns": 23362985140975
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551754,
        "start_timestamp_ns": 23362985138154,
        "end_timestamp_ns": 23362985138881
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11938,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985132043,
        "end_timestamp_ns": 23362985136813
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551754,
        "start_timestamp_ns": 23362985136012,
        "end_timestamp_ns": 23362985136764
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551754,
        "start_timestamp_ns": 23362985134667,
        "end_timestamp_ns": 23362985135330
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551754,
        "start_timestamp_ns": 23362985133077,
        "end_timestamp_ns": 23362985133884
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985120035,
        "end_timestamp_ns": 23362985131220
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 8007,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985114422,
        "end_timestamp_ns": 23362985119263
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985097483,
        "end_timestamp_ns": 23362985104530
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551753,
        "start_timestamp_ns": 23362985096762,
        "end_timestamp_ns": 23362985098808
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985094321,
        "end_timestamp_ns": 23362985096734
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551753,
        "start_timestamp_ns": 23362985095358,
        "end_timestamp_ns": 23362985096080
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551753,
        "start_timestamp_ns": 23362985092867,
        "end_timestamp_ns": 23362985093655
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9495,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985088492,
        "end_timestamp_ns": 23362985093307
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551753,
        "start_timestamp_ns": 23362985091532,
        "end_timestamp_ns": 23362985092207
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551753,
        "start_timestamp_ns": 23362985089831,
        "end_timestamp_ns": 23362985090756
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985076220,
        "end_timestamp_ns": 23362985087696
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7054,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985070656,
        "end_timestamp_ns": 23362985075455
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551752,
        "start_timestamp_ns": 23362985057267,
        "end_timestamp_ns": 23362985065200
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985056212,
        "end_timestamp_ns": 23362985060988
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551752,
        "start_timestamp_ns": 23362985055693,
        "end_timestamp_ns": 23362985056486
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985052740,
        "end_timestamp_ns": 23362985055458
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551752,
        "start_timestamp_ns": 23362985052245,
        "end_timestamp_ns": 23362985053160
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 8856,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985046578,
        "end_timestamp_ns": 23362985051741
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551752,
        "start_timestamp_ns": 23362985050745,
        "end_timestamp_ns": 23362985051551
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551752,
        "start_timestamp_ns": 23362985048439,
        "end_timestamp_ns": 23362985049915
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985031347,
        "end_timestamp_ns": 23362985045756
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11844,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985025749,
        "end_timestamp_ns": 23362985030568
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551751,
        "start_timestamp_ns": 23362985012086,
        "end_timestamp_ns": 23362985024287
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985010525,
        "end_timestamp_ns": 23362985017705
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551751,
        "start_timestamp_ns": 23362985010263,
        "end_timestamp_ns": 23362985011223
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985006403,
        "end_timestamp_ns": 23362985009787
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551751,
        "start_timestamp_ns": 23362985006800,
        "end_timestamp_ns": 23362985007812
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551751,
        "start_timestamp_ns": 23362985004962,
        "end_timestamp_ns": 23362985005852
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11691,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362985000582,
        "end_timestamp_ns": 23362985005365
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551751,
        "start_timestamp_ns": 23362985002835,
        "end_timestamp_ns": 23362985004038
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984985795,
        "end_timestamp_ns": 23362984999784
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9891,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984980212,
        "end_timestamp_ns": 23362984985042
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984958677,
        "end_timestamp_ns": 23362984972183
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551750,
        "start_timestamp_ns": 23362984954080,
        "end_timestamp_ns": 23362984965548
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984952970,
        "end_timestamp_ns": 23362984957906
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551750,
        "start_timestamp_ns": 23362984952667,
        "end_timestamp_ns": 23362984953385
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9137,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984947041,
        "end_timestamp_ns": 23362984951832
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551750,
        "start_timestamp_ns": 23362984950703,
        "end_timestamp_ns": 23362984951454
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551750,
        "start_timestamp_ns": 23362984949353,
        "end_timestamp_ns": 23362984950044
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551750,
        "start_timestamp_ns": 23362984947783,
        "end_timestamp_ns": 23362984948585
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984935019,
        "end_timestamp_ns": 23362984946229
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11242,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984929240,
        "end_timestamp_ns": 23362984934261
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984912549,
        "end_timestamp_ns": 23362984919494
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551749,
        "start_timestamp_ns": 23362984909686,
        "end_timestamp_ns": 23362984914568
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984908494,
        "end_timestamp_ns": 23362984911801
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551749,
        "start_timestamp_ns": 23362984908300,
        "end_timestamp_ns": 23362984909008
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14585,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984902650,
        "end_timestamp_ns": 23362984907370
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551749,
        "start_timestamp_ns": 23362984906292,
        "end_timestamp_ns": 23362984907038
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551749,
        "start_timestamp_ns": 23362984904963,
        "end_timestamp_ns": 23362984905653
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551749,
        "start_timestamp_ns": 23362984903407,
        "end_timestamp_ns": 23362984904179
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984889572,
        "end_timestamp_ns": 23362984901841
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 13135,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984884008,
        "end_timestamp_ns": 23362984888793
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984869274,
        "end_timestamp_ns": 23362984876197
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551748,
        "start_timestamp_ns": 23362984866442,
        "end_timestamp_ns": 23362984871307
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984865127,
        "end_timestamp_ns": 23362984868501
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551748,
        "start_timestamp_ns": 23362984865009,
        "end_timestamp_ns": 23362984865738
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14730,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984859260,
        "end_timestamp_ns": 23362984863971
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551748,
        "start_timestamp_ns": 23362984862936,
        "end_timestamp_ns": 23362984863686
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551748,
        "start_timestamp_ns": 23362984861599,
        "end_timestamp_ns": 23362984862278
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551748,
        "start_timestamp_ns": 23362984860030,
        "end_timestamp_ns": 23362984860835
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984847509,
        "end_timestamp_ns": 23362984858445
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 10720,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984841960,
        "end_timestamp_ns": 23362984846738
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984827450,
        "end_timestamp_ns": 23362984834095
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551747,
        "start_timestamp_ns": 23362984824273,
        "end_timestamp_ns": 23362984829560
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984823207,
        "end_timestamp_ns": 23362984826706
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551747,
        "start_timestamp_ns": 23362984822835,
        "end_timestamp_ns": 23362984823575
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 5947,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984817369,
        "end_timestamp_ns": 23362984822158
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551747,
        "start_timestamp_ns": 23362984820840,
        "end_timestamp_ns": 23362984821592
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551747,
        "start_timestamp_ns": 23362984819505,
        "end_timestamp_ns": 23362984820193
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551747,
        "start_timestamp_ns": 23362984817964,
        "end_timestamp_ns": 23362984818724
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984805251,
        "end_timestamp_ns": 23362984816392
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9711,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984799620,
        "end_timestamp_ns": 23362984804464
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984785276,
        "end_timestamp_ns": 23362984791825
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551746,
        "start_timestamp_ns": 23362984782433,
        "end_timestamp_ns": 23362984787600
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984781129,
        "end_timestamp_ns": 23362984784502
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551746,
        "start_timestamp_ns": 23362984781025,
        "end_timestamp_ns": 23362984781736
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11087,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984775364,
        "end_timestamp_ns": 23362984780149
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551746,
        "start_timestamp_ns": 23362984778949,
        "end_timestamp_ns": 23362984779700
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551746,
        "start_timestamp_ns": 23362984777606,
        "end_timestamp_ns": 23362984778289
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551746,
        "start_timestamp_ns": 23362984776021,
        "end_timestamp_ns": 23362984776857
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984763041,
        "end_timestamp_ns": 23362984774527
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7186,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984757113,
        "end_timestamp_ns": 23362984762265
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984740119,
        "end_timestamp_ns": 23362984749204
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551745,
        "start_timestamp_ns": 23362984737517,
        "end_timestamp_ns": 23362984742545
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984736414,
        "end_timestamp_ns": 23362984739351
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551745,
        "start_timestamp_ns": 23362984736140,
        "end_timestamp_ns": 23362984736856
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7514,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984730363,
        "end_timestamp_ns": 23362984735156
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551745,
        "start_timestamp_ns": 23362984734055,
        "end_timestamp_ns": 23362984734795
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551745,
        "start_timestamp_ns": 23362984732730,
        "end_timestamp_ns": 23362984733407
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551745,
        "start_timestamp_ns": 23362984731164,
        "end_timestamp_ns": 23362984731937
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984718167,
        "end_timestamp_ns": 23362984729545
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 1050,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984712657,
        "end_timestamp_ns": 23362984717414
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984695369,
        "end_timestamp_ns": 23362984702652
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551744,
        "start_timestamp_ns": 23362984693335,
        "end_timestamp_ns": 23362984698556
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984691554,
        "end_timestamp_ns": 23362984694600
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551744,
        "start_timestamp_ns": 23362984691934,
        "end_timestamp_ns": 23362984692665
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14770,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984685788,
        "end_timestamp_ns": 23362984690577
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551744,
        "start_timestamp_ns": 23362984689712,
        "end_timestamp_ns": 23362984690474
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551744,
        "start_timestamp_ns": 23362984688377,
        "end_timestamp_ns": 23362984689057
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551744,
        "start_timestamp_ns": 23362984686711,
        "end_timestamp_ns": 23362984687583
      },
      {
        "id": "readahead",
        "stack_id": 3431,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362984434273,
        "end_timestamp_ns": 23362984684958
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984673452,
        "end_timestamp_ns": 23362984684951
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 13026,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984667834,
        "end_timestamp_ns": 23362984672681
      },
      {
        "id": "readahead",
        "stack_id": 3431,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362984525421,
        "end_timestamp_ns": 23362984665681
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984649104,
        "end_timestamp_ns": 23362984658661
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551743,
        "start_timestamp_ns": 23362984648741,
        "end_timestamp_ns": 23362984652744
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984644103,
        "end_timestamp_ns": 23362984648381
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551743,
        "start_timestamp_ns": 23362984647186,
        "end_timestamp_ns": 23362984647973
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551743,
        "start_timestamp_ns": 23362984643860,
        "end_timestamp_ns": 23362984644751
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551743,
        "start_timestamp_ns": 23362984642357,
        "end_timestamp_ns": 23362984643139
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6204,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984638281,
        "end_timestamp_ns": 23362984643047
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551743,
        "start_timestamp_ns": 23362984640205,
        "end_timestamp_ns": 23362984641477
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984625384,
        "end_timestamp_ns": 23362984637476
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 1398,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984619791,
        "end_timestamp_ns": 23362984624627
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984599578,
        "end_timestamp_ns": 23362984610802
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551742,
        "start_timestamp_ns": 23362984597709,
        "end_timestamp_ns": 23362984601834
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984594320,
        "end_timestamp_ns": 23362984598816
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551742,
        "start_timestamp_ns": 23362984596110,
        "end_timestamp_ns": 23362984596962
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551742,
        "start_timestamp_ns": 23362984593675,
        "end_timestamp_ns": 23362984594569
      },
      {
        "id": "readahead",
        "stack_id": 3431,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984434594,
        "end_timestamp_ns": 23362984593757
      },
      {
        "id": "readahead",
        "stack_id": 3431,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984434238,
        "end_timestamp_ns": 23362984593659
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 2169,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984588304,
        "end_timestamp_ns": 23362984593083
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551742,
        "start_timestamp_ns": 23362984592019,
        "end_timestamp_ns": 23362984592858
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551742,
        "start_timestamp_ns": 23362984589987,
        "end_timestamp_ns": 23362984591062
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984573575,
        "end_timestamp_ns": 23362984587472
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 13425,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984567580,
        "end_timestamp_ns": 23362984572804
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551741,
        "start_timestamp_ns": 23362984552053,
        "end_timestamp_ns": 23362984564051
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984551794,
        "end_timestamp_ns": 23362984559773
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551741,
        "start_timestamp_ns": 23362984550382,
        "end_timestamp_ns": 23362984551264
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984548185,
        "end_timestamp_ns": 23362984551021
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551741,
        "start_timestamp_ns": 23362984547850,
        "end_timestamp_ns": 23362984548751
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 2915,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984542249,
        "end_timestamp_ns": 23362984547062
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551741,
        "start_timestamp_ns": 23362984546188,
        "end_timestamp_ns": 23362984547034
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551741,
        "start_timestamp_ns": 23362984544080,
        "end_timestamp_ns": 23362984545252
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984529554,
        "end_timestamp_ns": 23362984541415
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14098,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984523869,
        "end_timestamp_ns": 23362984528769
      },
      {
        "id": "fadvise64",
        "stack_id": 16318,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362984522109,
        "end_timestamp_ns": 23362984523275
      },
      {
        "id": "fcntl",
        "stack_id": 8695,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362984519445,
        "end_timestamp_ns": 23362984520516
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551740,
        "start_timestamp_ns": 23362984510414,
        "end_timestamp_ns": 23362984520359
      },
      {
        "id": "fcntl",
        "stack_id": 8695,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362984517064,
        "end_timestamp_ns": 23362984518609
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984509530,
        "end_timestamp_ns": 23362984515774
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362984364306,
        "end_timestamp_ns": 23362984515556
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551740,
        "start_timestamp_ns": 23362984508666,
        "end_timestamp_ns": 23362984509576
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984505823,
        "end_timestamp_ns": 23362984508759
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551740,
        "start_timestamp_ns": 23362984505489,
        "end_timestamp_ns": 23362984506491
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551740,
        "start_timestamp_ns": 23362984503766,
        "end_timestamp_ns": 23362984504668
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4762,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984499605,
        "end_timestamp_ns": 23362984504513
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551740,
        "start_timestamp_ns": 23362984501599,
        "end_timestamp_ns": 23362984502827
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984484644,
        "end_timestamp_ns": 23362984498801
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 2481,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984478911,
        "end_timestamp_ns": 23362984483866
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984461172,
        "end_timestamp_ns": 23362984468278
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984427543,
        "end_timestamp_ns": 23362984459907
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551739,
        "start_timestamp_ns": 23362984434476,
        "end_timestamp_ns": 23362984454258
      },
      {
        "id": "madvise",
        "stack_id": 10243,
        "pid_tgid": 857528875551738,
        "start_timestamp_ns": 23362984425946,
        "end_timestamp_ns": 23362984451233
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551739,
        "start_timestamp_ns": 23362984432472,
        "end_timestamp_ns": 23362984433523
      },
      {
        "id": "futex",
        "stack_id": 1167,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984431885,
        "end_timestamp_ns": 23362984433364
      },
      {
        "id": "futex",
        "stack_id": 10634,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984428289,
        "end_timestamp_ns": 23362984430624
      },
      {
        "id": "futex",
        "stack_id": 1167,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984428287,
        "end_timestamp_ns": 23362984430567
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551739,
        "start_timestamp_ns": 23362984428636,
        "end_timestamp_ns": 23362984429714
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551739,
        "start_timestamp_ns": 23362984426711,
        "end_timestamp_ns": 23362984427789
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14740,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984421563,
        "end_timestamp_ns": 23362984426361
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551739,
        "start_timestamp_ns": 23362984424076,
        "end_timestamp_ns": 23362984425740
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15156,
        "pid_tgid": 857528875551738,
        "start_timestamp_ns": 23362984423364,
        "end_timestamp_ns": 23362984425043
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984408934,
        "end_timestamp_ns": 23362984420729
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 1419,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984403293,
        "end_timestamp_ns": 23362984408131
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551738,
        "start_timestamp_ns": 23362984390573,
        "end_timestamp_ns": 23362984402019
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551738,
        "start_timestamp_ns": 23362984378638,
        "end_timestamp_ns": 23362984389740
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984378200,
        "end_timestamp_ns": 23362984384612
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984374273,
        "end_timestamp_ns": 23362984377426
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551738,
        "start_timestamp_ns": 23362984376062,
        "end_timestamp_ns": 23362984377073
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551738,
        "start_timestamp_ns": 23362984374179,
        "end_timestamp_ns": 23362984375252
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551738,
        "start_timestamp_ns": 23362984371092,
        "end_timestamp_ns": 23362984373146
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 5223,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984368184,
        "end_timestamp_ns": 23362984372935
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984354816,
        "end_timestamp_ns": 23362984367328
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362984351694,
        "end_timestamp_ns": 23362984354817
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14331,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984349052,
        "end_timestamp_ns": 23362984354000
      },
      {
        "id": "munmap",
        "stack_id": 4195,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362984339328,
        "end_timestamp_ns": 23362984350987
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362984326976,
        "end_timestamp_ns": 23362984338391
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984326567,
        "end_timestamp_ns": 23362984333357
      },
      {
        "id": "fadvise64",
        "stack_id": 16318,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362984327747,
        "end_timestamp_ns": 23362984328932
      },
      {
        "id": "fcntl",
        "stack_id": 8695,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362984325459,
        "end_timestamp_ns": 23362984326549
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984322721,
        "end_timestamp_ns": 23362984325816
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362984324157,
        "end_timestamp_ns": 23362984325198
      },
      {
        "id": "fcntl",
        "stack_id": 8695,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362984323155,
        "end_timestamp_ns": 23362984324644
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362984322304,
        "end_timestamp_ns": 23362984323282
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362984307411,
        "end_timestamp_ns": 23362984322182
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551737,
        "start_timestamp_ns": 23362984319792,
        "end_timestamp_ns": 23362984321362
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15602,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984316501,
        "end_timestamp_ns": 23362984321297
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984301888,
        "end_timestamp_ns": 23362984315638
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 12911,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984295896,
        "end_timestamp_ns": 23362984301070
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362984286471,
        "end_timestamp_ns": 23362984294820
      },
      {
        "id": "fadvise64",
        "stack_id": 16318,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984285473,
        "end_timestamp_ns": 23362984286700
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362984272335,
        "end_timestamp_ns": 23362984285612
      },
      {
        "id": "fcntl",
        "stack_id": 8695,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984283066,
        "end_timestamp_ns": 23362984284118
      },
      {
        "id": "fcntl",
        "stack_id": 8695,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984280397,
        "end_timestamp_ns": 23362984282254
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984263360,
        "end_timestamp_ns": 23362984279220
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984272203,
        "end_timestamp_ns": 23362984276168
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984267468,
        "end_timestamp_ns": 23362984271451
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362984269480,
        "end_timestamp_ns": 23362984270527
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362984267643,
        "end_timestamp_ns": 23362984268676
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551736,
        "start_timestamp_ns": 23362984264825,
        "end_timestamp_ns": 23362984266642
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 1726,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984261200,
        "end_timestamp_ns": 23362984265917
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984247566,
        "end_timestamp_ns": 23362984260402
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984243720,
        "end_timestamp_ns": 23362984248402
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9832,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984241775,
        "end_timestamp_ns": 23362984246769
      },
      {
        "id": "munmap",
        "stack_id": 4195,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984232546,
        "end_timestamp_ns": 23362984242884
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984220106,
        "end_timestamp_ns": 23362984231740
      },
      {
        "id": "fadvise64",
        "stack_id": 16318,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984224560,
        "end_timestamp_ns": 23362984225781
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984218241,
        "end_timestamp_ns": 23362984223581
      },
      {
        "id": "fcntl",
        "stack_id": 8695,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984222514,
        "end_timestamp_ns": 23362984223394
      },
      {
        "id": "fcntl",
        "stack_id": 8695,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984220188,
        "end_timestamp_ns": 23362984221815
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984206112,
        "end_timestamp_ns": 23362984219259
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984217034,
        "end_timestamp_ns": 23362984217967
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984214579,
        "end_timestamp_ns": 23362984217468
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984214988,
        "end_timestamp_ns": 23362984216305
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551735,
        "start_timestamp_ns": 23362984211633,
        "end_timestamp_ns": 23362984213852
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6376,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984208129,
        "end_timestamp_ns": 23362984212908
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984194295,
        "end_timestamp_ns": 23362984207278
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 13318,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984188433,
        "end_timestamp_ns": 23362984193497
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984162781,
        "end_timestamp_ns": 23362984175240
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984158596,
        "end_timestamp_ns": 23362984166042
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984156971,
        "end_timestamp_ns": 23362984161930
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984155025,
        "end_timestamp_ns": 23362984157800
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984154097,
        "end_timestamp_ns": 23362984154943
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 3811,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984148911,
        "end_timestamp_ns": 23362984153755
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984152616,
        "end_timestamp_ns": 23362984153408
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551734,
        "start_timestamp_ns": 23362984150341,
        "end_timestamp_ns": 23362984151761
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984131904,
        "end_timestamp_ns": 23362984148014
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 1049,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984126062,
        "end_timestamp_ns": 23362984131084
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984111439,
        "end_timestamp_ns": 23362984117333
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984106522,
        "end_timestamp_ns": 23362984110679
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362984076176,
        "end_timestamp_ns": 23362984077663
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983991390,
        "end_timestamp_ns": 23362984074979
      },
      {
        "id": "newfstatat",
        "stack_id": 15528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983985894,
        "end_timestamp_ns": 23362983988370
      },
      {
        "id": "close",
        "stack_id": 9628,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983977098,
        "end_timestamp_ns": 23362983977713
      },
      {
        "id": "read",
        "stack_id": 14981,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983973401,
        "end_timestamp_ns": 23362983976248
      },
      {
        "id": "openat",
        "stack_id": 9793,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983968125,
        "end_timestamp_ns": 23362983972645
      },
      {
        "id": "close",
        "stack_id": 3111,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983962907,
        "end_timestamp_ns": 23362983963634
      },
      {
        "id": "read",
        "stack_id": 13476,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983958066,
        "end_timestamp_ns": 23362983961866
      },
      {
        "id": "openat",
        "stack_id": 16177,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983950494,
        "end_timestamp_ns": 23362983957262
      },
      {
        "id": "gettid",
        "stack_id": 8055,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983932315,
        "end_timestamp_ns": 23362983933759
      },
      {
        "id": "gettid",
        "stack_id": 13568,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983928959,
        "end_timestamp_ns": 23362983930357
      },
      {
        "id": "gettid",
        "stack_id": 13571,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983925570,
        "end_timestamp_ns": 23362983927005
      },
      {
        "id": "gettid",
        "stack_id": 15761,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983921948,
        "end_timestamp_ns": 23362983923390
      },
      {
        "id": "gettid",
        "stack_id": 869,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983918293,
        "end_timestamp_ns": 23362983919683
      },
      {
        "id": "gettid",
        "stack_id": 636,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983914934,
        "end_timestamp_ns": 23362983916364
      },
      {
        "id": "gettid",
        "stack_id": 11840,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983911512,
        "end_timestamp_ns": 23362983912941
      },
      {
        "id": "gettid",
        "stack_id": 3761,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983908068,
        "end_timestamp_ns": 23362983909501
      },
      {
        "id": "gettid",
        "stack_id": 8518,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983904712,
        "end_timestamp_ns": 23362983906141
      },
      {
        "id": "gettid",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983901426,
        "end_timestamp_ns": 23362983902779
      },
      {
        "id": "gettid",
        "stack_id": 13009,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983897997,
        "end_timestamp_ns": 23362983899453
      },
      {
        "id": "gettid",
        "stack_id": 9196,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983894593,
        "end_timestamp_ns": 23362983896046
      },
      {
        "id": "gettid",
        "stack_id": 167,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983891198,
        "end_timestamp_ns": 23362983892651
      },
      {
        "id": "gettid",
        "stack_id": 1098,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983887831,
        "end_timestamp_ns": 23362983889250
      },
      {
        "id": "gettid",
        "stack_id": 15725,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983884468,
        "end_timestamp_ns": 23362983885898
      },
      {
        "id": "gettid",
        "stack_id": 9024,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983881118,
        "end_timestamp_ns": 23362983882566
      },
      {
        "id": "gettid",
        "stack_id": 15312,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983877726,
        "end_timestamp_ns": 23362983879166
      },
      {
        "id": "gettid",
        "stack_id": 6547,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983874379,
        "end_timestamp_ns": 23362983875806
      },
      {
        "id": "gettid",
        "stack_id": 3237,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983871024,
        "end_timestamp_ns": 23362983872414
      },
      {
        "id": "gettid",
        "stack_id": 11890,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983867710,
        "end_timestamp_ns": 23362983869098
      },
      {
        "id": "gettid",
        "stack_id": 13630,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983864291,
        "end_timestamp_ns": 23362983865726
      },
      {
        "id": "gettid",
        "stack_id": 12571,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983860884,
        "end_timestamp_ns": 23362983862330
      },
      {
        "id": "gettid",
        "stack_id": 5167,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983857250,
        "end_timestamp_ns": 23362983858685
      },
      {
        "id": "gettid",
        "stack_id": 11177,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983853850,
        "end_timestamp_ns": 23362983855273
      },
      {
        "id": "gettid",
        "stack_id": 181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983850486,
        "end_timestamp_ns": 23362983851925
      },
      {
        "id": "gettid",
        "stack_id": 58,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983847018,
        "end_timestamp_ns": 23362983848432
      },
      {
        "id": "gettid",
        "stack_id": 46,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983842703,
        "end_timestamp_ns": 23362983844108
      },
      {
        "id": "gettid",
        "stack_id": 1480,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983839254,
        "end_timestamp_ns": 23362983840722
      },
      {
        "id": "gettid",
        "stack_id": 6014,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983835881,
        "end_timestamp_ns": 23362983837323
      },
      {
        "id": "gettid",
        "stack_id": 5373,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983832400,
        "end_timestamp_ns": 23362983833793
      },
      {
        "id": "gettid",
        "stack_id": 5185,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983828986,
        "end_timestamp_ns": 23362983830409
      },
      {
        "id": "gettid",
        "stack_id": 2754,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983825548,
        "end_timestamp_ns": 23362983826981
      },
      {
        "id": "gettid",
        "stack_id": 9349,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983822137,
        "end_timestamp_ns": 23362983823536
      },
      {
        "id": "gettid",
        "stack_id": 14311,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983818718,
        "end_timestamp_ns": 23362983820161
      },
      {
        "id": "gettid",
        "stack_id": 9670,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983815376,
        "end_timestamp_ns": 23362983816762
      },
      {
        "id": "gettid",
        "stack_id": 7866,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983811791,
        "end_timestamp_ns": 23362983813249
      },
      {
        "id": "gettid",
        "stack_id": 15819,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983808190,
        "end_timestamp_ns": 23362983809633
      },
      {
        "id": "gettid",
        "stack_id": 15249,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983804724,
        "end_timestamp_ns": 23362983806160
      },
      {
        "id": "gettid",
        "stack_id": 4319,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983801327,
        "end_timestamp_ns": 23362983802748
      },
      {
        "id": "gettid",
        "stack_id": 1731,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983797999,
        "end_timestamp_ns": 23362983799390
      },
      {
        "id": "gettid",
        "stack_id": 8949,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983794708,
        "end_timestamp_ns": 23362983796083
      },
      {
        "id": "gettid",
        "stack_id": 15356,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983791062,
        "end_timestamp_ns": 23362983792746
      },
      {
        "id": "gettid",
        "stack_id": 14727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983787655,
        "end_timestamp_ns": 23362983789094
      },
      {
        "id": "gettid",
        "stack_id": 762,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983784310,
        "end_timestamp_ns": 23362983785631
      },
      {
        "id": "gettid",
        "stack_id": 762,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983781000,
        "end_timestamp_ns": 23362983782318
      },
      {
        "id": "gettid",
        "stack_id": 762,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983777675,
        "end_timestamp_ns": 23362983778988
      },
      {
        "id": "gettid",
        "stack_id": 762,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983774366,
        "end_timestamp_ns": 23362983775701
      },
      {
        "id": "gettid",
        "stack_id": 762,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983771023,
        "end_timestamp_ns": 23362983772370
      },
      {
        "id": "gettid",
        "stack_id": 762,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983767522,
        "end_timestamp_ns": 23362983768870
      },
      {
        "id": "gettid",
        "stack_id": 762,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983763976,
        "end_timestamp_ns": 23362983765426
      },
      {
        "id": "gettid",
        "stack_id": 9546,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983760287,
        "end_timestamp_ns": 23362983761725
      },
      {
        "id": "gettid",
        "stack_id": 8731,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983756906,
        "end_timestamp_ns": 23362983758331
      },
      {
        "id": "gettid",
        "stack_id": 5248,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983753464,
        "end_timestamp_ns": 23362983754895
      },
      {
        "id": "gettid",
        "stack_id": 3832,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983750070,
        "end_timestamp_ns": 23362983751514
      },
      {
        "id": "gettid",
        "stack_id": 7813,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983746646,
        "end_timestamp_ns": 23362983748081
      },
      {
        "id": "gettid",
        "stack_id": 9869,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983743270,
        "end_timestamp_ns": 23362983744693
      },
      {
        "id": "gettid",
        "stack_id": 878,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983739917,
        "end_timestamp_ns": 23362983741300
      },
      {
        "id": "gettid",
        "stack_id": 6649,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983736204,
        "end_timestamp_ns": 23362983737959
      },
      {
        "id": "gettid",
        "stack_id": 13980,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983732816,
        "end_timestamp_ns": 23362983734266
      },
      {
        "id": "gettid",
        "stack_id": 6425,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983729482,
        "end_timestamp_ns": 23362983730881
      },
      {
        "id": "gettid",
        "stack_id": 414,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983726086,
        "end_timestamp_ns": 23362983727541
      },
      {
        "id": "gettid",
        "stack_id": 1956,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983722570,
        "end_timestamp_ns": 23362983724125
      },
      {
        "id": "gettid",
        "stack_id": 12979,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983719177,
        "end_timestamp_ns": 23362983720607
      },
      {
        "id": "gettid",
        "stack_id": 5024,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983715807,
        "end_timestamp_ns": 23362983717232
      },
      {
        "id": "gettid",
        "stack_id": 4451,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983712426,
        "end_timestamp_ns": 23362983713863
      },
      {
        "id": "gettid",
        "stack_id": 8450,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983709000,
        "end_timestamp_ns": 23362983710398
      },
      {
        "id": "gettid",
        "stack_id": 15443,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983705583,
        "end_timestamp_ns": 23362983707027
      },
      {
        "id": "gettid",
        "stack_id": 16144,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983702232,
        "end_timestamp_ns": 23362983703652
      },
      {
        "id": "gettid",
        "stack_id": 443,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983698844,
        "end_timestamp_ns": 23362983700269
      },
      {
        "id": "gettid",
        "stack_id": 14382,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983695453,
        "end_timestamp_ns": 23362983696885
      },
      {
        "id": "gettid",
        "stack_id": 11491,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983692065,
        "end_timestamp_ns": 23362983693500
      },
      {
        "id": "gettid",
        "stack_id": 9730,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983688662,
        "end_timestamp_ns": 23362983690094
      },
      {
        "id": "gettid",
        "stack_id": 9388,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983685251,
        "end_timestamp_ns": 23362983686689
      },
      {
        "id": "gettid",
        "stack_id": 2646,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983681516,
        "end_timestamp_ns": 23362983683271
      },
      {
        "id": "gettid",
        "stack_id": 10626,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983678081,
        "end_timestamp_ns": 23362983679486
      },
      {
        "id": "gettid",
        "stack_id": 12381,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983674640,
        "end_timestamp_ns": 23362983676081
      },
      {
        "id": "gettid",
        "stack_id": 10711,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983671186,
        "end_timestamp_ns": 23362983672635
      },
      {
        "id": "gettid",
        "stack_id": 10541,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983667784,
        "end_timestamp_ns": 23362983669247
      },
      {
        "id": "gettid",
        "stack_id": 6128,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983664463,
        "end_timestamp_ns": 23362983665858
      },
      {
        "id": "gettid",
        "stack_id": 5316,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983661084,
        "end_timestamp_ns": 23362983662523
      },
      {
        "id": "gettid",
        "stack_id": 9489,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983657727,
        "end_timestamp_ns": 23362983659173
      },
      {
        "id": "gettid",
        "stack_id": 10348,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983654376,
        "end_timestamp_ns": 23362983655768
      },
      {
        "id": "gettid",
        "stack_id": 6100,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983650923,
        "end_timestamp_ns": 23362983652324
      },
      {
        "id": "gettid",
        "stack_id": 2902,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983647341,
        "end_timestamp_ns": 23362983648821
      },
      {
        "id": "gettid",
        "stack_id": 11254,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983643808,
        "end_timestamp_ns": 23362983645267
      },
      {
        "id": "gettid",
        "stack_id": 1618,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983640114,
        "end_timestamp_ns": 23362983641682
      },
      {
        "id": "gettid",
        "stack_id": 7188,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983629042,
        "end_timestamp_ns": 23362983630683
      },
      {
        "id": "brk",
        "stack_id": 881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983611948,
        "end_timestamp_ns": 23362983619132
      },
      {
        "id": "gettid",
        "stack_id": 12351,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983601591,
        "end_timestamp_ns": 23362983603037
      },
      {
        "id": "gettid",
        "stack_id": 3056,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983598129,
        "end_timestamp_ns": 23362983599577
      },
      {
        "id": "gettid",
        "stack_id": 1241,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983594679,
        "end_timestamp_ns": 23362983596122
      },
      {
        "id": "gettid",
        "stack_id": 211,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983591324,
        "end_timestamp_ns": 23362983592747
      },
      {
        "id": "gettid",
        "stack_id": 294,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983587655,
        "end_timestamp_ns": 23362983589393
      },
      {
        "id": "gettid",
        "stack_id": 13257,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983584216,
        "end_timestamp_ns": 23362983585610
      },
      {
        "id": "gettid",
        "stack_id": 4743,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983580455,
        "end_timestamp_ns": 23362983581988
      },
      {
        "id": "gettid",
        "stack_id": 898,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983574594,
        "end_timestamp_ns": 23362983576554
      },
      {
        "id": "close",
        "stack_id": 14118,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983312371,
        "end_timestamp_ns": 23362983314165
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983308640,
        "end_timestamp_ns": 23362983309697
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983302470,
        "end_timestamp_ns": 23362983305683
      },
      {
        "id": "newfstatat",
        "stack_id": 15528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983299405,
        "end_timestamp_ns": 23362983301422
      },
      {
        "id": "openat",
        "stack_id": 16304,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983290911,
        "end_timestamp_ns": 23362983298144
      },
      {
        "id": "readlink",
        "stack_id": 304,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983283235,
        "end_timestamp_ns": 23362983288329
      },
      {
        "id": "readlink",
        "stack_id": 304,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983279343,
        "end_timestamp_ns": 23362983282440
      },
      {
        "id": "readlink",
        "stack_id": 304,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983275555,
        "end_timestamp_ns": 23362983278552
      },
      {
        "id": "readlink",
        "stack_id": 304,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983272093,
        "end_timestamp_ns": 23362983274777
      },
      {
        "id": "readlink",
        "stack_id": 304,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983268738,
        "end_timestamp_ns": 23362983271303
      },
      {
        "id": "readlink",
        "stack_id": 304,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983265536,
        "end_timestamp_ns": 23362983267938
      },
      {
        "id": "readlink",
        "stack_id": 304,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983262407,
        "end_timestamp_ns": 23362983264705
      },
      {
        "id": "readlink",
        "stack_id": 4010,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983259648,
        "end_timestamp_ns": 23362983261597
      },
      {
        "id": "readlink",
        "stack_id": 14226,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983250464,
        "end_timestamp_ns": 23362983258282
      },
      {
        "id": "readlink",
        "stack_id": 4564,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983247388,
        "end_timestamp_ns": 23362983249677
      },
      {
        "id": "readlink",
        "stack_id": 12252,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983243759,
        "end_timestamp_ns": 23362983246590
      },
      {
        "id": "readlink",
        "stack_id": 9354,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983240441,
        "end_timestamp_ns": 23362983242826
      },
      {
        "id": "newfstatat",
        "stack_id": 1363,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983235441,
        "end_timestamp_ns": 23362983238361
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362983230360,
        "end_timestamp_ns": 23362983234553
      },
      {
        "id": "write",
        "stack_id": 14928,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982962247,
        "end_timestamp_ns": 23362982966201
      },
      {
        "id": "gettid",
        "stack_id": 14403,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982957986,
        "end_timestamp_ns": 23362982959598
      },
      {
        "id": "write",
        "stack_id": 144,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982942188,
        "end_timestamp_ns": 23362982956215
      },
      {
        "id": "gettid",
        "stack_id": 15979,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982936037,
        "end_timestamp_ns": 23362982938033
      },
      {
        "id": "fcntl",
        "stack_id": 11453,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982719630,
        "end_timestamp_ns": 23362982720533
      },
      {
        "id": "fcntl",
        "stack_id": 12542,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982717592,
        "end_timestamp_ns": 23362982718768
      },
      {
        "id": "fcntl",
        "stack_id": 12542,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982715499,
        "end_timestamp_ns": 23362982716829
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982711088,
        "end_timestamp_ns": 23362982714697
      },
      {
        "id": "gettid",
        "stack_id": -17,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982705961,
        "end_timestamp_ns": 23362982707266
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982702189,
        "end_timestamp_ns": 23362982703180
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982699544,
        "end_timestamp_ns": 23362982700755
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982696650,
        "end_timestamp_ns": 23362982698039
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982612661,
        "end_timestamp_ns": 23362982695458
      },
      {
        "id": "newfstatat",
        "stack_id": 15528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982607817,
        "end_timestamp_ns": 23362982609887
      },
      {
        "id": "fcntl",
        "stack_id": 11453,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982602326,
        "end_timestamp_ns": 23362982603350
      },
      {
        "id": "fcntl",
        "stack_id": 13817,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982600267,
        "end_timestamp_ns": 23362982601445
      },
      {
        "id": "fcntl",
        "stack_id": 13817,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982598080,
        "end_timestamp_ns": 23362982599505
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982593684,
        "end_timestamp_ns": 23362982597205
      },
      {
        "id": "close",
        "stack_id": 6218,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982351108,
        "end_timestamp_ns": 23362982352404
      },
      {
        "id": "fcntl",
        "stack_id": 15022,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982348567,
        "end_timestamp_ns": 23362982349642
      },
      {
        "id": "fcntl",
        "stack_id": 15022,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982346566,
        "end_timestamp_ns": 23362982347792
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982342670,
        "end_timestamp_ns": 23362982345494
      },
      {
        "id": "access",
        "stack_id": 3385,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982336873,
        "end_timestamp_ns": 23362982341311
      },
      {
        "id": "fcntl",
        "stack_id": 15482,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982333984,
        "end_timestamp_ns": 23362982335103
      },
      {
        "id": "fcntl",
        "stack_id": 15482,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982332069,
        "end_timestamp_ns": 23362982333212
      },
      {
        "id": "fcntl",
        "stack_id": 15482,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982327583,
        "end_timestamp_ns": 23362982331273
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982318953,
        "end_timestamp_ns": 23362982326744
      },
      {
        "id": "gettid",
        "stack_id": 4578,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982316314,
        "end_timestamp_ns": 23362982317494
      },
      {
        "id": "fstatfs",
        "stack_id": 3228,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982311750,
        "end_timestamp_ns": 23362982313788
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982307625,
        "end_timestamp_ns": 23362982310804
      },
      {
        "id": "newfstatat",
        "stack_id": 15857,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982304414,
        "end_timestamp_ns": 23362982306551
      },
      {
        "id": "mkdir",
        "stack_id": 6129,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982301426,
        "end_timestamp_ns": 23362982303643
      },
      {
        "id": "newfstatat",
        "stack_id": 6115,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982294171,
        "end_timestamp_ns": 23362982296274
      },
      {
        "id": "mkdir",
        "stack_id": 4731,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982291312,
        "end_timestamp_ns": 23362982293410
      },
      {
        "id": "newfstatat",
        "stack_id": 7929,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982287828,
        "end_timestamp_ns": 23362982290121
      },
      {
        "id": "mkdir",
        "stack_id": 2296,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982284314,
        "end_timestamp_ns": 23362982286965
      },
      {
        "id": "gettid",
        "stack_id": 10590,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982280838,
        "end_timestamp_ns": 23362982282000
      },
      {
        "id": "gettid",
        "stack_id": 14648,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982277664,
        "end_timestamp_ns": 23362982278851
      },
      {
        "id": "gettid",
        "stack_id": 11889,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982273819,
        "end_timestamp_ns": 23362982274857
      },
      {
        "id": "gettid",
        "stack_id": 11889,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982270795,
        "end_timestamp_ns": 23362982271835
      },
      {
        "id": "gettid",
        "stack_id": 11889,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982267726,
        "end_timestamp_ns": 23362982268774
      },
      {
        "id": "gettid",
        "stack_id": 11889,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982264639,
        "end_timestamp_ns": 23362982265715
      },
      {
        "id": "gettid",
        "stack_id": 11889,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982259680,
        "end_timestamp_ns": 23362982260714
      },
      {
        "id": "gettid",
        "stack_id": 11889,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982256617,
        "end_timestamp_ns": 23362982257679
      },
      {
        "id": "gettid",
        "stack_id": 11889,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982253475,
        "end_timestamp_ns": 23362982254550
      },
      {
        "id": "gettid",
        "stack_id": 11889,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982250216,
        "end_timestamp_ns": 23362982251368
      },
      {
        "id": "gettid",
        "stack_id": 4181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982246942,
        "end_timestamp_ns": 23362982248173
      },
      {
        "id": "gettid",
        "stack_id": 4561,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982243784,
        "end_timestamp_ns": 23362982244956
      },
      {
        "id": "gettid",
        "stack_id": 4626,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982240625,
        "end_timestamp_ns": 23362982241818
      },
      {
        "id": "gettid",
        "stack_id": 10181,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982237512,
        "end_timestamp_ns": 23362982238663
      },
      {
        "id": "gettid",
        "stack_id": 15476,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982234304,
        "end_timestamp_ns": 23362982235510
      },
      {
        "id": "gettid",
        "stack_id": 12964,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982231163,
        "end_timestamp_ns": 23362982232372
      },
      {
        "id": "gettid",
        "stack_id": 5379,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982227726,
        "end_timestamp_ns": 23362982229184
      },
      {
        "id": "gettid",
        "stack_id": 7723,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982224548,
        "end_timestamp_ns": 23362982225745
      },
      {
        "id": "gettid",
        "stack_id": 1509,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982221408,
        "end_timestamp_ns": 23362982222560
      },
      {
        "id": "gettid",
        "stack_id": 9671,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982218254,
        "end_timestamp_ns": 23362982219453
      },
      {
        "id": "gettid",
        "stack_id": 4920,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982215049,
        "end_timestamp_ns": 23362982216250
      },
      {
        "id": "gettid",
        "stack_id": 14901,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982211860,
        "end_timestamp_ns": 23362982213110
      },
      {
        "id": "gettid",
        "stack_id": 5145,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982208635,
        "end_timestamp_ns": 23362982209848
      },
      {
        "id": "gettid",
        "stack_id": 2477,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982205429,
        "end_timestamp_ns": 23362982206643
      },
      {
        "id": "gettid",
        "stack_id": 2048,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982202235,
        "end_timestamp_ns": 23362982203454
      },
      {
        "id": "gettid",
        "stack_id": 11474,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982199102,
        "end_timestamp_ns": 23362982200294
      },
      {
        "id": "gettid",
        "stack_id": 11031,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982195936,
        "end_timestamp_ns": 23362982197080
      },
      {
        "id": "gettid",
        "stack_id": 16006,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982192873,
        "end_timestamp_ns": 23362982194014
      },
      {
        "id": "gettid",
        "stack_id": 2649,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982189735,
        "end_timestamp_ns": 23362982190908
      },
      {
        "id": "gettid",
        "stack_id": 1564,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982186587,
        "end_timestamp_ns": 23362982187780
      },
      {
        "id": "gettid",
        "stack_id": 3852,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982183433,
        "end_timestamp_ns": 23362982184656
      },
      {
        "id": "gettid",
        "stack_id": 12739,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982180220,
        "end_timestamp_ns": 23362982181467
      },
      {
        "id": "gettid",
        "stack_id": 6589,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982176993,
        "end_timestamp_ns": 23362982178191
      },
      {
        "id": "gettid",
        "stack_id": 12029,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982173838,
        "end_timestamp_ns": 23362982175065
      },
      {
        "id": "gettid",
        "stack_id": 14374,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982170585,
        "end_timestamp_ns": 23362982171795
      },
      {
        "id": "gettid",
        "stack_id": 6396,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982167429,
        "end_timestamp_ns": 23362982168626
      },
      {
        "id": "gettid",
        "stack_id": 12013,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982164231,
        "end_timestamp_ns": 23362982165487
      },
      {
        "id": "gettid",
        "stack_id": 12319,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982161070,
        "end_timestamp_ns": 23362982162267
      },
      {
        "id": "gettid",
        "stack_id": 13382,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982157882,
        "end_timestamp_ns": 23362982159100
      },
      {
        "id": "gettid",
        "stack_id": 2560,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982154791,
        "end_timestamp_ns": 23362982155982
      },
      {
        "id": "gettid",
        "stack_id": 4799,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982151629,
        "end_timestamp_ns": 23362982152819
      },
      {
        "id": "gettid",
        "stack_id": 9225,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982148508,
        "end_timestamp_ns": 23362982149707
      },
      {
        "id": "gettid",
        "stack_id": 5453,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982145380,
        "end_timestamp_ns": 23362982146545
      },
      {
        "id": "gettid",
        "stack_id": 1195,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982142274,
        "end_timestamp_ns": 23362982143461
      },
      {
        "id": "gettid",
        "stack_id": 10771,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982139099,
        "end_timestamp_ns": 23362982140288
      },
      {
        "id": "gettid",
        "stack_id": 9312,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982135823,
        "end_timestamp_ns": 23362982137035
      },
      {
        "id": "gettid",
        "stack_id": 2217,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982132679,
        "end_timestamp_ns": 23362982133888
      },
      {
        "id": "gettid",
        "stack_id": 10622,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982129484,
        "end_timestamp_ns": 23362982130685
      },
      {
        "id": "gettid",
        "stack_id": 12282,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982125930,
        "end_timestamp_ns": 23362982127491
      },
      {
        "id": "gettid",
        "stack_id": 8983,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982122851,
        "end_timestamp_ns": 23362982124007
      },
      {
        "id": "gettid",
        "stack_id": 2535,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982119680,
        "end_timestamp_ns": 23362982120884
      },
      {
        "id": "gettid",
        "stack_id": 10511,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982116553,
        "end_timestamp_ns": 23362982117745
      },
      {
        "id": "gettid",
        "stack_id": 6211,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982113372,
        "end_timestamp_ns": 23362982114591
      },
      {
        "id": "gettid",
        "stack_id": 14443,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982110150,
        "end_timestamp_ns": 23362982111442
      },
      {
        "id": "gettid",
        "stack_id": 10333,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982106883,
        "end_timestamp_ns": 23362982108144
      },
      {
        "id": "gettid",
        "stack_id": 7055,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982103581,
        "end_timestamp_ns": 23362982104852
      },
      {
        "id": "gettid",
        "stack_id": 4873,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982093583,
        "end_timestamp_ns": 23362982094775
      },
      {
        "id": "gettid",
        "stack_id": 8969,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982090413,
        "end_timestamp_ns": 23362982091621
      },
      {
        "id": "gettid",
        "stack_id": 8170,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982086819,
        "end_timestamp_ns": 23362982088426
      },
      {
        "id": "gettid",
        "stack_id": 1510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982083696,
        "end_timestamp_ns": 23362982084894
      },
      {
        "id": "gettid",
        "stack_id": 10571,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982080453,
        "end_timestamp_ns": 23362982081662
      },
      {
        "id": "gettid",
        "stack_id": 5822,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982077277,
        "end_timestamp_ns": 23362982078490
      },
      {
        "id": "gettid",
        "stack_id": 10004,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982074098,
        "end_timestamp_ns": 23362982075290
      },
      {
        "id": "gettid",
        "stack_id": 6421,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982071007,
        "end_timestamp_ns": 23362982072145
      },
      {
        "id": "gettid",
        "stack_id": 4385,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982067819,
        "end_timestamp_ns": 23362982069022
      },
      {
        "id": "gettid",
        "stack_id": 3979,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982064607,
        "end_timestamp_ns": 23362982065829
      },
      {
        "id": "gettid",
        "stack_id": 15490,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982061415,
        "end_timestamp_ns": 23362982062617
      },
      {
        "id": "gettid",
        "stack_id": 12374,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982058260,
        "end_timestamp_ns": 23362982059460
      },
      {
        "id": "gettid",
        "stack_id": 4087,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982055093,
        "end_timestamp_ns": 23362982056288
      },
      {
        "id": "gettid",
        "stack_id": 2577,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982051955,
        "end_timestamp_ns": 23362982053151
      },
      {
        "id": "gettid",
        "stack_id": 3867,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982048810,
        "end_timestamp_ns": 23362982049957
      },
      {
        "id": "gettid",
        "stack_id": 11936,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982045697,
        "end_timestamp_ns": 23362982046887
      },
      {
        "id": "gettid",
        "stack_id": 3388,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982042535,
        "end_timestamp_ns": 23362982043728
      },
      {
        "id": "gettid",
        "stack_id": 6977,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982039349,
        "end_timestamp_ns": 23362982040611
      },
      {
        "id": "gettid",
        "stack_id": 9955,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982036077,
        "end_timestamp_ns": 23362982037277
      },
      {
        "id": "gettid",
        "stack_id": 1293,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982032922,
        "end_timestamp_ns": 23362982034119
      },
      {
        "id": "gettid",
        "stack_id": 1279,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982029791,
        "end_timestamp_ns": 23362982030984
      },
      {
        "id": "gettid",
        "stack_id": 14106,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982026645,
        "end_timestamp_ns": 23362982027853
      },
      {
        "id": "gettid",
        "stack_id": 8670,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982023480,
        "end_timestamp_ns": 23362982024679
      },
      {
        "id": "gettid",
        "stack_id": 6526,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982020264,
        "end_timestamp_ns": 23362982021501
      },
      {
        "id": "gettid",
        "stack_id": 9152,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982017022,
        "end_timestamp_ns": 23362982018242
      },
      {
        "id": "gettid",
        "stack_id": 16219,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982013779,
        "end_timestamp_ns": 23362982015025
      },
      {
        "id": "gettid",
        "stack_id": 12788,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982010593,
        "end_timestamp_ns": 23362982011822
      },
      {
        "id": "gettid",
        "stack_id": 3535,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982006926,
        "end_timestamp_ns": 23362982008133
      },
      {
        "id": "gettid",
        "stack_id": 8992,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982003738,
        "end_timestamp_ns": 23362982004939
      },
      {
        "id": "gettid",
        "stack_id": 15572,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362982000485,
        "end_timestamp_ns": 23362982001732
      },
      {
        "id": "gettid",
        "stack_id": 12128,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981997267,
        "end_timestamp_ns": 23362981998475
      },
      {
        "id": "gettid",
        "stack_id": 4789,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981993870,
        "end_timestamp_ns": 23362981995029
      },
      {
        "id": "gettid",
        "stack_id": 1982,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981990705,
        "end_timestamp_ns": 23362981991904
      },
      {
        "id": "gettid",
        "stack_id": 10180,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981987532,
        "end_timestamp_ns": 23362981988770
      },
      {
        "id": "gettid",
        "stack_id": 1736,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981984343,
        "end_timestamp_ns": 23362981985567
      },
      {
        "id": "gettid",
        "stack_id": 11578,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981981164,
        "end_timestamp_ns": 23362981982372
      },
      {
        "id": "gettid",
        "stack_id": 13673,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981977939,
        "end_timestamp_ns": 23362981979145
      },
      {
        "id": "gettid",
        "stack_id": 11355,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981974451,
        "end_timestamp_ns": 23362981975700
      },
      {
        "id": "gettid",
        "stack_id": 10965,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981970427,
        "end_timestamp_ns": 23362981971667
      },
      {
        "id": "gettid",
        "stack_id": 13764,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981966768,
        "end_timestamp_ns": 23362981967950
      },
      {
        "id": "gettid",
        "stack_id": 1075,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981962928,
        "end_timestamp_ns": 23362981964221
      },
      {
        "id": "newfstatat",
        "stack_id": 8339,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981957248,
        "end_timestamp_ns": 23362981962059
      },
      {
        "id": "gettid",
        "stack_id": 1687,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981952825,
        "end_timestamp_ns": 23362981954064
      },
      {
        "id": "gettid",
        "stack_id": 9293,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981948867,
        "end_timestamp_ns": 23362981950152
      },
      {
        "id": "newfstatat",
        "stack_id": 824,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981941060,
        "end_timestamp_ns": 23362981947658
      },
      {
        "id": "newfstatat",
        "stack_id": 824,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981935137,
        "end_timestamp_ns": 23362981939796
      },
      {
        "id": "newfstatat",
        "stack_id": 824,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981927724,
        "end_timestamp_ns": 23362981933297
      },
      {
        "id": "close",
        "stack_id": 14019,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981916459,
        "end_timestamp_ns": 23362981917987
      },
      {
        "id": "getdents64",
        "stack_id": 5546,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981914279,
        "end_timestamp_ns": 23362981915529
      },
      {
        "id": "getdents64",
        "stack_id": 7972,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981897874,
        "end_timestamp_ns": 23362981910890
      },
      {
        "id": "newfstatat",
        "stack_id": 10124,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981891823,
        "end_timestamp_ns": 23362981894025
      },
      {
        "id": "openat",
        "stack_id": 16056,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981886600,
        "end_timestamp_ns": 23362981891054
      },
      {
        "id": "gettid",
        "stack_id": 3395,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981883192,
        "end_timestamp_ns": 23362981884394
      },
      {
        "id": "gettid",
        "stack_id": 6098,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981879946,
        "end_timestamp_ns": 23362981881147
      },
      {
        "id": "gettid",
        "stack_id": 10917,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981876362,
        "end_timestamp_ns": 23362981877614
      },
      {
        "id": "gettid",
        "stack_id": 11030,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981871798,
        "end_timestamp_ns": 23362981873173
      },
      {
        "id": "write",
        "stack_id": 15920,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981853694,
        "end_timestamp_ns": 23362981864816
      },
      {
        "id": "gettid",
        "stack_id": 3245,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981844539,
        "end_timestamp_ns": 23362981846148
      },
      {
        "id": "getpid",
        "stack_id": 4781,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981563798,
        "end_timestamp_ns": 23362981565129
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981559967,
        "end_timestamp_ns": 23362981560996
      },
      {
        "id": "read",
        "stack_id": 12081,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981553910,
        "end_timestamp_ns": 23362981558281
      },
      {
        "id": "openat",
        "stack_id": 13420,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981540685,
        "end_timestamp_ns": 23362981552233
      },
      {
        "id": "gettid",
        "stack_id": 4025,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981536444,
        "end_timestamp_ns": 23362981537819
      },
      {
        "id": "getpid",
        "stack_id": 11618,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981534314,
        "end_timestamp_ns": 23362981535617
      },
      {
        "id": "uname",
        "stack_id": 15280,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981532142,
        "end_timestamp_ns": 23362981533458
      },
      {
        "id": "getpid",
        "stack_id": 1850,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981519002,
        "end_timestamp_ns": 23362981520822
      },
      {
        "id": "close",
        "stack_id": 11589,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981279745,
        "end_timestamp_ns": 23362981281314
      },
      {
        "id": "getdents64",
        "stack_id": 5546,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981277248,
        "end_timestamp_ns": 23362981278799
      },
      {
        "id": "getdents64",
        "stack_id": 7972,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981255107,
        "end_timestamp_ns": 23362981272615
      },
      {
        "id": "newfstatat",
        "stack_id": 10124,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981248982,
        "end_timestamp_ns": 23362981251391
      },
      {
        "id": "openat",
        "stack_id": 13353,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981243755,
        "end_timestamp_ns": 23362981248173
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23362981230989,
        "end_timestamp_ns": 23362981237762
      },
      {
        "id": "munmap",
        "stack_id": 4195,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23362981224655,
        "end_timestamp_ns": 23362981230296
      },
      {
        "id": "close",
        "stack_id": 6743,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981225299,
        "end_timestamp_ns": 23362981226374
      },
      {
        "id": "write",
        "stack_id": 11595,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981222900,
        "end_timestamp_ns": 23362981224508
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23362981216157,
        "end_timestamp_ns": 23362981223858
      },
      {
        "id": "openat",
        "stack_id": 8771,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981213367,
        "end_timestamp_ns": 23362981222091
      },
      {
        "id": "gettid",
        "stack_id": 11828,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23362981214004,
        "end_timestamp_ns": 23362981215093
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23362981211863,
        "end_timestamp_ns": 23362981213080
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23362981210038,
        "end_timestamp_ns": 23362981210976
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7709,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981205985,
        "end_timestamp_ns": 23362981210887
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551733,
        "start_timestamp_ns": 23362981207853,
        "end_timestamp_ns": 23362981209071
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981190972,
        "end_timestamp_ns": 23362981204986
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 13776,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981185388,
        "end_timestamp_ns": 23362981190181
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981164749,
        "end_timestamp_ns": 23362981176539
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551732,
        "start_timestamp_ns": 23362981162793,
        "end_timestamp_ns": 23362981170412
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981159155,
        "end_timestamp_ns": 23362981163946
      },
      {
        "id": "munmap",
        "stack_id": 4195,
        "pid_tgid": 857528875551732,
        "start_timestamp_ns": 23362981157464,
        "end_timestamp_ns": 23362981161674
      },
      {
        "id": "munmap",
        "stack_id": 4195,
        "pid_tgid": 857528875551732,
        "start_timestamp_ns": 23362981149651,
        "end_timestamp_ns": 23362981156643
      },
      {
        "id": "close",
        "stack_id": 10950,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981154850,
        "end_timestamp_ns": 23362981156018
      },
      {
        "id": "write",
        "stack_id": 13433,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981152221,
        "end_timestamp_ns": 23362981154096
      },
      {
        "id": "openat",
        "stack_id": 15372,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981135525,
        "end_timestamp_ns": 23362981151361
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551732,
        "start_timestamp_ns": 23362981139051,
        "end_timestamp_ns": 23362981148806
      },
      {
        "id": "gettid",
        "stack_id": 11828,
        "pid_tgid": 857528875551732,
        "start_timestamp_ns": 23362981135664,
        "end_timestamp_ns": 23362981137600
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551732,
        "start_timestamp_ns": 23362981132328,
        "end_timestamp_ns": 23362981133384
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551732,
        "start_timestamp_ns": 23362981130617,
        "end_timestamp_ns": 23362981131548
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11529,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981126508,
        "end_timestamp_ns": 23362981131385
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551732,
        "start_timestamp_ns": 23362981127875,
        "end_timestamp_ns": 23362981129752
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981108641,
        "end_timestamp_ns": 23362981125582
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11987,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981102698,
        "end_timestamp_ns": 23362981107836
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981087641,
        "end_timestamp_ns": 23362981093495
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981083040,
        "end_timestamp_ns": 23362981086886
      },
      {
        "id": "brk",
        "stack_id": 881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981065243,
        "end_timestamp_ns": 23362981075800
      },
      {
        "id": "sync_file_range",
        "stack_id": 6641,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981060984,
        "end_timestamp_ns": 23362981062606
      },
      {
        "id": "fstatfs",
        "stack_id": 3243,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981057276,
        "end_timestamp_ns": 23362981060082
      },
      {
        "id": "fcntl",
        "stack_id": 5458,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981054648,
        "end_timestamp_ns": 23362981055916
      },
      {
        "id": "fcntl",
        "stack_id": 5458,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981052153,
        "end_timestamp_ns": 23362981053818
      },
      {
        "id": "openat",
        "stack_id": 13260,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981033988,
        "end_timestamp_ns": 23362981051023
      },
      {
        "id": "rename",
        "stack_id": 15998,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362981000178,
        "end_timestamp_ns": 23362981024200
      },
      {
        "id": "access",
        "stack_id": 13826,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980985617,
        "end_timestamp_ns": 23362980992844
      },
      {
        "id": "newfstatat",
        "stack_id": 9917,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980981392,
        "end_timestamp_ns": 23362980984233
      },
      {
        "id": "mkdir",
        "stack_id": 13861,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980977176,
        "end_timestamp_ns": 23362980980507
      },
      {
        "id": "getcwd",
        "stack_id": 5841,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980971804,
        "end_timestamp_ns": 23362980975037
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980878254,
        "end_timestamp_ns": 23362980879396
      },
      {
        "id": "read",
        "stack_id": 12081,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980813682,
        "end_timestamp_ns": 23362980871592
      },
      {
        "id": "openat",
        "stack_id": 4637,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980800646,
        "end_timestamp_ns": 23362980810622
      },
      {
        "id": "futex",
        "stack_id": 6105,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980796782,
        "end_timestamp_ns": 23362980798383
      },
      {
        "id": "newfstatat",
        "stack_id": 3048,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980790212,
        "end_timestamp_ns": 23362980793589
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980782377,
        "end_timestamp_ns": 23362980783640
      },
      {
        "id": "munmap",
        "stack_id": 4195,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980767751,
        "end_timestamp_ns": 23362980781018
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980539051,
        "end_timestamp_ns": 23362980540482
      },
      {
        "id": "read",
        "stack_id": 4510,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980415934,
        "end_timestamp_ns": 23362980537881
      },
      {
        "id": "newfstatat",
        "stack_id": 15528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980411658,
        "end_timestamp_ns": 23362980414600
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362980221284,
        "end_timestamp_ns": 23362980232321
      },
      {
        "id": "fcntl",
        "stack_id": 11453,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979931561,
        "end_timestamp_ns": 23362979932753
      },
      {
        "id": "fcntl",
        "stack_id": 3881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979928902,
        "end_timestamp_ns": 23362979930073
      },
      {
        "id": "fcntl",
        "stack_id": 3881,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979926285,
        "end_timestamp_ns": 23362979928089
      },
      {
        "id": "openat",
        "stack_id": 4637,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979738139,
        "end_timestamp_ns": 23362979924831
      },
      {
        "id": "write",
        "stack_id": 9073,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979466767,
        "end_timestamp_ns": 23362979471952
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23362979468392,
        "end_timestamp_ns": 23362979469377
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23362979466467,
        "end_timestamp_ns": 23362979467586
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551731,
        "start_timestamp_ns": 23362979463787,
        "end_timestamp_ns": 23362979465489
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 10145,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979457196,
        "end_timestamp_ns": 23362979461894
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979445413,
        "end_timestamp_ns": 23362979456293
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23362979453505,
        "end_timestamp_ns": 23362979454431
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23362979451852,
        "end_timestamp_ns": 23362979452794
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551730,
        "start_timestamp_ns": 23362979449037,
        "end_timestamp_ns": 23362979450889
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 8018,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979419480,
        "end_timestamp_ns": 23362979444767
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979395621,
        "end_timestamp_ns": 23362979412398
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979392791,
        "end_timestamp_ns": 23362979394997
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 12990,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979387537,
        "end_timestamp_ns": 23362979391856
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979372541,
        "end_timestamp_ns": 23362979386827
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 1262,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979367592,
        "end_timestamp_ns": 23362979371848
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4116,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23362979361593,
        "end_timestamp_ns": 23362979362564
      },
      {
        "id": "set_robust_list",
        "stack_id": 9236,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23362979359790,
        "end_timestamp_ns": 23362979360862
      },
      {
        "id": "rseq",
        "stack_id": 262,
        "pid_tgid": 857528875551729,
        "start_timestamp_ns": 23362979356384,
        "end_timestamp_ns": 23362979358804
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979351408,
        "end_timestamp_ns": 23362979355710
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979321078,
        "end_timestamp_ns": 23362979350761
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6003,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979315852,
        "end_timestamp_ns": 23362979319981
      },
      {
        "id": "clone3",
        "stack_id": 4220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979276065,
        "end_timestamp_ns": 23362979315052
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7475,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979271031,
        "end_timestamp_ns": 23362979275309
      },
      {
        "id": "mprotect",
        "stack_id": 2801,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979225225,
        "end_timestamp_ns": 23362979242795
      },
      {
        "id": "mmap",
        "stack_id": 2101,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979218354,
        "end_timestamp_ns": 23362979224616
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 10362,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979216461,
        "end_timestamp_ns": 23362979217256
      },
      {
        "id": "rt_sigaction",
        "stack_id": 14537,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979214734,
        "end_timestamp_ns": 23362979215836
      },
      {
        "id": "write",
        "stack_id": 862,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979177474,
        "end_timestamp_ns": 23362979207926
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979143957,
        "end_timestamp_ns": 23362979144771
      },
      {
        "id": "read",
        "stack_id": 11803,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979141162,
        "end_timestamp_ns": 23362979142225
      },
      {
        "id": "lseek",
        "stack_id": 526,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979139333,
        "end_timestamp_ns": 23362979140478
      },
      {
        "id": "read",
        "stack_id": 11803,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979136488,
        "end_timestamp_ns": 23362979138281
      },
      {
        "id": "newfstatat",
        "stack_id": 15528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979134222,
        "end_timestamp_ns": 23362979135428
      },
      {
        "id": "newfstatat",
        "stack_id": 2719,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979131733,
        "end_timestamp_ns": 23362979133413
      },
      {
        "id": "openat",
        "stack_id": 16220,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979125636,
        "end_timestamp_ns": 23362979130981
      },
      {
        "id": "write",
        "stack_id": 6418,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979115199,
        "end_timestamp_ns": 23362979118700
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979112489,
        "end_timestamp_ns": 23362979113232
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979111019,
        "end_timestamp_ns": 23362979111759
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979109618,
        "end_timestamp_ns": 23362979110360
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979108216,
        "end_timestamp_ns": 23362979108961
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979106806,
        "end_timestamp_ns": 23362979107550
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979105403,
        "end_timestamp_ns": 23362979106147
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979103992,
        "end_timestamp_ns": 23362979104733
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979102583,
        "end_timestamp_ns": 23362979103325
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979101172,
        "end_timestamp_ns": 23362979101917
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979099774,
        "end_timestamp_ns": 23362979100515
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979098367,
        "end_timestamp_ns": 23362979099108
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979096965,
        "end_timestamp_ns": 23362979097708
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979095556,
        "end_timestamp_ns": 23362979096298
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979094157,
        "end_timestamp_ns": 23362979094898
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979092755,
        "end_timestamp_ns": 23362979093498
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979091357,
        "end_timestamp_ns": 23362979092097
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979089949,
        "end_timestamp_ns": 23362979090690
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979088546,
        "end_timestamp_ns": 23362979089283
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979087137,
        "end_timestamp_ns": 23362979087877
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979085733,
        "end_timestamp_ns": 23362979086472
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979084326,
        "end_timestamp_ns": 23362979085068
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979082924,
        "end_timestamp_ns": 23362979083664
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979081516,
        "end_timestamp_ns": 23362979082259
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979080118,
        "end_timestamp_ns": 23362979080858
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979078708,
        "end_timestamp_ns": 23362979079453
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979077309,
        "end_timestamp_ns": 23362979078053
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979075897,
        "end_timestamp_ns": 23362979076642
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979074485,
        "end_timestamp_ns": 23362979075230
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979073083,
        "end_timestamp_ns": 23362979073825
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979071677,
        "end_timestamp_ns": 23362979072424
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979070278,
        "end_timestamp_ns": 23362979071019
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979068864,
        "end_timestamp_ns": 23362979069607
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979067454,
        "end_timestamp_ns": 23362979068198
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979066053,
        "end_timestamp_ns": 23362979066799
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979064644,
        "end_timestamp_ns": 23362979065387
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979063248,
        "end_timestamp_ns": 23362979063988
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979061842,
        "end_timestamp_ns": 23362979062583
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979060435,
        "end_timestamp_ns": 23362979061178
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979059032,
        "end_timestamp_ns": 23362979059772
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979057628,
        "end_timestamp_ns": 23362979058370
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979056223,
        "end_timestamp_ns": 23362979056963
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979054822,
        "end_timestamp_ns": 23362979055561
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979053414,
        "end_timestamp_ns": 23362979054154
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979052008,
        "end_timestamp_ns": 23362979052749
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979050604,
        "end_timestamp_ns": 23362979051343
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979049203,
        "end_timestamp_ns": 23362979049944
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979047797,
        "end_timestamp_ns": 23362979048539
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979046391,
        "end_timestamp_ns": 23362979047134
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979044989,
        "end_timestamp_ns": 23362979045732
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979043590,
        "end_timestamp_ns": 23362979044331
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979042188,
        "end_timestamp_ns": 23362979042931
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979040787,
        "end_timestamp_ns": 23362979041531
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979039377,
        "end_timestamp_ns": 23362979040120
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979037970,
        "end_timestamp_ns": 23362979038713
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979036570,
        "end_timestamp_ns": 23362979037313
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979035170,
        "end_timestamp_ns": 23362979035912
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979033769,
        "end_timestamp_ns": 23362979034511
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979032372,
        "end_timestamp_ns": 23362979033113
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979030966,
        "end_timestamp_ns": 23362979031706
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979029567,
        "end_timestamp_ns": 23362979030309
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979028161,
        "end_timestamp_ns": 23362979028903
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979026756,
        "end_timestamp_ns": 23362979027498
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979025359,
        "end_timestamp_ns": 23362979026100
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979023956,
        "end_timestamp_ns": 23362979024695
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979022556,
        "end_timestamp_ns": 23362979023300
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979021162,
        "end_timestamp_ns": 23362979021902
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979019765,
        "end_timestamp_ns": 23362979020505
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979018360,
        "end_timestamp_ns": 23362979019101
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979016952,
        "end_timestamp_ns": 23362979017696
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979015546,
        "end_timestamp_ns": 23362979016289
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979014140,
        "end_timestamp_ns": 23362979014884
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979012739,
        "end_timestamp_ns": 23362979013480
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979011334,
        "end_timestamp_ns": 23362979012074
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979009928,
        "end_timestamp_ns": 23362979010668
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979008522,
        "end_timestamp_ns": 23362979009265
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979007120,
        "end_timestamp_ns": 23362979007865
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979005711,
        "end_timestamp_ns": 23362979006453
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979004293,
        "end_timestamp_ns": 23362979005035
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979002878,
        "end_timestamp_ns": 23362979003623
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979001479,
        "end_timestamp_ns": 23362979002221
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362979000072,
        "end_timestamp_ns": 23362979000815
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978998675,
        "end_timestamp_ns": 23362978999416
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978997266,
        "end_timestamp_ns": 23362978998017
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978995857,
        "end_timestamp_ns": 23362978996599
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978994446,
        "end_timestamp_ns": 23362978995188
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978993044,
        "end_timestamp_ns": 23362978993783
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978991648,
        "end_timestamp_ns": 23362978992388
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978990243,
        "end_timestamp_ns": 23362978990985
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978988834,
        "end_timestamp_ns": 23362978989576
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978987414,
        "end_timestamp_ns": 23362978988159
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978986009,
        "end_timestamp_ns": 23362978986749
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978984604,
        "end_timestamp_ns": 23362978985345
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978983206,
        "end_timestamp_ns": 23362978983945
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978981808,
        "end_timestamp_ns": 23362978982550
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978980408,
        "end_timestamp_ns": 23362978981149
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978979002,
        "end_timestamp_ns": 23362978979746
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978977600,
        "end_timestamp_ns": 23362978978343
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978976201,
        "end_timestamp_ns": 23362978976942
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978974791,
        "end_timestamp_ns": 23362978975534
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978973381,
        "end_timestamp_ns": 23362978974134
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978971971,
        "end_timestamp_ns": 23362978972714
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978970565,
        "end_timestamp_ns": 23362978971307
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978969158,
        "end_timestamp_ns": 23362978969905
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978967752,
        "end_timestamp_ns": 23362978968494
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978966353,
        "end_timestamp_ns": 23362978967094
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978964948,
        "end_timestamp_ns": 23362978965690
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978963539,
        "end_timestamp_ns": 23362978964282
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978962138,
        "end_timestamp_ns": 23362978962876
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978960732,
        "end_timestamp_ns": 23362978961474
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978959330,
        "end_timestamp_ns": 23362978960072
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978957927,
        "end_timestamp_ns": 23362978958668
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978956530,
        "end_timestamp_ns": 23362978957272
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978955125,
        "end_timestamp_ns": 23362978955867
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978953722,
        "end_timestamp_ns": 23362978954463
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978952323,
        "end_timestamp_ns": 23362978953065
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978950925,
        "end_timestamp_ns": 23362978951667
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978949516,
        "end_timestamp_ns": 23362978950259
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978948117,
        "end_timestamp_ns": 23362978948859
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978946709,
        "end_timestamp_ns": 23362978947453
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978945302,
        "end_timestamp_ns": 23362978946045
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978943898,
        "end_timestamp_ns": 23362978944644
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978942498,
        "end_timestamp_ns": 23362978943240
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978941093,
        "end_timestamp_ns": 23362978941839
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978939692,
        "end_timestamp_ns": 23362978940435
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978938284,
        "end_timestamp_ns": 23362978939026
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978936876,
        "end_timestamp_ns": 23362978937617
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978935474,
        "end_timestamp_ns": 23362978936218
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978934070,
        "end_timestamp_ns": 23362978934811
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978932668,
        "end_timestamp_ns": 23362978933411
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978931273,
        "end_timestamp_ns": 23362978932014
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978929874,
        "end_timestamp_ns": 23362978930614
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978928477,
        "end_timestamp_ns": 23362978929221
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978927077,
        "end_timestamp_ns": 23362978927813
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978925681,
        "end_timestamp_ns": 23362978926421
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978924279,
        "end_timestamp_ns": 23362978925019
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978922875,
        "end_timestamp_ns": 23362978923616
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978921151,
        "end_timestamp_ns": 23362978921897
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978919750,
        "end_timestamp_ns": 23362978920493
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978918350,
        "end_timestamp_ns": 23362978919094
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978916949,
        "end_timestamp_ns": 23362978917692
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978915550,
        "end_timestamp_ns": 23362978916290
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978914132,
        "end_timestamp_ns": 23362978914875
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978912727,
        "end_timestamp_ns": 23362978913469
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978911306,
        "end_timestamp_ns": 23362978912053
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978909878,
        "end_timestamp_ns": 23362978910620
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978908363,
        "end_timestamp_ns": 23362978909161
      },
      {
        "id": "write",
        "stack_id": 8374,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978904408,
        "end_timestamp_ns": 23362978906286
      },
      {
        "id": "ioctl",
        "stack_id": 12522,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978902683,
        "end_timestamp_ns": 23362978903694
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978900352,
        "end_timestamp_ns": 23362978901091
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978898860,
        "end_timestamp_ns": 23362978899624
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978896543,
        "end_timestamp_ns": 23362978897313
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978895132,
        "end_timestamp_ns": 23362978895903
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978893560,
        "end_timestamp_ns": 23362978894364
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978890107,
        "end_timestamp_ns": 23362978890895
      },
      {
        "id": "ioctl",
        "stack_id": 13643,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978888466,
        "end_timestamp_ns": 23362978889406
      },
      {
        "id": "write",
        "stack_id": 6418,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978878780,
        "end_timestamp_ns": 23362978885395
      },
      {
        "id": "ioctl",
        "stack_id": 12798,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978877010,
        "end_timestamp_ns": 23362978877980
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978875015,
        "end_timestamp_ns": 23362978875783
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978873477,
        "end_timestamp_ns": 23362978874243
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978872044,
        "end_timestamp_ns": 23362978872807
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978870610,
        "end_timestamp_ns": 23362978871375
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978869180,
        "end_timestamp_ns": 23362978869945
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978867749,
        "end_timestamp_ns": 23362978868512
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978866317,
        "end_timestamp_ns": 23362978867081
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978864890,
        "end_timestamp_ns": 23362978865655
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978863459,
        "end_timestamp_ns": 23362978864220
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978862026,
        "end_timestamp_ns": 23362978862790
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978860591,
        "end_timestamp_ns": 23362978861353
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978859160,
        "end_timestamp_ns": 23362978859922
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978857730,
        "end_timestamp_ns": 23362978858493
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978856293,
        "end_timestamp_ns": 23362978857057
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978854858,
        "end_timestamp_ns": 23362978855622
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978853422,
        "end_timestamp_ns": 23362978854188
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978851989,
        "end_timestamp_ns": 23362978852752
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978850557,
        "end_timestamp_ns": 23362978851324
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978849116,
        "end_timestamp_ns": 23362978849883
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978847676,
        "end_timestamp_ns": 23362978848445
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978846238,
        "end_timestamp_ns": 23362978847004
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978844800,
        "end_timestamp_ns": 23362978845568
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978843364,
        "end_timestamp_ns": 23362978844129
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978841935,
        "end_timestamp_ns": 23362978842701
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978840506,
        "end_timestamp_ns": 23362978841271
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978839074,
        "end_timestamp_ns": 23362978839840
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978837641,
        "end_timestamp_ns": 23362978838405
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978836212,
        "end_timestamp_ns": 23362978836978
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978834786,
        "end_timestamp_ns": 23362978835549
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978833353,
        "end_timestamp_ns": 23362978834118
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978831922,
        "end_timestamp_ns": 23362978832684
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978830491,
        "end_timestamp_ns": 23362978831255
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978829067,
        "end_timestamp_ns": 23362978829829
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978827639,
        "end_timestamp_ns": 23362978828405
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978826206,
        "end_timestamp_ns": 23362978826972
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978824770,
        "end_timestamp_ns": 23362978825537
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978823344,
        "end_timestamp_ns": 23362978824108
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978821912,
        "end_timestamp_ns": 23362978822678
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978820479,
        "end_timestamp_ns": 23362978821243
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978819046,
        "end_timestamp_ns": 23362978819814
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978817616,
        "end_timestamp_ns": 23362978818381
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978816182,
        "end_timestamp_ns": 23362978816951
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978814741,
        "end_timestamp_ns": 23362978815507
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978813310,
        "end_timestamp_ns": 23362978814077
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978811879,
        "end_timestamp_ns": 23362978812645
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978810444,
        "end_timestamp_ns": 23362978811209
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978809011,
        "end_timestamp_ns": 23362978809776
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978807574,
        "end_timestamp_ns": 23362978808341
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978806140,
        "end_timestamp_ns": 23362978806905
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978804707,
        "end_timestamp_ns": 23362978805472
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978803275,
        "end_timestamp_ns": 23362978804039
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978801846,
        "end_timestamp_ns": 23362978802612
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978800416,
        "end_timestamp_ns": 23362978801178
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978798989,
        "end_timestamp_ns": 23362978799753
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978797565,
        "end_timestamp_ns": 23362978798327
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978796131,
        "end_timestamp_ns": 23362978796898
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978794700,
        "end_timestamp_ns": 23362978795462
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978793264,
        "end_timestamp_ns": 23362978794030
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978791839,
        "end_timestamp_ns": 23362978792602
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978790409,
        "end_timestamp_ns": 23362978791175
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978788977,
        "end_timestamp_ns": 23362978789741
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978787544,
        "end_timestamp_ns": 23362978788312
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978786114,
        "end_timestamp_ns": 23362978786878
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978784670,
        "end_timestamp_ns": 23362978785439
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978783234,
        "end_timestamp_ns": 23362978783999
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978781797,
        "end_timestamp_ns": 23362978782564
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978780362,
        "end_timestamp_ns": 23362978781130
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978778932,
        "end_timestamp_ns": 23362978779697
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978777500,
        "end_timestamp_ns": 23362978778262
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978776070,
        "end_timestamp_ns": 23362978776835
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978774643,
        "end_timestamp_ns": 23362978775407
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978773209,
        "end_timestamp_ns": 23362978773976
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978771777,
        "end_timestamp_ns": 23362978772539
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978770344,
        "end_timestamp_ns": 23362978771108
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978768915,
        "end_timestamp_ns": 23362978769677
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978767486,
        "end_timestamp_ns": 23362978768251
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978766062,
        "end_timestamp_ns": 23362978766824
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978764427,
        "end_timestamp_ns": 23362978765191
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978763003,
        "end_timestamp_ns": 23362978763767
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978761571,
        "end_timestamp_ns": 23362978762336
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978760138,
        "end_timestamp_ns": 23362978760902
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978758703,
        "end_timestamp_ns": 23362978759469
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978757275,
        "end_timestamp_ns": 23362978758039
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978755838,
        "end_timestamp_ns": 23362978756606
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978754399,
        "end_timestamp_ns": 23362978755165
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978752967,
        "end_timestamp_ns": 23362978753734
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978751533,
        "end_timestamp_ns": 23362978752301
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978750094,
        "end_timestamp_ns": 23362978750861
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978748659,
        "end_timestamp_ns": 23362978749423
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978747221,
        "end_timestamp_ns": 23362978747989
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978745793,
        "end_timestamp_ns": 23362978746557
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978744361,
        "end_timestamp_ns": 23362978745128
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978742933,
        "end_timestamp_ns": 23362978743697
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978741506,
        "end_timestamp_ns": 23362978742271
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978740077,
        "end_timestamp_ns": 23362978740841
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978738639,
        "end_timestamp_ns": 23362978739405
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978737211,
        "end_timestamp_ns": 23362978737971
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978735779,
        "end_timestamp_ns": 23362978736543
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978734355,
        "end_timestamp_ns": 23362978735116
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978732925,
        "end_timestamp_ns": 23362978733692
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978731501,
        "end_timestamp_ns": 23362978732263
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978730070,
        "end_timestamp_ns": 23362978730836
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978728636,
        "end_timestamp_ns": 23362978729399
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978727202,
        "end_timestamp_ns": 23362978727969
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978725770,
        "end_timestamp_ns": 23362978726533
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978724333,
        "end_timestamp_ns": 23362978725098
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978722899,
        "end_timestamp_ns": 23362978723666
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978721405,
        "end_timestamp_ns": 23362978722173
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978719970,
        "end_timestamp_ns": 23362978720734
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978718535,
        "end_timestamp_ns": 23362978719302
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978717098,
        "end_timestamp_ns": 23362978717864
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978715659,
        "end_timestamp_ns": 23362978716428
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978714223,
        "end_timestamp_ns": 23362978714989
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978712789,
        "end_timestamp_ns": 23362978713554
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978711358,
        "end_timestamp_ns": 23362978712121
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978709674,
        "end_timestamp_ns": 23362978710440
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978708238,
        "end_timestamp_ns": 23362978709001
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978706811,
        "end_timestamp_ns": 23362978707576
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978705389,
        "end_timestamp_ns": 23362978706149
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978703953,
        "end_timestamp_ns": 23362978704719
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978702529,
        "end_timestamp_ns": 23362978703292
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978701101,
        "end_timestamp_ns": 23362978701867
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978699675,
        "end_timestamp_ns": 23362978700438
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978698239,
        "end_timestamp_ns": 23362978699004
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978696808,
        "end_timestamp_ns": 23362978697571
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978695376,
        "end_timestamp_ns": 23362978696142
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978693949,
        "end_timestamp_ns": 23362978694712
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978692507,
        "end_timestamp_ns": 23362978693274
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978691078,
        "end_timestamp_ns": 23362978691844
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978689644,
        "end_timestamp_ns": 23362978690412
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978688207,
        "end_timestamp_ns": 23362978688973
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978686767,
        "end_timestamp_ns": 23362978687536
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978685331,
        "end_timestamp_ns": 23362978686098
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978683895,
        "end_timestamp_ns": 23362978684666
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978682463,
        "end_timestamp_ns": 23362978683226
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978681026,
        "end_timestamp_ns": 23362978681793
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978679594,
        "end_timestamp_ns": 23362978680357
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978678166,
        "end_timestamp_ns": 23362978678930
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978676729,
        "end_timestamp_ns": 23362978677494
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978675296,
        "end_timestamp_ns": 23362978676060
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978673867,
        "end_timestamp_ns": 23362978674629
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978672440,
        "end_timestamp_ns": 23362978673204
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978671007,
        "end_timestamp_ns": 23362978671770
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978669575,
        "end_timestamp_ns": 23362978670336
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978668063,
        "end_timestamp_ns": 23362978668864
      },
      {
        "id": "ioctl",
        "stack_id": 15727,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978665456,
        "end_timestamp_ns": 23362978667141
      },
      {
        "id": "newfstatat",
        "stack_id": 15528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978661238,
        "end_timestamp_ns": 23362978664074
      },
      {
        "id": "uname",
        "stack_id": 176,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978325906,
        "end_timestamp_ns": 23362978326995
      },
      {
        "id": "sysinfo",
        "stack_id": 9194,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978319122,
        "end_timestamp_ns": 23362978323948
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978313807,
        "end_timestamp_ns": 23362978317144
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978310909,
        "end_timestamp_ns": 23362978311621
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978308349,
        "end_timestamp_ns": 23362978309064
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978305728,
        "end_timestamp_ns": 23362978307520
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978297970,
        "end_timestamp_ns": 23362978304937
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978295132,
        "end_timestamp_ns": 23362978295844
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978292406,
        "end_timestamp_ns": 23362978294330
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978287522,
        "end_timestamp_ns": 23362978291680
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978284788,
        "end_timestamp_ns": 23362978285522
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978282478,
        "end_timestamp_ns": 23362978283999
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978277366,
        "end_timestamp_ns": 23362978281739
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978274290,
        "end_timestamp_ns": 23362978276062
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978268124,
        "end_timestamp_ns": 23362978273516
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978265311,
        "end_timestamp_ns": 23362978266019
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978262867,
        "end_timestamp_ns": 23362978263592
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978260468,
        "end_timestamp_ns": 23362978262075
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978255126,
        "end_timestamp_ns": 23362978259742
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978252419,
        "end_timestamp_ns": 23362978253157
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978250037,
        "end_timestamp_ns": 23362978251600
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978245233,
        "end_timestamp_ns": 23362978249303
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978242494,
        "end_timestamp_ns": 23362978243219
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978240110,
        "end_timestamp_ns": 23362978241699
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978235420,
        "end_timestamp_ns": 23362978239352
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978232330,
        "end_timestamp_ns": 23362978234075
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978226364,
        "end_timestamp_ns": 23362978231582
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978223546,
        "end_timestamp_ns": 23362978224267
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978221003,
        "end_timestamp_ns": 23362978221718
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978218549,
        "end_timestamp_ns": 23362978220209
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978213700,
        "end_timestamp_ns": 23362978217828
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978210966,
        "end_timestamp_ns": 23362978211695
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978208586,
        "end_timestamp_ns": 23362978210159
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978203576,
        "end_timestamp_ns": 23362978207844
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978200692,
        "end_timestamp_ns": 23362978201432
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978198249,
        "end_timestamp_ns": 23362978199856
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978193259,
        "end_timestamp_ns": 23362978197506
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978190127,
        "end_timestamp_ns": 23362978191853
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978183306,
        "end_timestamp_ns": 23362978189298
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978180279,
        "end_timestamp_ns": 23362978181020
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978175174,
        "end_timestamp_ns": 23362978175918
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978172340,
        "end_timestamp_ns": 23362978174324
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978167135,
        "end_timestamp_ns": 23362978171594
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978164281,
        "end_timestamp_ns": 23362978165025
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978161571,
        "end_timestamp_ns": 23362978163219
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978156342,
        "end_timestamp_ns": 23362978160776
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978152991,
        "end_timestamp_ns": 23362978153769
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978150063,
        "end_timestamp_ns": 23362978151957
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978142546,
        "end_timestamp_ns": 23362978147491
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978138138,
        "end_timestamp_ns": 23362978140550
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978129141,
        "end_timestamp_ns": 23362978136563
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978092196,
        "end_timestamp_ns": 23362978092934
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978087921,
        "end_timestamp_ns": 23362978090013
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978081336,
        "end_timestamp_ns": 23362978086434
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978076117,
        "end_timestamp_ns": 23362978079989
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978072954,
        "end_timestamp_ns": 23362978073703
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978069279,
        "end_timestamp_ns": 23362978071490
      },
      {
        "id": "openat",
        "stack_id": 9549,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978054752,
        "end_timestamp_ns": 23362978067393
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978045690,
        "end_timestamp_ns": 23362978046572
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978043408,
        "end_timestamp_ns": 23362978044217
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362978016112,
        "end_timestamp_ns": 23362978040604
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977978988,
        "end_timestamp_ns": 23362978013327
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977941449,
        "end_timestamp_ns": 23362977976165
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977903330,
        "end_timestamp_ns": 23362977938656
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977863990,
        "end_timestamp_ns": 23362977900121
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977806747,
        "end_timestamp_ns": 23362977856015
      },
      {
        "id": "openat",
        "stack_id": 8451,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977791602,
        "end_timestamp_ns": 23362977799541
      },
      {
        "id": "openat",
        "stack_id": 13766,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977732499,
        "end_timestamp_ns": 23362977754008
      },
      {
        "id": "close",
        "stack_id": 10036,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977669514,
        "end_timestamp_ns": 23362977670334
      },
      {
        "id": "read",
        "stack_id": 10716,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977663902,
        "end_timestamp_ns": 23362977668679
      },
      {
        "id": "openat",
        "stack_id": 14323,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977651618,
        "end_timestamp_ns": 23362977663234
      },
      {
        "id": "close",
        "stack_id": 15863,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977480608,
        "end_timestamp_ns": 23362977482619
      },
      {
        "id": "read",
        "stack_id": 13290,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977171115,
        "end_timestamp_ns": 23362977278946
      },
      {
        "id": "openat",
        "stack_id": 2415,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977147640,
        "end_timestamp_ns": 23362977154400
      },
      {
        "id": "newfstatat",
        "stack_id": 10528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977021511,
        "end_timestamp_ns": 23362977134887
      },
      {
        "id": "newfstatat",
        "stack_id": 9370,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362977017181,
        "end_timestamp_ns": 23362977020403
      },
      {
        "id": "newfstatat",
        "stack_id": 15528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362976664174,
        "end_timestamp_ns": 23362977014558
      },
      {
        "id": "newfstatat",
        "stack_id": 15528,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362976632800,
        "end_timestamp_ns": 23362976660560
      },
      {
        "id": "kill",
        "stack_id": 8196,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362976596316,
        "end_timestamp_ns": 23362976600135
      },
      {
        "id": "getppid",
        "stack_id": 12310,
        "pid_tgid": 857528875551723,
        "start_timestamp_ns": 23362976590852,
        "end_timestamp_ns": 23362976595367
      }
    ]
  }
}