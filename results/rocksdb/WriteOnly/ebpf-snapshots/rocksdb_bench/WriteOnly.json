{
  "times": [
    [
      23152384151966,
      1
    ],
    [
      23152384184848,
      1
    ],
    [
      23152384187478,
      1
    ],
    [
      23152384210695,
      1
    ],
    [
      23152863657439,
      0
    ],
    [
      23152863666054,
      0
    ],
    [
      23152863697056,
      0
    ],
    [
      23152863715783,
      0
    ]
  ],
  "time_ms": 1746652130150,
  "syscalls": {},
  "threads": [
    {
      "timestamp_ns": 23152985308960,
      "tid": 198026,
      "start": 0
    },
    {
      "timestamp_ns": 23152985191776,
      "tid": 197992,
      "start": 0
    },
    {
      "timestamp_ns": 23152985166726,
      "tid": 197991,
      "start": 0
    },
    {
      "timestamp_ns": 23152985161908,
      "tid": 197990,
      "start": 0
    },
    {
      "timestamp_ns": 23152984961992,
      "tid": 198028,
      "start": 0
    },
    {
      "timestamp_ns": 23152984778025,
      "tid": 198027,
      "start": 0
    },
    {
      "timestamp_ns": 23152384189536,
      "tid": 135605287590160,
      "start": 1
    },
    {
      "timestamp_ns": 23152384152727,
      "tid": 135605279197456,
      "start": 1
    },
    {
      "timestamp_ns": 23152384072115,
      "tid": 135605270804752,
      "start": 1
    },
    {
      "timestamp_ns": 23152372250071,
      "tid": 197995,
      "start": 0
    },
    {
      "timestamp_ns": 23152366508236,
      "tid": 198025,
      "start": 0
    },
    {
      "timestamp_ns": 23152366489778,
      "tid": 135605270804752,
      "start": 1
    },
    {
      "timestamp_ns": 23152366475950,
      "tid": 198024,
      "start": 0
    },
    {
      "timestamp_ns": 23152366451058,
      "tid": 135605279197456,
      "start": 1
    },
    {
      "timestamp_ns": 23152366428189,
      "tid": 198023,
      "start": 0
    },
    {
      "timestamp_ns": 23152366401511,
      "tid": 135605287590160,
      "start": 1
    },
    {
      "timestamp_ns": 23152366373441,
      "tid": 198022,
      "start": 0
    },
    {
      "timestamp_ns": 23152366346220,
      "tid": 135605295982864,
      "start": 1
    },
    {
      "timestamp_ns": 23152366322541,
      "tid": 198021,
      "start": 0
    },
    {
      "timestamp_ns": 23152366297085,
      "tid": 135605304375568,
      "start": 1
    },
    {
      "timestamp_ns": 23152366274351,
      "tid": 198020,
      "start": 0
    },
    {
      "timestamp_ns": 23152366245328,
      "tid": 135605312768272,
      "start": 1
    },
    {
      "timestamp_ns": 23152366226369,
      "tid": 198019,
      "start": 0
    },
    {
      "timestamp_ns": 23152366193892,
      "tid": 135605321160976,
      "start": 1
    },
    {
      "timestamp_ns": 23152366184864,
      "tid": 198018,
      "start": 0
    },
    {
      "timestamp_ns": 23152366155110,
      "tid": 135605329553680,
      "start": 1
    },
    {
      "timestamp_ns": 23152366128206,
      "tid": 198017,
      "start": 0
    },
    {
      "timestamp_ns": 23152366102141,
      "tid": 135605337946384,
      "start": 1
    },
    {
      "timestamp_ns": 23152366079574,
      "tid": 198016,
      "start": 0
    },
    {
      "timestamp_ns": 23152366053316,
      "tid": 135605346339088,
      "start": 1
    },
    {
      "timestamp_ns": 23152366030392,
      "tid": 198015,
      "start": 0
    },
    {
      "timestamp_ns": 23152366006228,
      "tid": 135605354731792,
      "start": 1
    },
    {
      "timestamp_ns": 23152365987553,
      "tid": 198014,
      "start": 0
    },
    {
      "timestamp_ns": 23152365960970,
      "tid": 135605363124496,
      "start": 1
    },
    {
      "timestamp_ns": 23152365942336,
      "tid": 198013,
      "start": 0
    },
    {
      "timestamp_ns": 23152365912386,
      "tid": 135605371517200,
      "start": 1
    },
    {
      "timestamp_ns": 23152365887307,
      "tid": 198012,
      "start": 0
    },
    {
      "timestamp_ns": 23152365860985,
      "tid": 135605379909904,
      "start": 1
    },
    {
      "timestamp_ns": 23152365837885,
      "tid": 198011,
      "start": 0
    },
    {
      "timestamp_ns": 23152365812098,
      "tid": 135605388302608,
      "start": 1
    },
    {
      "timestamp_ns": 23152365786721,
      "tid": 198010,
      "start": 0
    },
    {
      "timestamp_ns": 23152365760125,
      "tid": 135605396695312,
      "start": 1
    },
    {
      "timestamp_ns": 23152365735185,
      "tid": 198009,
      "start": 0
    },
    {
      "timestamp_ns": 23152365710231,
      "tid": 135605405088016,
      "start": 1
    },
    {
      "timestamp_ns": 23152365687147,
      "tid": 198008,
      "start": 0
    },
    {
      "timestamp_ns": 23152365660921,
      "tid": 135605488949520,
      "start": 1
    },
    {
      "timestamp_ns": 23152365635197,
      "tid": 198007,
      "start": 0
    },
    {
      "timestamp_ns": 23152365608860,
      "tid": 135605497342224,
      "start": 1
    },
    {
      "timestamp_ns": 23152365585489,
      "tid": 198006,
      "start": 0
    },
    {
      "timestamp_ns": 23152365561154,
      "tid": 135605505734928,
      "start": 1
    },
    {
      "timestamp_ns": 23152365538648,
      "tid": 198005,
      "start": 0
    },
    {
      "timestamp_ns": 23152365515698,
      "tid": 135605514127632,
      "start": 1
    },
    {
      "timestamp_ns": 23152365498816,
      "tid": 198004,
      "start": 0
    },
    {
      "timestamp_ns": 23152365470506,
      "tid": 135605522520336,
      "start": 1
    },
    {
      "timestamp_ns": 23152365455740,
      "tid": 198003,
      "start": 0
    },
    {
      "timestamp_ns": 23152365421024,
      "tid": 135605530913040,
      "start": 1
    },
    {
      "timestamp_ns": 23152365399524,
      "tid": 198002,
      "start": 0
    },
    {
      "timestamp_ns": 23152365371580,
      "tid": 135605539305744,
      "start": 1
    },
    {
      "timestamp_ns": 23152365348454,
      "tid": 198001,
      "start": 0
    },
    {
      "timestamp_ns": 23152365317089,
      "tid": 135605690276112,
      "start": 1
    },
    {
      "timestamp_ns": 23152365288069,
      "tid": 198000,
      "start": 0
    },
    {
      "timestamp_ns": 23152365262929,
      "tid": 135605698668816,
      "start": 1
    },
    {
      "timestamp_ns": 23152365245099,
      "tid": 197999,
      "start": 0
    },
    {
      "timestamp_ns": 23152365217554,
      "tid": 135605707061520,
      "start": 1
    },
    {
      "timestamp_ns": 23152365204283,
      "tid": 197998,
      "start": 0
    },
    {
      "timestamp_ns": 23152365182924,
      "tid": 135605715454224,
      "start": 1
    },
    {
      "timestamp_ns": 23152365158278,
      "tid": 197997,
      "start": 0
    },
    {
      "timestamp_ns": 23152365143974,
      "tid": 197996,
      "start": 0
    },
    {
      "timestamp_ns": 23152365126927,
      "tid": 135605723846928,
      "start": 1
    },
    {
      "timestamp_ns": 23152365060772,
      "tid": 135605732239632,
      "start": 1
    },
    {
      "timestamp_ns": 23152365018496,
      "tid": 135605740632336,
      "start": 1
    },
    {
      "timestamp_ns": 23152361437006,
      "tid": 135605824502032,
      "start": 1
    },
    {
      "timestamp_ns": 23152361363234,
      "tid": 135605832894736,
      "start": 1
    },
    {
      "timestamp_ns": 23152359502787,
      "tid": 135605841287440,
      "start": 1
    },
    {
      "timestamp_ns": 23152359418670,
      "tid": 135605849680144,
      "start": 1
    },
    {
      "timestamp_ns": 23152359295538,
      "tid": 135605858072848,
      "start": 1
    }
  ],
  "syscall_details": {
    "syscall_stacks": {
      "197961": {
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "__pthread_sigmask+0x4b",
              "remove+0xd"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pthread_create@GLIBC_2.2.5+0x5d9",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 38
          },
          {
            "stack_trace": [
              "pthread_create@GLIBC_2.2.5+0x513",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 39
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pthread_create@GLIBC_2.2.5+0x680"
            ],
            "count": 1
          }
        ],
        "kill": [
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "kill+0xb"
            ],
            "count": 1
          }
        ],
        "getppid": [
          {
            "stack_trace": [
              "getppid+0xb",
              "remove+0xd",
              "[unknown]",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "getppid+0xb"
            ],
            "count": 1
          }
        ],
        "unlink": [
          {
            "stack_trace": [
              "__GI___unlink+0xb",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___unlink+0xb",
              "rocksdb::DeleteScheduler::DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x47c",
              "rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) [clone .localalias]+0x30",
              "rocksdb::DeleteDBFile(rocksdb::ImmutableDBOptions const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool)+0x3c",
              "rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileType, unsigned long)+0x8b",
              "rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)+0x193e",
              "rocksdb::DBImpl::CloseHelper()+0x342",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___unlink+0xb",
              "rocksdb::CompositeEnv::DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileType, unsigned long)+0x1ef",
              "rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)+0x193e",
              "rocksdb::DBImpl::DeleteObsoleteFiles()+0x94",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c72",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "close": [
          {
            "stack_trace": [
              "__close_nocancel+0xb"
            ],
            "count": 33
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::Directories::Close(rocksdb::IOOptions const&, rocksdb::IODebugContext*)+0x58",
              "rocksdb::DBImpl::CloseHelper()+0x7b3",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::EnvLogger::CloseHelper()+0x8b",
              "rocksdb::EnvLogger::CloseImpl()+0x25",
              "rocksdb::Logger::Close()+0x30",
              "rocksdb::DBImpl::CloseHelper()+0x6d3",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::CompositeEnv::UnlockFile(rocksdb::FileLock*)+0x158",
              "rocksdb::DBImpl::CloseHelper()+0x65e",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::log::Writer::~Writer()+0x95",
              "rocksdb::VersionSet::~VersionSet()+0x406",
              "rocksdb::VersionSet::~VersionSet()+0x16",
              "rocksdb::DBImpl::CloseHelper()+0x62f",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::PosixRandomAccessFile::~PosixRandomAccessFile()+0x16",
              "rocksdb::BlockBasedTable::Rep::~Rep()+0x179",
              "rocksdb::BlockBasedTable::~BlockBasedTable()+0x2d",
              "rocksdb::BlockBasedTable::~BlockBasedTable() [clone .localalias]+0x16",
              "rocksdb::lru_cache::LRUCacheShard::Erase(rocksdb::Slice const&, unsigned int)+0xdf",
              "rocksdb::TableCache::Evict(rocksdb::Cache*, unsigned long)+0x37",
              "rocksdb::VersionSet::~VersionSet()+0xa3",
              "rocksdb::VersionSet::~VersionSet()+0x16",
              "rocksdb::DBImpl::CloseHelper()+0x62f",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::log::Writer::~Writer()+0x95",
              "rocksdb::DBImpl::CloseHelper()+0x481",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DBImpl::FindObsoleteFiles(rocksdb::JobContext*, bool, bool)+0x51a",
              "rocksdb::DBImpl::CloseHelper()+0x30d",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x20f4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DBImpl::FindObsoleteFiles(rocksdb::JobContext*, bool, bool)+0x51a",
              "rocksdb::DBImpl::DeleteObsoleteFiles()+0x68",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c72",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DBImpl::DeleteObsoleteOptionsFiles()+0x1b2",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x200",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x603",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x23a0",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::PosixWritableFile::~PosixWritableFile()+0xfe",
              "rocksdb::PosixWritableFile::~PosixWritableFile()+0x16",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x2cf",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x101a",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::CompositeEnv::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)+0x15b",
              "rocksdb::DBImpl::DeleteUnreferencedSstFiles(rocksdb::DBImpl::RecoveryContext*)+0xd63",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0xf33",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "[unknown]"
            ],
            "count": 5
          },
          {
            "stack_trace": [
              "close+0x3b",
              "std::_Function_handler<rocksdb::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*), rocksdb::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*&&)+0x2c",
              "rocksdb::LogicalBlockSizeCache::RefAndCacheLogicalBlockSize(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x213",
              "rocksdb::(anonymous namespace)::PosixFileSystem::RegisterDbPaths(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x2c",
              "rocksdb::CompositeEnv::RegisterDbPaths(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x69",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x3fa",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::PosixRandomAccessFile::~PosixRandomAccessFile()+0x16",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x19f2",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::CompositeEnv::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)+0x15b",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x145",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "rocksdb::DeleteScheduler::CleanupDirectory(rocksdb::Env*, rocksdb::SstFileManagerImpl*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x133",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x2f0",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "write": [
          {
            "stack_trace": [
              "write+0x4f",
              "[unknown]"
            ],
            "count": 30
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::DBImpl::CloseHelper()+0x69b",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)+0x13c4",
              "rocksdb::DBImpl::CloseHelper()+0x342",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1cac",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::WritableFileWriter::Sync(bool)+0xc4",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x235f",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0xfdd",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x203",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::log::Writer::AddRecord(rocksdb::Slice const&, rocksdb::Env::IOPriority)+0x3d7",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0xe04",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::log::Writer::AddRecord(rocksdb::Slice const&, rocksdb::Env::IOPriority)+0x3d7",
              "rocksdb::VersionSet::WriteCurrentStateToManifest(std::unordered_map<unsigned int, rocksdb::VersionSet::MutableCFState, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, rocksdb::VersionSet::MutableCFState> > > const&, rocksdb::VersionEdit const&, rocksdb::log::Writer*, rocksdb::IOStatus&)+0x12cb",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x22e9",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::log::Writer::AddRecord(rocksdb::Slice const&, rocksdb::Env::IOPriority)+0x3d7",
              "rocksdb::VersionSet::WriteCurrentStateToManifest(std::unordered_map<unsigned int, rocksdb::VersionSet::MutableCFState, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, rocksdb::VersionSet::MutableCFState> > > const&, rocksdb::VersionEdit const&, rocksdb::log::Writer*, rocksdb::IOStatus&)+0x547",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x22e9",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::SanitizeOptions(rocksdb::ImmutableDBOptions const&, rocksdb::ColumnFamilyOptions const&)+0x247",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x160",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::SanitizeOptions(rocksdb::ImmutableDBOptions const&, rocksdb::ColumnFamilyOptions const&)+0x1ee",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x160",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0x47b",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DumpRocksDBBuildVersion(rocksdb::Logger*)+0x52",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d35",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___write_nocancel+0xb",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "write+0x17",
              "[unknown]"
            ],
            "count": 4
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open+0xd4",
              "[unknown]"
            ],
            "count": 23
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DBImpl::FindObsoleteFiles(rocksdb::JobContext*, bool, bool)+0x51a",
              "rocksdb::DBImpl::CloseHelper()+0x30d",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "openat64+0xd3",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x20f4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DBImpl::FindObsoleteFiles(rocksdb::JobContext*, bool, bool)+0x51a",
              "rocksdb::DBImpl::DeleteObsoleteFiles()+0x68",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c72",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DBImpl::DeleteObsoleteOptionsFiles()+0x1b2",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x200",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x101a",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::CompositeEnv::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)+0x15b",
              "rocksdb::DBImpl::DeleteUnreferencedSstFiles(rocksdb::DBImpl::RecoveryContext*)+0xd63",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0xf33",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0x5b9",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::ColumnFamilyData::CreateNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x3f",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x4cd",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0xe1",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::ColumnFamilyData::CreateNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x3f",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x4cd",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::CompositeEnv::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)+0x15b",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x145",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::DeleteScheduler::CleanupDirectory(rocksdb::Env*, rocksdb::SstFileManagerImpl*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x133",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x2f0",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__open+0x5b",
              "[unknown]"
            ],
            "count": 23
          },
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::CompressionContextCache::Instance()+0x5c",
              "rocksdb::Env::Default()+0x2c",
              "rocksdb::DBOptions::DBOptions()+0x31",
              "std::shared_ptr<ucsb::facebook::rocksdb_t>::shared_ptr<std::allocator<ucsb::facebook::rocksdb_t>, ucsb::facebook::db_mode_t>(std::_Sp_alloc_shared_tag<std::allocator<ucsb::facebook::rocksdb_t> >, ucsb::facebook::db_mode_t&&)+0xe8",
              "[unknown]",
              "std::_Sp_counted_ptr_inplace<ucsb::facebook::rocksdb_t, std::allocator<ucsb::facebook::rocksdb_t>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "newfstatat": [
          {
            "stack_trace": [
              "fstatat64+0xe",
              "[unknown]",
              "benchmark::internal::LambdaBenchmark<main::{lambda(benchmark::State&)#1}>::~LambdaBenchmark()+0x0",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::log::Writer::~Writer()+0x95",
              "rocksdb::VersionSet::~VersionSet()+0x406",
              "rocksdb::VersionSet::~VersionSet()+0x16",
              "rocksdb::DBImpl::CloseHelper()+0x62f",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe"
            ],
            "count": 18
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "[unknown]",
              "[unknown]"
            ],
            "count": 14
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x15b",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x286",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x15b",
              "rocksdb::DBImpl::GetLogSizeAndMaybeTruncate(unsigned long, bool, rocksdb::DBImpl::LogFileNumberSize*)+0xbe",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x22f8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::DBImpl::CreateAndNewDirectory(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*)+0xbb",
              "rocksdb::ColumnFamilyData::AddDirectories(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::FSDirectory>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::FSDirectory> > > >*)+0x160",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x3ab",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x15b",
              "rocksdb::DBImpl::CheckConsistency()+0x1595",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x9b5",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::PosixHelper::GetLogicalBlockSizeOfDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x47",
              "std::_Function_handler<rocksdb::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*), rocksdb::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*&&)+0x2c",
              "rocksdb::LogicalBlockSizeCache::RefAndCacheLogicalBlockSize(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x213",
              "rocksdb::(anonymous namespace)::PosixFileSystem::RegisterDbPaths(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x2c",
              "rocksdb::CompositeEnv::RegisterDbPaths(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)+0x69",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x3fa",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::DBImpl::CreateAndNewDirectory(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*)+0xbb",
              "rocksdb::Directories::SetDirectories(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > const&)+0x5d",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0xea",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x5f6",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x486",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x15b",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x128b",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*)+0x15b",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x153b",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x1b0",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatat64+0xe",
              "[unknown]"
            ],
            "count": 3
          }
        ],
        "read": [
          {
            "stack_trace": [
              "__GI_read+0x4c"
            ],
            "count": 17
          },
          {
            "stack_trace": [
              "__read_nocancel+0x8",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0x5b9",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::ColumnFamilyData::CreateNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x3f",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x4cd",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__read_nocancel+0x8",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0xe1",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::ColumnFamilyData::CreateNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x3f",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x4cd",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__read_nocancel+0x8"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__GI_read+0x12"
            ],
            "count": 26
          },
          {
            "stack_trace": [
              "__read_nocancel+0x8",
              "rocksdb::CompressionContextCache::Instance()+0x5c",
              "rocksdb::Env::Default()+0x2c",
              "rocksdb::DBOptions::DBOptions()+0x31",
              "std::shared_ptr<ucsb::facebook::rocksdb_t>::shared_ptr<std::allocator<ucsb::facebook::rocksdb_t>, ucsb::facebook::db_mode_t>(std::_Sp_alloc_shared_tag<std::allocator<ucsb::facebook::rocksdb_t> >, ucsb::facebook::db_mode_t&&)+0xe8",
              "[unknown]",
              "std::_Sp_counted_ptr_inplace<ucsb::facebook::rocksdb_t, std::allocator<ucsb::facebook::rocksdb_t>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "ioctl": [
          {
            "stack_trace": [
              "tcgetattr+0x2a",
              "[unknown]",
              "[unknown]"
            ],
            "count": 634
          },
          {
            "stack_trace": [
              "tcgetattr+0x2a",
              "[unknown]",
              "std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()+0x0",
              "[unknown]"
            ],
            "count": 201
          },
          {
            "stack_trace": [
              "tcgetattr+0x2a"
            ],
            "count": 16
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 34
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 29
          },
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          }
        ],
        "gettid": [
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::CloseHelper()+0x693",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::DeleteScheduler::DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x671",
              "rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) [clone .localalias]+0x30",
              "rocksdb::DeleteDBFile(rocksdb::ImmutableDBOptions const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool)+0x3c",
              "rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileType, unsigned long)+0x8b",
              "rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)+0x193e",
              "rocksdb::DBImpl::CloseHelper()+0x342",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::CancelAllBackgroundWork(bool)+0x63",
              "rocksdb::DBImpl::CloseHelper()+0xc5",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0x120",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1ca4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x9c2",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1df3",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::Logger*, char const*, ...)+0x9a",
              "rocksdb::EventLogger::Log(rocksdb::Logger*, rocksdb::JSONWriter const&)+0x80",
              "rocksdb::EventLoggerStream::~EventLoggerStream()+0x4c",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x23aa",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0xc9c",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::Logger*, char const*, ...)+0x9a",
              "rocksdb::EventLogger::Log(rocksdb::Logger*, rocksdb::JSONWriter const&)+0x80",
              "rocksdb::EventLoggerStream::~EventLoggerStream()+0x4c",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0xb92",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x2e0",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x54d",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x4eb",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x128c",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x119d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1181",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1164",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1143",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1122",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x10d7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x10a7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x108a",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x106d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x103e",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1021",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1004",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xfe7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xfca",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xfad",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf90",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf73",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf56",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf39",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf20",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xf06",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xeec",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xece",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xeb4",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xe7e",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xaf6",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xad9",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xabc",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xa02",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x9e6",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x9ca",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x9ae",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x992",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 3
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x8be",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x801",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x7e4",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x7c7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x7aa",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x790",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x761",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x744",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x70d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 7
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x6d8",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x6b7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x69a",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x67d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x661",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x644",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x628",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x60c",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x5f0",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x5d3",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x5a5",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x589",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x565",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x549",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x52d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x511",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x4f5",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x4d9",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x4b5",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x498",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x474",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x458",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x43c",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x420",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x404",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x3e8",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x3cc",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x3b2",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x399",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x379",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x356",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x327",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x183d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1908",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x21e",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x206",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x1c6",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x18b",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x153",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x12d",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xe9",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0xb7",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x85",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ColumnFamilyOptions::Dump(rocksdb::Logger*) const+0x53",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x88a",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x877",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Logger::Logv(rocksdb::InfoLogLevel, char const*, __va_list_tag*) [clone .part.0]+0xbc",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::SanitizeOptions(rocksdb::ImmutableDBOptions const&, rocksdb::ColumnFamilyOptions const&)+0x247",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x160",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Logger::Logv(rocksdb::InfoLogLevel, char const*, __va_list_tag*) [clone .part.0]+0xbc",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::SanitizeOptions(rocksdb::ImmutableDBOptions const&, rocksdb::ColumnFamilyOptions const&)+0x1ee",
              "rocksdb::ColumnFamilyData::ColumnFamilyData(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Version*, rocksdb::Cache*, rocksdb::WriteBufferManager*, rocksdb::ColumnFamilyOptions const&, rocksdb::ImmutableDBOptions const&, rocksdb::FileOptions const*, rocksdb::ColumnFamilySet*, rocksdb::BlockCacheTracer*, std::shared_ptr<rocksdb::IOTracer> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x160",
              "rocksdb::ColumnFamilySet::CreateColumnFamily(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int, rocksdb::Version*, rocksdb::ColumnFamilyOptions const&)+0x8e",
              "rocksdb::VersionSet::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const*)+0x3e4",
              "rocksdb::VersionEditHandler::CreateCfAndInit(rocksdb::ColumnFamilyOptions const&, rocksdb::VersionEdit const&)+0x37",
              "rocksdb::VersionEditHandler::Initialize()+0x2c9",
              "rocksdb::VersionEditHandlerBase::Iterate(rocksdb::log::Reader&, rocksdb::Status*)+0x8c",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x412",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0xe4",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::LockFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, rocksdb::FileLock**, rocksdb::IODebugContext*)+0xa0",
              "rocksdb::CompositeEnv::LockFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileLock**)+0x15b",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x6a0",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1e4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1e0b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1dda",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 8
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d8d",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x1a7",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x18d",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x173",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x159",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x13f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x126",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x10c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0xf3",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0xda",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0xc0",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0xa6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x8c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x72",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x58",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x3f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::MutableDBOptions::Dump(rocksdb::Logger*) const+0x26",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d6f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x78c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x76f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x752",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x735",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x719",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x6fc",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x6ca",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x6ad",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x690",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x673",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x656",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x61c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x5ff",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x5e2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x5c5",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x5a8",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x7d6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x547",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x52a",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x50d",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x4f0",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x4d3",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x4b6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x499",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x47c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(rocksdb::Logger*, char const*, ...)+0xa0",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x45f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x43a",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x420",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x403",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x3e6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x3ca",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x3ad",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x390",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x373",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x356",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x339",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x31c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x2ff",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x2c6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x2a9",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x28f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x275",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x258",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x23b",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x21e",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x201",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x1e4",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x1c7",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x1aa",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x18d",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x170",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x153",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x139",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x11c",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x103",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0xe9",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0xc3",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0xa9",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x8f",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x75",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x5b",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x41",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::ImmutableDBOptions::Dump(rocksdb::Logger*) const+0x28",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d5b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x486",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x5ec",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x1355",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x1150",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x1120",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x10b",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Header(std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xa3",
              "rocksdb::DumpDBFileSummary(rocksdb::ImmutableDBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0xf7",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d4b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d35",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DumpRocksDBBuildVersion(rocksdb::Logger*)+0xc6",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d35",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0x100",
              "rocksdb::DumpRocksDBBuildVersion(rocksdb::Logger*)+0x52",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1d35",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::GenerateRawUniqueId(unsigned long*, unsigned long*, bool)+0xf7",
              "rocksdb::SemiStructuredUniqueIdGen::Reset()+0x27",
              "rocksdb::(anonymous namespace)::DbSessionIdGen()+0x57",
              "rocksdb::DBImpl::GenerateDbSessionId[abi:cxx11](rocksdb::Env*)+0x33",
              "rocksdb::DBImpl::SetDbSessionId()+0x35",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1a9f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "fcntl": [
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::CompositeEnv::UnlockFile(rocksdb::FileLock*)+0x158",
              "rocksdb::DBImpl::CloseHelper()+0x65e",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel+0x45"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24"
            ],
            "count": 6
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x1f7",
              "rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x15a",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x2404",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x300",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x136",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1e6b",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::DBImpl::CreateWAL(unsigned long, unsigned long, unsigned long, rocksdb::log::Writer**)+0x211",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x12a4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::DBImpl::CreateWAL(unsigned long, unsigned long, unsigned long, rocksdb::log::Writer**)+0x17f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x12a4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::ReopenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30",
              "rocksdb::DBImpl::GetLogSizeAndMaybeTruncate(unsigned long, bool, rocksdb::DBImpl::LogFileNumberSize*)+0x2eb",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x22f8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0xd83",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::ReadFileToString(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)+0x106",
              "rocksdb::DBImpl::GetDbIdentityFromIdentityFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const+0xfb",
              "rocksdb::DBImpl::SetupDBId(bool, rocksdb::DBImpl::RecoveryContext*)+0x24c",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x298",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0x1c8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::ReadFileToString(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)+0x106",
              "rocksdb::VersionSet::GetCurrentManifestPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long*)+0x86",
              "rocksdb::VersionSet::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)+0xad",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x242",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1170",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::CompositeEnv::LockFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileLock**)+0x15b",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x6a0",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 3
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::FileSystem::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, std::shared_ptr<rocksdb::Logger>*, rocksdb::IODebugContext*)+0x126",
              "rocksdb::CompositeEnv::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<rocksdb::Logger>*)+0x15b",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x718",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x1f7",
              "rocksdb::LoadOptionsFromFile(rocksdb::ConfigOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions*, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> >*, std::shared_ptr<rocksdb::Cache>*)+0x79",
              "rocksdb::LoadOptionsFromFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::Env*, rocksdb::DBOptions*, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> >*, bool, std::shared_ptr<rocksdb::Cache>*)+0x94",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0xfc6",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 2
          }
        ],
        "ftruncate": [
          {
            "stack_trace": [
              "__ftruncate+0xb",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::log::Writer::~Writer()+0x95",
              "rocksdb::VersionSet::~VersionSet()+0x406",
              "rocksdb::VersionSet::~VersionSet()+0x16",
              "rocksdb::DBImpl::CloseHelper()+0x62f",
              "rocksdb::DBImpl::CloseImpl()+0x25",
              "rocksdb::DBImpl::~DBImpl()+0x8a",
              "rocksdb::DBImpl::~DBImpl()+0x16",
              "ucsb::facebook::rocksdb_t::close()+0x305",
              "[unknown]",
              "ucsb::facebook::rocksdb_t::~rocksdb_t()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__ftruncate+0xb",
              "rocksdb::DBImpl::GetLogSizeAndMaybeTruncate(unsigned long, bool, rocksdb::DBImpl::LogFileNumberSize*)+0x43a",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x22f8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "getdents64": [
          {
            "stack_trace": [
              "__getdents+0x17",
              "[unknown]"
            ],
            "count": 5
          },
          {
            "stack_trace": [
              "__getdents+0x17"
            ],
            "count": 9
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 4
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7"
            ],
            "count": 4
          },
          {
            "stack_trace": [
              "___pthread_cond_broadcast+0x130"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__lll_lock_wake_private+0x18"
            ],
            "count": 36
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b"
            ],
            "count": 24
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 4
          },
          {
            "stack_trace": [
              "__pthread_once_slow+0x110"
            ],
            "count": 7
          },
          {
            "stack_trace": [
              "__pthread_once_slow+0x110",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "clock_nanosleep": [
          {
            "stack_trace": [
              "__clock_nanosleep+0xc8",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0x1f1",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "clock_gettime": [
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0x1f1",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "sched_yield": [
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x9a6",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 161
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x1707",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 10
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0xbd0",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 22
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              ""
            ],
            "count": 87
          }
        ],
        "clone3": [
          {
            "stack_trace": [
              "__clone3+0x1d"
            ],
            "count": 39
          }
        ],
        "fsync": [
          {
            "stack_trace": [
              "fsync+0x3b",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x514",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fsync+0x3b",
              "rocksdb::WritableFileWriter::SyncInternal(bool)+0x367",
              "rocksdb::WritableFileWriter::Sync(bool)+0x170",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x235f",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fsync+0x3b",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x568",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "fstatfs": [
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*, rocksdb::IODebugContext*)+0x130",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x3cd",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x136",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1e6b",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::DBImpl::CreateWAL(unsigned long, unsigned long, unsigned long, rocksdb::log::Writer**)+0x17f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x12a4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::ReopenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30",
              "rocksdb::DBImpl::GetLogSizeAndMaybeTruncate(unsigned long, bool, rocksdb::DBImpl::LogFileNumberSize*)+0x2eb",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x22f8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*, rocksdb::IODebugContext*)+0x130",
              "rocksdb::DBImpl::CreateAndNewDirectory(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*)+0x171",
              "rocksdb::ColumnFamilyData::AddDirectories(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::FSDirectory>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::FSDirectory> > > >*)+0x160",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x3ab",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*, rocksdb::IODebugContext*)+0x130",
              "rocksdb::DBImpl::CreateAndNewDirectory(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*)+0x171",
              "rocksdb::Directories::SetDirectories(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > const&)+0x5d",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0xea",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::FileSystem::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, std::shared_ptr<rocksdb::Logger>*, rocksdb::IODebugContext*)+0x126",
              "rocksdb::CompositeEnv::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<rocksdb::Logger>*)+0x15b",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x718",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "rename": [
          {
            "stack_trace": [
              "rename+0xb",
              "rocksdb::CompositeEnv::RenameFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x173",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x6b3",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "rename+0xb",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x3d0",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "rename+0xb",
              "rocksdb::CompositeEnv::RenameFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x5b7",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "brk": [
          {
            "stack_trace": [
              "brk+0xb"
            ],
            "count": 4
          }
        ],
        "sync_file_range": [
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&, rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0x300",
              "rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileSystem*)+0xa9",
              "rocksdb::DBImpl::WriteOptionsFile(bool, bool)+0x36c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x1c32",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x136",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1e6b",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::DBImpl::CreateWAL(unsigned long, unsigned long, unsigned long, rocksdb::log::Writer**)+0x17f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x12a4",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::ReopenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30",
              "rocksdb::DBImpl::GetLogSizeAndMaybeTruncate(unsigned long, bool, rocksdb::DBImpl::LogFileNumberSize*)+0x2eb",
              "rocksdb::DBImpl::RecoverLogFiles(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long*, bool, bool*, rocksdb::DBImpl::RecoveryContext*)+0x22f8",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x1b1c",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::FileSystem::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::IOOptions const&, std::shared_ptr<rocksdb::Logger>*, rocksdb::IODebugContext*)+0x126",
              "rocksdb::CompositeEnv::NewLogger(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<rocksdb::Logger>*)+0x15b",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x718",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "fdatasync": [
          {
            "stack_trace": [
              "__GI_fdatasync+0x3b",
              "rocksdb::WriteStringToFile(rocksdb::FileSystem*, rocksdb::Slice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)+0x472",
              "rocksdb::SetCurrentFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, rocksdb::FSDirectory*)+0x14f",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x1bcb",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_fdatasync+0x3b",
              "rocksdb::WritableFileWriter::SyncInternal(bool)+0x752",
              "rocksdb::WritableFileWriter::Sync(bool)+0x170",
              "rocksdb::SyncManifest(rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)+0x133",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x21ca",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "fallocate": [
          {
            "stack_trace": [
              "fallocate64+0x5f",
              "rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&, rocksdb::IODebugContext*)+0x8a",
              "rocksdb::WritableFileWriter::Append(rocksdb::Slice const&, unsigned int, rocksdb::Env::IOPriority)+0x2b0",
              "rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long, rocksdb::Env::IOPriority)+0xb5",
              "rocksdb::log::Writer::AddRecord(rocksdb::Slice const&, rocksdb::Env::IOPriority)+0x191",
              "rocksdb::VersionSet::WriteCurrentStateToManifest(std::unordered_map<unsigned int, rocksdb::VersionSet::MutableCFState, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, rocksdb::VersionSet::MutableCFState> > > const&, rocksdb::VersionEdit const&, rocksdb::log::Writer*, rocksdb::IOStatus&)+0x547",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x22e9",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::DBImpl::LogAndApplyForRecovery(rocksdb::DBImpl::RecoveryContext const&)+0x91",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x14f9",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "mkdir": [
          {
            "stack_trace": [
              "__GI_mkdir+0xb",
              "rocksdb::DBImpl::CreateAndNewDirectory(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*)+0xbb",
              "rocksdb::ColumnFamilyData::AddDirectories(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<rocksdb::FSDirectory>, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<rocksdb::FSDirectory> > > >*)+0x160",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x3ab",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_mkdir+0xb",
              "rocksdb::DBImpl::CreateAndNewDirectory(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSDirectory, std::default_delete<rocksdb::FSDirectory> >*)+0xbb",
              "rocksdb::Directories::SetDirectories(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::DbPath, std::allocator<rocksdb::DbPath> > const&)+0x5d",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0xea",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_mkdir+0xb",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x5f6",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_mkdir+0xb",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x486",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_mkdir+0xb",
              "rocksdb::CompositeEnv::CreateDirIfMissing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x1b0",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "access": [
          {
            "stack_trace": [
              "__GI___access+0xb",
              "rocksdb::DBImpl::SetupDBId(bool, rocksdb::DBImpl::RecoveryContext*)+0x3d9",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x298",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___access+0xb",
              "rocksdb::CompositeEnv::FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::DBImpl::Recover(std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, bool, bool, bool, unsigned long*, rocksdb::DBImpl::RecoveryContext*)+0x75b",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x843",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___access+0xb",
              "rocksdb::CompositeEnv::FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x158",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x3f1",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 36
          }
        ],
        "readlink": [
          {
            "stack_trace": [
              "__GI_readlink+0xb",
              "[unknown]"
            ],
            "count": 12
          }
        ],
        "getpid": [
          {
            "stack_trace": [
              "__getpid+0xb",
              "rocksdb::SemiStructuredUniqueIdGen::GenerateNext(unsigned long*, unsigned long*)+0x1f",
              "rocksdb::DBImpl::GenerateDbSessionId[abi:cxx11](rocksdb::Env*)+0x44",
              "rocksdb::DBImpl::SetDbSessionId()+0x35",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1a9f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__getpid+0xb",
              "rocksdb::GenerateRawUniqueId(unsigned long*, unsigned long*, bool)+0xe6",
              "rocksdb::SemiStructuredUniqueIdGen::Reset()+0x27",
              "rocksdb::(anonymous namespace)::DbSessionIdGen()+0x57",
              "rocksdb::DBImpl::GenerateDbSessionId[abi:cxx11](rocksdb::Env*)+0x33",
              "rocksdb::DBImpl::SetDbSessionId()+0x35",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1a9f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__getpid+0xb",
              "rocksdb::SemiStructuredUniqueIdGen::Reset()+0x15",
              "rocksdb::(anonymous namespace)::DbSessionIdGen()+0x57",
              "rocksdb::DBImpl::GenerateDbSessionId[abi:cxx11](rocksdb::Env*)+0x33",
              "rocksdb::DBImpl::SetDbSessionId()+0x35",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0x1a9f",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "uname": [
          {
            "stack_trace": [
              "__GI___uname+0xb"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___uname+0xb",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "getcwd": [
          {
            "stack_trace": [
              "getcwd+0x95",
              "rocksdb::CompositeEnv::GetAbsolutePath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)+0x15b",
              "rocksdb::CreateLoggerFromOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, std::shared_ptr<rocksdb::Logger>*)+0x102",
              "rocksdb::SanitizeOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::DBOptions const&, bool, rocksdb::Status*)+0x9f2",
              "rocksdb::DBImpl::DBImpl(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool, bool)+0xff",
              "rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool)+0x437",
              "rocksdb::DB::Open(rocksdb::DBOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**)+0x29",
              "ucsb::facebook::rocksdb_t::open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)+0x13a4",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0xb1"
            ],
            "count": 1
          }
        ],
        "rt_sigaction": [
          {
            "stack_trace": [
              "__libc_sigaction+0xc3"
            ],
            "count": 1
          }
        ],
        "lseek": [
          {
            "stack_trace": [
              "lseek64+0xb",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "sysinfo": [
          {
            "stack_trace": [
              "__GI___sysinfo+0xb"
            ],
            "count": 1
          }
        ]
      },
      "198026": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "rocksdb::Timer::Run()+0x362",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "gettid": [
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::DumpStats()+0x3b8",
              "rocksdb::Timer::Run()+0x147",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::DumpStats()+0x397",
              "rocksdb::Timer::Run()+0x147",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "getpid": [
          {
            "stack_trace": [
              "__getpid+0xb",
              "rocksdb::InternalStats::CacheEntryRoleStats::BeginCollection(rocksdb::Cache*, rocksdb::SystemClock*, unsigned long)+0x4d0",
              "rocksdb::CacheEntryStatsCollector<rocksdb::InternalStats::CacheEntryRoleStats>::CollectStats(int, int)+0x11e",
              "rocksdb::DBImpl::DumpStats()+0x139",
              "rocksdb::Timer::Run()+0x147",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "197992": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__lll_lock_wake_private+0x18"
            ],
            "count": 51
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b",
              "[unknown]",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait+0x30",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "___pthread_cond_broadcast+0x130"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "rocksdb::DBImpl::WaitForFlushMemTables(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<unsigned long const*, 8ul> const&, bool)+0x336",
              "rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)+0x1141",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x23d",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__GI___pthread_cond_signal+0xa5"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b"
            ],
            "count": 32
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 8
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17"
            ],
            "count": 1
          }
        ],
        "clock_gettime": [
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0x1f1",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "gettid": [
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x1c8",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x65",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "close": [
          {
            "stack_trace": [
              "__close_nocancel+0xb"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__close_nocancel+0xb",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "read": [
          {
            "stack_trace": [
              "__read_nocancel+0x8",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0x5b9",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::DBImpl::SwitchMemtable(rocksdb::ColumnFamilyData*, rocksdb::DBImpl::WriteContext*)+0x877",
              "rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)+0x78f",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x23d",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__read_nocancel+0x8",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0xe1",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::DBImpl::SwitchMemtable(rocksdb::ColumnFamilyData*, rocksdb::DBImpl::WriteContext*)+0x877",
              "rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)+0x78f",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x23d",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open_nocancel+0x4c",
              "rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long, unsigned int)+0x5b9",
              "rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long)+0x4c",
              "rocksdb::DBImpl::SwitchMemtable(rocksdb::ColumnFamilyData*, rocksdb::DBImpl::WriteContext*)+0x877",
              "rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)+0x78f",
              "rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)+0x23d",
              "ucsb::facebook::rocksdb_t::flush()+0x29c",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          }
        ],
        "write": [
          {
            "stack_trace": [
              "write+0x4f",
              "[unknown]"
            ],
            "count": 14
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              ""
            ],
            "count": 18
          }
        ],
        "sched_yield": [
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x1707",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 28
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x9a6",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 179
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0xbd0",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 44
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)+0x49",
              "rocksdb::(anonymous namespace)::SkipListRep::Allocate(unsigned long, char**)+0x9e",
              "rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::ProtectionInfoKVOS<unsigned long> const*, bool, rocksdb::MemTablePostProcessInfo*, void**)+0x858",
              "rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS<unsigned long> const*)+0x22d",
              "rocksdb::(anonymous namespace)::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)+0x1b7",
              "rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long)+0x540",
              "rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const+0x8a",
              "rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool)+0x15b",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0xb55",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "197991": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait+0x30",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "[unknown]",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__lll_lock_wake_private+0x18"
            ],
            "count": 38
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 12
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b"
            ],
            "count": 20
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17"
            ],
            "count": 1
          }
        ],
        "clock_gettime": [
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0x1f1",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "sched_yield": [
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x1707",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 56
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x9a6",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 224
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0xbd0",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 42
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)+0x49",
              "rocksdb::(anonymous namespace)::SkipListRep::Allocate(unsigned long, char**)+0x9e",
              "rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::ProtectionInfoKVOS<unsigned long> const*, bool, rocksdb::MemTablePostProcessInfo*, void**)+0x858",
              "rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS<unsigned long> const*)+0x22d",
              "rocksdb::(anonymous namespace)::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)+0x1b7",
              "rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long)+0x540",
              "rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const+0x8a",
              "rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool)+0x15b",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0xb55",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              ""
            ],
            "count": 20
          }
        ],
        "write": [
          {
            "stack_trace": [
              "write+0x4f",
              "[unknown]"
            ],
            "count": 10
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "197990": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "[unknown]",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__lll_lock_wake_private+0x18"
            ],
            "count": 40
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b"
            ],
            "count": 23
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wait_private+0x2b",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]",
              "[unknown]"
            ],
            "count": 10
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17"
            ],
            "count": 1
          }
        ],
        "clock_gettime": [
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "bench(benchmark::State&, ucsb::workload_t const&, ucsb::db_t&, bool, ucsb::threads_fence_t&)+0x1f1",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              ""
            ],
            "count": 16
          }
        ],
        "sched_yield": [
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x1707",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 38
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x9a6",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 209
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*)+0x1b7",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0xbd0",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 37
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)+0x49",
              "rocksdb::(anonymous namespace)::SkipListRep::Allocate(unsigned long, char**)+0x9e",
              "rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::ProtectionInfoKVOS<unsigned long> const*, bool, rocksdb::MemTablePostProcessInfo*, void**)+0x858",
              "rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS<unsigned long> const*)+0x22d",
              "rocksdb::(anonymous namespace)::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)+0x1b7",
              "rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long)+0x540",
              "rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const+0x8a",
              "rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool)+0x15b",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0x1c3e",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 4
          },
          {
            "stack_trace": [
              "sched_yield+0xb",
              "rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)+0x49",
              "rocksdb::(anonymous namespace)::SkipListRep::Allocate(unsigned long, char**)+0x9e",
              "rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::ProtectionInfoKVOS<unsigned long> const*, bool, rocksdb::MemTablePostProcessInfo*, void**)+0x858",
              "rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS<unsigned long> const*)+0x22d",
              "rocksdb::(anonymous namespace)::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&, rocksdb::Slice const&)+0x1b7",
              "rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long)+0x540",
              "rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const+0x8a",
              "rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool)+0x15b",
              "rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*)+0xb55",
              "rocksdb::DBImpl::Write(rocksdb::WriteOptions const&, rocksdb::WriteBatch*)+0x74",
              "rocksdb::DB::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xaa",
              "rocksdb::DBImpl::Put(rocksdb::WriteOptions const&, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&, rocksdb::Slice const&)+0xf4",
              "ucsb::facebook::rocksdb_t::upsert(unsigned long, std::span<std::byte const, 18446744073709551615ul>)+0x1af",
              "[unknown]",
              "rocksdb::DBImpl::Close()+0x0",
              "[unknown]"
            ],
            "count": 3
          }
        ],
        "write": [
          {
            "stack_trace": [
              "write+0x4f",
              "[unknown]"
            ],
            "count": 13
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198028": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "clock_nanosleep": [
          {
            "stack_trace": [
              "__clock_nanosleep+0xc8",
              "[unknown]"
            ],
            "count": 6
          }
        ],
        "close": [
          {
            "stack_trace": [
              "__close_nocancel+0xb"
            ],
            "count": 6
          }
        ],
        "read": [
          {
            "stack_trace": [
              "__GI_read+0x4c"
            ],
            "count": 6
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open+0xd4",
              "[unknown]"
            ],
            "count": 6
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 2
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198027": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          }
        ],
        "clock_nanosleep": [
          {
            "stack_trace": [
              "__clock_nanosleep+0xc8"
            ],
            "count": 6
          }
        ],
        "times": [
          {
            "stack_trace": [
              "times+0xb"
            ],
            "count": 6
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "197994": {
        "futex": [
          {
            "stack_trace": [
              "___pthread_cond_broadcast+0x130"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___lll_lock_wake+0x17",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI___futex_abstimed_wait_cancelable64+0xe7",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 111
          }
        ],
        "gettid": [
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::LogBuffer::FlushBufferToLog()+0xcd",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0x175",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 5
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::FlushJob::WriteLevel0Table()+0x160c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::FlushJob::GetFlushJobInfo() const+0x238",
              "rocksdb::FlushJob::WriteLevel0Table()+0x12a9",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::Logger*, char const*, ...)+0x9a",
              "rocksdb::EventLogger::Log(rocksdb::Logger*, rocksdb::JSONWriter const&)+0x80",
              "rocksdb::EventHelpers::LogAndNotifyTableFileCreationFinished(rocksdb::EventLogger*, std::vector<std::shared_ptr<rocksdb::EventListener>, std::allocator<std::shared_ptr<rocksdb::EventListener> > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, rocksdb::FileDescriptor const&, unsigned long, rocksdb::TableProperties const&, rocksdb::TableFileCreationReason, rocksdb::Status const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x1966",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x1f98",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::Logger*, char const*, ...)+0x9a",
              "rocksdb::EventLogger::Log(rocksdb::Logger*, rocksdb::JSONWriter const&)+0x80",
              "rocksdb::EventLoggerStream::~EventLoggerStream()+0x4c",
              "rocksdb::FlushJob::WriteLevel0Table()+0x957",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, std::shared_ptr<rocksdb::Logger> const&, char const*, ...)+0xd6",
              "rocksdb::FlushJob::WriteLevel0Table()+0x4dc",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::EnvLogger::Logv(char const*, __va_list_tag*)+0xa3",
              "rocksdb::Log(rocksdb::InfoLogLevel, rocksdb::Logger*, char const*, ...)+0xc9",
              "rocksdb::LogBuffer::FlushBufferToLog()+0xcd",
              "rocksdb::FlushJob::WriteLevel0Table()+0x390",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::ThreadStatusUtil::RegisterThread(rocksdb::Env const*, rocksdb::ThreadStatus::ThreadType)+0x41",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x4b",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "newfstatat": [
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          }
        ],
        "write": [
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0xfdd",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::VersionSet::LogAndApply(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::VersionEdit*, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::function<void (rocksdb::Status const&)> const&)+0x2b9",
              "rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::FSDirectory*, rocksdb::LogBuffer*, std::__cxx11::list<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> >, std::allocator<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> > > >*, bool)+0x756",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0x1236",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::log::Writer::AddRecord(rocksdb::Slice const&, rocksdb::Env::IOPriority)+0x3d7",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0xe04",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::VersionSet::LogAndApply(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::VersionEdit*, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::function<void (rocksdb::Status const&)> const&)+0x2b9",
              "rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::FSDirectory*, rocksdb::LogBuffer*, std::__cxx11::list<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> >, std::allocator<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> > > >*, bool)+0x756",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0x1236",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::EnvLogger::Flush()+0x10e",
              "rocksdb::FlushJob::WriteLevel0Table()+0x105c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "write+0x4f",
              "rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long, rocksdb::Env::IOPriority)+0x404",
              "rocksdb::WritableFileWriter::Flush(rocksdb::Env::IOPriority)+0x756",
              "rocksdb::WritableFileWriter::Sync(bool)+0xc4",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x251b",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fdatasync": [
          {
            "stack_trace": [
              "__GI_fdatasync+0x3b",
              "rocksdb::WritableFileWriter::SyncInternal(bool)+0x752",
              "rocksdb::WritableFileWriter::Sync(bool)+0x170",
              "rocksdb::SyncManifest(rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)+0x133",
              "rocksdb::VersionSet::ProcessManifestWrites(std::deque<rocksdb::VersionSet::ManifestWriter, std::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*)+0x21ca",
              "rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::vector<std::function<void (rocksdb::Status const&)>, std::allocator<std::function<void (rocksdb::Status const&)> > > const&)+0x901",
              "rocksdb::VersionSet::LogAndApply(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::VersionEdit*, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::FSDirectory*, bool, rocksdb::ColumnFamilyOptions const*, std::function<void (rocksdb::Status const&)> const&)+0x2b9",
              "rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::FSDirectory*, rocksdb::LogBuffer*, std::__cxx11::list<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> >, std::allocator<std::unique_ptr<rocksdb::FlushJobInfo, std::default_delete<rocksdb::FlushJobInfo> > > >*, bool)+0x756",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0x1236",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__GI_fdatasync+0x3b",
              "rocksdb::WritableFileWriter::SyncInternal(bool)+0x752",
              "rocksdb::WritableFileWriter::Sync(bool)+0x170",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x251b",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "clock_gettime": [
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "rocksdb::FlushJob::WriteLevel0Table()+0x15c4",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "[unknown]",
              "clock_gettime+0x1d",
              "rocksdb::FlushJob::WriteLevel0Table()+0x169",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fsync": [
          {
            "stack_trace": [
              "fsync+0x3b",
              "rocksdb::FlushJob::WriteLevel0Table()+0x256a",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "pread64": [
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock<rocksdb::Block>(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::UncompressionDict const&, rocksdb::CachableEntry<rocksdb::Block>*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const+0x19a",
              "rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry<rocksdb::Block>*)+0xda",
              "rocksdb::BinarySearchIndexReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x15d",
              "rocksdb::BlockBasedTable::CreateIndexReader(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x27f",
              "rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, rocksdb::BlockBasedTable*, bool, rocksdb::BlockBasedTableOptions const&, int, unsigned long, unsigned long, rocksdb::BlockCacheLookupContext*)+0x592",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xe33",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::ReadTablePropertiesHelper(rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ImmutableOptions const&, std::unique_ptr<rocksdb::TableProperties, std::default_delete<rocksdb::TableProperties> >*, rocksdb::MemoryAllocator*)+0x42d",
              "rocksdb::BlockBasedTable::ReadPropertiesBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, unsigned long)+0x652",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xb48",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::ReadFooterFromFile(rocksdb::IOOptions const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, unsigned long, rocksdb::Footer*, unsigned long)+0x897",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x4e2",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "readahead": [
          {
            "stack_trace": [
              "readahead+0xb",
              "rocksdb::BlockBasedTable::PrefetchTail(rocksdb::ReadOptions const&, rocksdb::RandomAccessFileReader*, unsigned long, bool, rocksdb::TailPrefetchStats*, bool, bool, std::unique_ptr<rocksdb::FilePrefetchBuffer, std::default_delete<rocksdb::FilePrefetchBuffer> >*)+0x430",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x1f9",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fadvise64": [
          {
            "stack_trace": [
              "posix_fadvise+0xe",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fcntl": [
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0x303",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, std::shared_ptr<rocksdb::SliceTransform const> const&, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool, rocksdb::TruncatedRangeDelIterator**)+0x471",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x29e2",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 2
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x95e",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x899",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open+0xd4",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "close": [
          {
            "stack_trace": [
              "close+0x3b",
              "rocksdb::WritableFileWriter::Close()+0x497",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x25c0",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 8
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              ""
            ],
            "count": 9
          }
        ],
        "uname": [
          {
            "stack_trace": [
              "__GI___uname+0xb"
            ],
            "count": 1
          }
        ],
        "sync_file_range": [
          {
            "stack_trace": [
              "sync_file_range+0x60",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x899",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fstatfs": [
          {
            "stack_trace": [
              "fstatfs+0xb",
              "rocksdb::(anonymous namespace)::PosixFileSystem::OpenWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, bool, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x30f",
              "rocksdb::(anonymous namespace)::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::FileOptions const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::IODebugContext*)+0x2d",
              "rocksdb::NewWritableFile(rocksdb::FileSystem*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<rocksdb::FSWritableFile, std::default_delete<rocksdb::FSWritableFile> >*, rocksdb::FileOptions const&)+0xd6",
              "rocksdb::BuildTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&, rocksdb::TableBuilderOptions const&, rocksdb::FileOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::vector<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::allocator<std::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, std::vector<rocksdb::BlobFileAddition, std::allocator<rocksdb::BlobFileAddition> >*, std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr<rocksdb::IOTracer> const&, rocksdb::BlobFileCreationReason, rocksdb::SeqnoToTimeMapping const&, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*)+0x899",
              "rocksdb::FlushJob::WriteLevel0Table()+0xf0c",
              "rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*)+0xb5f",
              "rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector<unsigned long, std::allocator<unsigned long> >&, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0xb58",
              "rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority)+0x14e",
              "rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority)+0xef5",
              "rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority)+0xe2",
              "rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)+0x252",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x63",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "197995": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "pread64": [
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock<rocksdb::Block>(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::UncompressionDict const&, rocksdb::CachableEntry<rocksdb::Block>*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const+0x19a",
              "rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry<rocksdb::Block>*)+0xda",
              "rocksdb::BinarySearchIndexReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x15d",
              "rocksdb::BlockBasedTable::CreateIndexReader(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr<rocksdb::BlockBasedTable::IndexReader, std::default_delete<rocksdb::BlockBasedTable::IndexReader> >*)+0x27f",
              "rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, rocksdb::BlockBasedTable*, bool, rocksdb::BlockBasedTableOptions const&, int, unsigned long, unsigned long, rocksdb::BlockCacheLookupContext*)+0x592",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xe33",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::ReadTablePropertiesHelper(rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ImmutableOptions const&, std::unique_ptr<rocksdb::TableProperties, std::default_delete<rocksdb::TableProperties> >*, rocksdb::MemoryAllocator*)+0x42d",
              "rocksdb::BlockBasedTable::ReadPropertiesBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, unsigned long)+0x652",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xb48",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::BlockFetcher::ReadBlockContents()+0x12ce",
              "rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile<rocksdb::Block>(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, rocksdb::ImmutableOptions const&, bool, bool, rocksdb::BlockType, rocksdb::UncompressionDict const&, rocksdb::PersistentCacheOptions const&, unsigned long, rocksdb::MemoryAllocator*, bool, bool, rocksdb::FilterPolicy const*, bool) [clone .isra.0]+0x3c6",
              "rocksdb::BlockBasedTable::ReadMetaIndexBlock(rocksdb::ReadOptions const&, rocksdb::FilePrefetchBuffer*, std::unique_ptr<rocksdb::Block, std::default_delete<rocksdb::Block> >*, std::unique_ptr<rocksdb::InternalIteratorBase<rocksdb::Slice>, std::default_delete<rocksdb::InternalIteratorBase<rocksdb::Slice> > >*)+0xbf",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0xaed",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "pread+0x5f",
              "rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr<char [], std::default_delete<char []> >*, rocksdb::Env::IOPriority) const+0xafa",
              "rocksdb::ReadFooterFromFile(rocksdb::IOOptions const&, rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, unsigned long, rocksdb::Footer*, unsigned long)+0x897",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x4e2",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              ""
            ],
            "count": 2
          }
        ],
        "futex": [
          {
            "stack_trace": [
              "__pthread_once_slow+0x110"
            ],
            "count": 1
          }
        ],
        "readahead": [
          {
            "stack_trace": [
              "readahead+0xb",
              "rocksdb::BlockBasedTable::PrefetchTail(rocksdb::ReadOptions const&, rocksdb::RandomAccessFileReader*, unsigned long, bool, rocksdb::TailPrefetchStats*, bool, bool, std::unique_ptr<rocksdb::FilePrefetchBuffer, std::default_delete<rocksdb::FilePrefetchBuffer> >*)+0x430",
              "rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&, rocksdb::ImmutableOptions const&, rocksdb::EnvOptions const&, rocksdb::BlockBasedTableOptions const&, rocksdb::InternalKeyComparator const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::CacheReservationManager>, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::array<unsigned long, 2ul>)+0x1f9",
              "rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&, rocksdb::TableReaderOptions const&, std::unique_ptr<rocksdb::RandomAccessFileReader, std::default_delete<rocksdb::RandomAccessFileReader> >&&, unsigned long, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, bool) const+0xe1",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0xc76",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fadvise64": [
          {
            "stack_trace": [
              "posix_fadvise+0xe",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "fcntl": [
          {
            "stack_trace": [
              "__fcntl64_nocancel_adjusted+0x24",
              "rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr<rocksdb::TableReader, std::default_delete<rocksdb::TableReader> >*, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, int, bool, unsigned long, rocksdb::Temperature)+0x303",
              "rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&, rocksdb::FileOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::Cache::Handle**, std::shared_ptr<rocksdb::SliceTransform const> const&, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature)+0x3ec",
              "rocksdb::VersionBuilder::Rep::LoadTableHandlers(rocksdb::InternalStats*, int, bool, bool, std::shared_ptr<rocksdb::SliceTransform const> const&, unsigned long)::{lambda()#1}::operator()() const+0x143",
              "[unknown]"
            ],
            "count": 2
          }
        ],
        "openat": [
          {
            "stack_trace": [
              "__open+0xd4",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198025": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198024": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198023": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198022": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198021": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198020": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198019": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198018": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198017": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198016": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198015": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198014": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198013": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198012": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198011": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198010": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198009": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198008": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198007": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198006": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198005": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198004": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198003": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198002": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198001": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "198000": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "197999": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "197998": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "197997": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "197996": {
        "madvise": [
          {
            "stack_trace": [
              "__madvise+0xb"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x1de"
            ],
            "count": 1
          },
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 1
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      },
      "197993": {
        "mprotect": [
          {
            "stack_trace": [
              "__GI_mprotect+0xb"
            ],
            "count": 1
          }
        ],
        "munmap": [
          {
            "stack_trace": [
              "__GI___munmap+0xb"
            ],
            "count": 2
          }
        ],
        "mmap": [
          {
            "stack_trace": [
              ""
            ],
            "count": 1
          }
        ],
        "gettid": [
          {
            "stack_trace": [
              "gettid+0xb",
              "rocksdb::ThreadStatusUtil::RegisterThread(rocksdb::Env const*, rocksdb::ThreadStatus::ThreadType)+0x41",
              "rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)+0x4b",
              "[unknown]"
            ],
            "count": 1
          }
        ],
        "rt_sigprocmask": [
          {
            "stack_trace": [
              "start_thread+0x14a"
            ],
            "count": 1
          }
        ],
        "set_robust_list": [
          {
            "stack_trace": [
              "start_thread+0xe7"
            ],
            "count": 1
          }
        ],
        "rseq": [
          {
            "stack_trace": [
              "start_thread+0x2b8"
            ],
            "count": 1
          }
        ]
      }
    },
    "all": [
      {
        "id": "rt_sigprocmask",
        "stack_id": 9223,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152988106951,
        "end_timestamp_ns": 23152988107951
      },
      {
        "id": "kill",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152988102120,
        "end_timestamp_ns": 23152988106190
      },
      {
        "id": "getppid",
        "stack_id": 7081,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152988100123,
        "end_timestamp_ns": 23152988101264
      },
      {
        "id": "unlink",
        "stack_id": 4195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152988082988,
        "end_timestamp_ns": 23152988098896
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152988078854,
        "end_timestamp_ns": 23152988079713
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152988067872,
        "end_timestamp_ns": 23152988068941
      },
      {
        "id": "write",
        "stack_id": 12411,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152988052995,
        "end_timestamp_ns": 23152988066387
      },
      {
        "id": "openat",
        "stack_id": 2444,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987981703,
        "end_timestamp_ns": 23152987999121
      },
      {
        "id": "newfstatat",
        "stack_id": 5275,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987970005,
        "end_timestamp_ns": 23152987975188
      },
      {
        "id": "read",
        "stack_id": 1095,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987907629,
        "end_timestamp_ns": 23152987911056
      },
      {
        "id": "openat",
        "stack_id": 2444,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987899130,
        "end_timestamp_ns": 23152987903231
      },
      {
        "id": "newfstatat",
        "stack_id": 5275,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987891337,
        "end_timestamp_ns": 23152987895722
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987886204,
        "end_timestamp_ns": 23152987887392
      },
      {
        "id": "write",
        "stack_id": 9284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987859097,
        "end_timestamp_ns": 23152987882930
      },
      {
        "id": "write",
        "stack_id": 358,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987853265,
        "end_timestamp_ns": 23152987856860
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987850775,
        "end_timestamp_ns": 23152987851552
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987849084,
        "end_timestamp_ns": 23152987849863
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987847451,
        "end_timestamp_ns": 23152987848227
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987845811,
        "end_timestamp_ns": 23152987846587
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987844178,
        "end_timestamp_ns": 23152987844956
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987842526,
        "end_timestamp_ns": 23152987843313
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987840893,
        "end_timestamp_ns": 23152987841671
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987839254,
        "end_timestamp_ns": 23152987840032
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987837612,
        "end_timestamp_ns": 23152987838388
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987835962,
        "end_timestamp_ns": 23152987836746
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987834318,
        "end_timestamp_ns": 23152987835096
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987832672,
        "end_timestamp_ns": 23152987833451
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987831036,
        "end_timestamp_ns": 23152987831814
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987829392,
        "end_timestamp_ns": 23152987830169
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987827746,
        "end_timestamp_ns": 23152987828527
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987826108,
        "end_timestamp_ns": 23152987826888
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987824475,
        "end_timestamp_ns": 23152987825252
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987822835,
        "end_timestamp_ns": 23152987823612
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987821202,
        "end_timestamp_ns": 23152987821981
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987819571,
        "end_timestamp_ns": 23152987820348
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987817935,
        "end_timestamp_ns": 23152987818710
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987816297,
        "end_timestamp_ns": 23152987817072
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987814665,
        "end_timestamp_ns": 23152987815440
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987813017,
        "end_timestamp_ns": 23152987813799
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987811381,
        "end_timestamp_ns": 23152987812158
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987809746,
        "end_timestamp_ns": 23152987810525
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987808104,
        "end_timestamp_ns": 23152987808883
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987806463,
        "end_timestamp_ns": 23152987807243
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987804811,
        "end_timestamp_ns": 23152987805596
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987803163,
        "end_timestamp_ns": 23152987803943
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987801527,
        "end_timestamp_ns": 23152987802306
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987799891,
        "end_timestamp_ns": 23152987800669
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987798253,
        "end_timestamp_ns": 23152987799032
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987796618,
        "end_timestamp_ns": 23152987797395
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987794973,
        "end_timestamp_ns": 23152987795752
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987793336,
        "end_timestamp_ns": 23152987794116
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987791690,
        "end_timestamp_ns": 23152987792471
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987790051,
        "end_timestamp_ns": 23152987790826
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987788421,
        "end_timestamp_ns": 23152987789197
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987786788,
        "end_timestamp_ns": 23152987787565
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987785155,
        "end_timestamp_ns": 23152987785933
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987783523,
        "end_timestamp_ns": 23152987784300
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987781887,
        "end_timestamp_ns": 23152987782668
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987780254,
        "end_timestamp_ns": 23152987781031
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987778613,
        "end_timestamp_ns": 23152987779393
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987776971,
        "end_timestamp_ns": 23152987777750
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987775338,
        "end_timestamp_ns": 23152987776117
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987773700,
        "end_timestamp_ns": 23152987774478
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987772059,
        "end_timestamp_ns": 23152987772839
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987770419,
        "end_timestamp_ns": 23152987771197
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987768770,
        "end_timestamp_ns": 23152987769551
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987767133,
        "end_timestamp_ns": 23152987767909
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987765490,
        "end_timestamp_ns": 23152987766268
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987763847,
        "end_timestamp_ns": 23152987764625
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987762207,
        "end_timestamp_ns": 23152987762985
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987760568,
        "end_timestamp_ns": 23152987761345
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987758936,
        "end_timestamp_ns": 23152987759711
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987757296,
        "end_timestamp_ns": 23152987758071
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987755656,
        "end_timestamp_ns": 23152987756433
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987754016,
        "end_timestamp_ns": 23152987754793
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987752376,
        "end_timestamp_ns": 23152987753153
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987750736,
        "end_timestamp_ns": 23152987751512
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987749099,
        "end_timestamp_ns": 23152987749878
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987747464,
        "end_timestamp_ns": 23152987748241
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987745823,
        "end_timestamp_ns": 23152987746599
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987744180,
        "end_timestamp_ns": 23152987744957
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987742543,
        "end_timestamp_ns": 23152987743321
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987740900,
        "end_timestamp_ns": 23152987741677
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987739258,
        "end_timestamp_ns": 23152987740037
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987737619,
        "end_timestamp_ns": 23152987738397
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987735971,
        "end_timestamp_ns": 23152987736754
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987734330,
        "end_timestamp_ns": 23152987735108
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987732686,
        "end_timestamp_ns": 23152987733464
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987731046,
        "end_timestamp_ns": 23152987731824
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987729413,
        "end_timestamp_ns": 23152987730189
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987727781,
        "end_timestamp_ns": 23152987728557
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987726146,
        "end_timestamp_ns": 23152987726923
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987724515,
        "end_timestamp_ns": 23152987725289
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987722879,
        "end_timestamp_ns": 23152987723656
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987721248,
        "end_timestamp_ns": 23152987722021
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987719609,
        "end_timestamp_ns": 23152987720388
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987717975,
        "end_timestamp_ns": 23152987718752
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987716333,
        "end_timestamp_ns": 23152987717113
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987714690,
        "end_timestamp_ns": 23152987715466
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987713049,
        "end_timestamp_ns": 23152987713826
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987711402,
        "end_timestamp_ns": 23152987712184
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987709693,
        "end_timestamp_ns": 23152987710474
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987708055,
        "end_timestamp_ns": 23152987708835
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987706417,
        "end_timestamp_ns": 23152987707197
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987704781,
        "end_timestamp_ns": 23152987705559
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987703138,
        "end_timestamp_ns": 23152987703915
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987701496,
        "end_timestamp_ns": 23152987702274
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987699857,
        "end_timestamp_ns": 23152987700635
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987698228,
        "end_timestamp_ns": 23152987699004
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987696593,
        "end_timestamp_ns": 23152987697368
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987694954,
        "end_timestamp_ns": 23152987695736
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987693316,
        "end_timestamp_ns": 23152987694092
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987691678,
        "end_timestamp_ns": 23152987692454
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987690044,
        "end_timestamp_ns": 23152987690821
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987688414,
        "end_timestamp_ns": 23152987689188
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987686785,
        "end_timestamp_ns": 23152987687559
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987685149,
        "end_timestamp_ns": 23152987685927
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987683504,
        "end_timestamp_ns": 23152987684283
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987681860,
        "end_timestamp_ns": 23152987682639
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987680219,
        "end_timestamp_ns": 23152987680999
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987678582,
        "end_timestamp_ns": 23152987679363
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987676941,
        "end_timestamp_ns": 23152987677722
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987675298,
        "end_timestamp_ns": 23152987676078
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987673653,
        "end_timestamp_ns": 23152987674434
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987658644,
        "end_timestamp_ns": 23152987672725
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987656969,
        "end_timestamp_ns": 23152987657762
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987655296,
        "end_timestamp_ns": 23152987656090
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987653618,
        "end_timestamp_ns": 23152987654414
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987651947,
        "end_timestamp_ns": 23152987652740
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987650267,
        "end_timestamp_ns": 23152987651063
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987648597,
        "end_timestamp_ns": 23152987649390
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987646921,
        "end_timestamp_ns": 23152987647719
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987645243,
        "end_timestamp_ns": 23152987646036
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987643555,
        "end_timestamp_ns": 23152987644357
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987641874,
        "end_timestamp_ns": 23152987642668
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987640197,
        "end_timestamp_ns": 23152987640996
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987638519,
        "end_timestamp_ns": 23152987639311
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987636844,
        "end_timestamp_ns": 23152987637640
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987635168,
        "end_timestamp_ns": 23152987635959
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987633486,
        "end_timestamp_ns": 23152987634284
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987631811,
        "end_timestamp_ns": 23152987632603
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987630137,
        "end_timestamp_ns": 23152987630929
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987628459,
        "end_timestamp_ns": 23152987629249
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987626779,
        "end_timestamp_ns": 23152987627571
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987625110,
        "end_timestamp_ns": 23152987625902
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987623433,
        "end_timestamp_ns": 23152987624229
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987621754,
        "end_timestamp_ns": 23152987622547
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987620076,
        "end_timestamp_ns": 23152987620870
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987618398,
        "end_timestamp_ns": 23152987619194
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987616714,
        "end_timestamp_ns": 23152987617520
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987615043,
        "end_timestamp_ns": 23152987615837
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987613369,
        "end_timestamp_ns": 23152987614165
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987611694,
        "end_timestamp_ns": 23152987612491
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987610015,
        "end_timestamp_ns": 23152987610810
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987608330,
        "end_timestamp_ns": 23152987609126
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987606645,
        "end_timestamp_ns": 23152987607440
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987604966,
        "end_timestamp_ns": 23152987605760
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987603291,
        "end_timestamp_ns": 23152987604086
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987601621,
        "end_timestamp_ns": 23152987602416
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987599926,
        "end_timestamp_ns": 23152987600738
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987578811,
        "end_timestamp_ns": 23152987579691
      },
      {
        "id": "write",
        "stack_id": 8404,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987573110,
        "end_timestamp_ns": 23152987575729
      },
      {
        "id": "ioctl",
        "stack_id": 7866,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987571034,
        "end_timestamp_ns": 23152987572120
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987567930,
        "end_timestamp_ns": 23152987568729
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987566199,
        "end_timestamp_ns": 23152987567022
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987560062,
        "end_timestamp_ns": 23152987560882
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987558349,
        "end_timestamp_ns": 23152987559270
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987556512,
        "end_timestamp_ns": 23152987557394
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987549123,
        "end_timestamp_ns": 23152987549991
      },
      {
        "id": "ioctl",
        "stack_id": 8638,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987546867,
        "end_timestamp_ns": 23152987548311
      },
      {
        "id": "write",
        "stack_id": 9284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987493413,
        "end_timestamp_ns": 23152987502007
      },
      {
        "id": "write",
        "stack_id": 358,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987411655,
        "end_timestamp_ns": 23152987415775
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987408929,
        "end_timestamp_ns": 23152987409704
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987407262,
        "end_timestamp_ns": 23152987408042
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987405628,
        "end_timestamp_ns": 23152987406402
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987403998,
        "end_timestamp_ns": 23152987404767
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987402371,
        "end_timestamp_ns": 23152987403144
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987400732,
        "end_timestamp_ns": 23152987401511
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987399097,
        "end_timestamp_ns": 23152987399871
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987397462,
        "end_timestamp_ns": 23152987398236
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987395826,
        "end_timestamp_ns": 23152987396599
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987394189,
        "end_timestamp_ns": 23152987394972
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987392550,
        "end_timestamp_ns": 23152987393324
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987390911,
        "end_timestamp_ns": 23152987391688
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987389271,
        "end_timestamp_ns": 23152987390050
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987387628,
        "end_timestamp_ns": 23152987388404
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987385940,
        "end_timestamp_ns": 23152987386749
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987381932,
        "end_timestamp_ns": 23152987382702
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987380302,
        "end_timestamp_ns": 23152987381069
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987378676,
        "end_timestamp_ns": 23152987379447
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987377053,
        "end_timestamp_ns": 23152987377819
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987375411,
        "end_timestamp_ns": 23152987376188
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987373712,
        "end_timestamp_ns": 23152987374497
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987358678,
        "end_timestamp_ns": 23152987359473
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987357006,
        "end_timestamp_ns": 23152987357800
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987355328,
        "end_timestamp_ns": 23152987356123
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987353649,
        "end_timestamp_ns": 23152987354443
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987351979,
        "end_timestamp_ns": 23152987352774
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987350307,
        "end_timestamp_ns": 23152987351101
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987348634,
        "end_timestamp_ns": 23152987349432
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987346926,
        "end_timestamp_ns": 23152987347749
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987342828,
        "end_timestamp_ns": 23152987343619
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987341157,
        "end_timestamp_ns": 23152987341949
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987339484,
        "end_timestamp_ns": 23152987340277
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987337818,
        "end_timestamp_ns": 23152987338608
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987336140,
        "end_timestamp_ns": 23152987336937
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987334399,
        "end_timestamp_ns": 23152987335201
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987313243,
        "end_timestamp_ns": 23152987314011
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987311619,
        "end_timestamp_ns": 23152987312389
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987309991,
        "end_timestamp_ns": 23152987310767
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987308351,
        "end_timestamp_ns": 23152987309133
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987306707,
        "end_timestamp_ns": 23152987307492
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987290724,
        "end_timestamp_ns": 23152987305676
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987289050,
        "end_timestamp_ns": 23152987289847
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987287335,
        "end_timestamp_ns": 23152987288150
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987283342,
        "end_timestamp_ns": 23152987284133
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987281671,
        "end_timestamp_ns": 23152987282464
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987280004,
        "end_timestamp_ns": 23152987280796
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987278335,
        "end_timestamp_ns": 23152987279124
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987276661,
        "end_timestamp_ns": 23152987277453
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987274987,
        "end_timestamp_ns": 23152987275777
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987273318,
        "end_timestamp_ns": 23152987274111
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987271648,
        "end_timestamp_ns": 23152987272441
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987269977,
        "end_timestamp_ns": 23152987270771
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987268302,
        "end_timestamp_ns": 23152987269096
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987266612,
        "end_timestamp_ns": 23152987267419
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987264924,
        "end_timestamp_ns": 23152987265733
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987263228,
        "end_timestamp_ns": 23152987264040
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987261488,
        "end_timestamp_ns": 23152987262330
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987257502,
        "end_timestamp_ns": 23152987258290
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987255833,
        "end_timestamp_ns": 23152987256620
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987254164,
        "end_timestamp_ns": 23152987254953
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987252495,
        "end_timestamp_ns": 23152987253280
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987250826,
        "end_timestamp_ns": 23152987251613
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987249154,
        "end_timestamp_ns": 23152987249942
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987247485,
        "end_timestamp_ns": 23152987248275
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987245816,
        "end_timestamp_ns": 23152987246601
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987244157,
        "end_timestamp_ns": 23152987244941
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987242498,
        "end_timestamp_ns": 23152987243283
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987240837,
        "end_timestamp_ns": 23152987241624
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987239173,
        "end_timestamp_ns": 23152987239959
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987237498,
        "end_timestamp_ns": 23152987238288
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987235796,
        "end_timestamp_ns": 23152987236611
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987231802,
        "end_timestamp_ns": 23152987232591
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987230123,
        "end_timestamp_ns": 23152987230915
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987228458,
        "end_timestamp_ns": 23152987229248
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987226790,
        "end_timestamp_ns": 23152987227578
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987225117,
        "end_timestamp_ns": 23152987225909
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987223449,
        "end_timestamp_ns": 23152987224238
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987221774,
        "end_timestamp_ns": 23152987222564
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987220104,
        "end_timestamp_ns": 23152987220891
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987218443,
        "end_timestamp_ns": 23152987219228
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987216769,
        "end_timestamp_ns": 23152987217560
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987215098,
        "end_timestamp_ns": 23152987215885
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987213423,
        "end_timestamp_ns": 23152987214216
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987211750,
        "end_timestamp_ns": 23152987212538
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987210010,
        "end_timestamp_ns": 23152987210856
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987205913,
        "end_timestamp_ns": 23152987206778
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987204153,
        "end_timestamp_ns": 23152987205016
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987202402,
        "end_timestamp_ns": 23152987203264
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987200646,
        "end_timestamp_ns": 23152987201511
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987198885,
        "end_timestamp_ns": 23152987199747
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987197123,
        "end_timestamp_ns": 23152987197988
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987195358,
        "end_timestamp_ns": 23152987196223
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987193598,
        "end_timestamp_ns": 23152987194465
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987191840,
        "end_timestamp_ns": 23152987192709
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987190082,
        "end_timestamp_ns": 23152987190950
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987188330,
        "end_timestamp_ns": 23152987189194
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987186560,
        "end_timestamp_ns": 23152987187427
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987184790,
        "end_timestamp_ns": 23152987185663
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987182944,
        "end_timestamp_ns": 23152987183878
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987178972,
        "end_timestamp_ns": 23152987179765
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987177302,
        "end_timestamp_ns": 23152987178094
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987175625,
        "end_timestamp_ns": 23152987176418
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987173956,
        "end_timestamp_ns": 23152987174749
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987172280,
        "end_timestamp_ns": 23152987173073
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987170594,
        "end_timestamp_ns": 23152987171388
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987168923,
        "end_timestamp_ns": 23152987169715
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987167246,
        "end_timestamp_ns": 23152987168044
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987165574,
        "end_timestamp_ns": 23152987166369
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987163897,
        "end_timestamp_ns": 23152987164691
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987162222,
        "end_timestamp_ns": 23152987163018
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987160543,
        "end_timestamp_ns": 23152987161340
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987158865,
        "end_timestamp_ns": 23152987159664
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987157136,
        "end_timestamp_ns": 23152987157968
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987153133,
        "end_timestamp_ns": 23152987153928
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987151460,
        "end_timestamp_ns": 23152987152256
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987149796,
        "end_timestamp_ns": 23152987150587
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987148131,
        "end_timestamp_ns": 23152987148921
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987146459,
        "end_timestamp_ns": 23152987147253
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987144784,
        "end_timestamp_ns": 23152987145577
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987143106,
        "end_timestamp_ns": 23152987143903
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987141429,
        "end_timestamp_ns": 23152987142225
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987139755,
        "end_timestamp_ns": 23152987140550
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987138080,
        "end_timestamp_ns": 23152987138875
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987136403,
        "end_timestamp_ns": 23152987137199
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987134717,
        "end_timestamp_ns": 23152987135514
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987133043,
        "end_timestamp_ns": 23152987133840
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987131298,
        "end_timestamp_ns": 23152987132142
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987127270,
        "end_timestamp_ns": 23152987128064
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987125591,
        "end_timestamp_ns": 23152987126386
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987123915,
        "end_timestamp_ns": 23152987124711
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987122247,
        "end_timestamp_ns": 23152987123041
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987120576,
        "end_timestamp_ns": 23152987121370
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987118893,
        "end_timestamp_ns": 23152987119685
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987117205,
        "end_timestamp_ns": 23152987118001
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987115534,
        "end_timestamp_ns": 23152987116327
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987113855,
        "end_timestamp_ns": 23152987114650
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987112186,
        "end_timestamp_ns": 23152987112980
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987110507,
        "end_timestamp_ns": 23152987111300
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987108828,
        "end_timestamp_ns": 23152987109623
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987107138,
        "end_timestamp_ns": 23152987107948
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987105460,
        "end_timestamp_ns": 23152987106255
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987103775,
        "end_timestamp_ns": 23152987104573
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987102085,
        "end_timestamp_ns": 23152987102883
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987100410,
        "end_timestamp_ns": 23152987101206
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987098723,
        "end_timestamp_ns": 23152987099525
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987096905,
        "end_timestamp_ns": 23152987097797
      },
      {
        "id": "write",
        "stack_id": 12237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987070798,
        "end_timestamp_ns": 23152987074014
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987068961,
        "end_timestamp_ns": 23152987069811
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987043605,
        "end_timestamp_ns": 23152987044413
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987041877,
        "end_timestamp_ns": 23152987042687
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987040146,
        "end_timestamp_ns": 23152987040971
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987036731,
        "end_timestamp_ns": 23152987037568
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987031936,
        "end_timestamp_ns": 23152987032746
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987030197,
        "end_timestamp_ns": 23152987031022
      },
      {
        "id": "ioctl",
        "stack_id": 5685,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987026205,
        "end_timestamp_ns": 23152987027207
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987021287,
        "end_timestamp_ns": 23152987022097
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152987019565,
        "end_timestamp_ns": 23152987020387
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986996463,
        "end_timestamp_ns": 23152987016856
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986991661,
        "end_timestamp_ns": 23152986992462
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986989941,
        "end_timestamp_ns": 23152986990779
      },
      {
        "id": "ioctl",
        "stack_id": 2237,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986972032,
        "end_timestamp_ns": 23152986973015
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986967247,
        "end_timestamp_ns": 23152986968042
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986965520,
        "end_timestamp_ns": 23152986966333
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986962415,
        "end_timestamp_ns": 23152986963246
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986957638,
        "end_timestamp_ns": 23152986958427
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986955914,
        "end_timestamp_ns": 23152986956727
      },
      {
        "id": "ioctl",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986952634,
        "end_timestamp_ns": 23152986953628
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986947777,
        "end_timestamp_ns": 23152986948641
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986945942,
        "end_timestamp_ns": 23152986946841
      },
      {
        "id": "ioctl",
        "stack_id": 6412,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986942286,
        "end_timestamp_ns": 23152986943422
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986937513,
        "end_timestamp_ns": 23152986938310
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986935700,
        "end_timestamp_ns": 23152986936525
      },
      {
        "id": "ioctl",
        "stack_id": 2185,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986932302,
        "end_timestamp_ns": 23152986933312
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986927514,
        "end_timestamp_ns": 23152986928308
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986925777,
        "end_timestamp_ns": 23152986926595
      },
      {
        "id": "ioctl",
        "stack_id": 13804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986922502,
        "end_timestamp_ns": 23152986923533
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986917596,
        "end_timestamp_ns": 23152986918395
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986915096,
        "end_timestamp_ns": 23152986915927
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986913493,
        "end_timestamp_ns": 23152986914291
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986911667,
        "end_timestamp_ns": 23152986912530
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986908604,
        "end_timestamp_ns": 23152986909474
      },
      {
        "id": "ioctl",
        "stack_id": 1154,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986906020,
        "end_timestamp_ns": 23152986907678
      },
      {
        "id": "write",
        "stack_id": 358,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986713208,
        "end_timestamp_ns": 23152986718080
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986709264,
        "end_timestamp_ns": 23152986710058
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986707501,
        "end_timestamp_ns": 23152986708293
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986705826,
        "end_timestamp_ns": 23152986706617
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986704153,
        "end_timestamp_ns": 23152986704945
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986702481,
        "end_timestamp_ns": 23152986703271
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986700821,
        "end_timestamp_ns": 23152986701611
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986699159,
        "end_timestamp_ns": 23152986699947
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986697483,
        "end_timestamp_ns": 23152986698277
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986695818,
        "end_timestamp_ns": 23152986696609
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986694147,
        "end_timestamp_ns": 23152986694942
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986692472,
        "end_timestamp_ns": 23152986693264
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986690799,
        "end_timestamp_ns": 23152986691591
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986689126,
        "end_timestamp_ns": 23152986689916
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986687449,
        "end_timestamp_ns": 23152986688251
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986685733,
        "end_timestamp_ns": 23152986686561
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986681746,
        "end_timestamp_ns": 23152986682541
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986680075,
        "end_timestamp_ns": 23152986680872
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986678402,
        "end_timestamp_ns": 23152986679198
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986676725,
        "end_timestamp_ns": 23152986677517
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986675048,
        "end_timestamp_ns": 23152986675843
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986673369,
        "end_timestamp_ns": 23152986674165
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986671697,
        "end_timestamp_ns": 23152986672495
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986669782,
        "end_timestamp_ns": 23152986670577
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986668115,
        "end_timestamp_ns": 23152986668908
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986666448,
        "end_timestamp_ns": 23152986667240
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986664776,
        "end_timestamp_ns": 23152986665568
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986663098,
        "end_timestamp_ns": 23152986663892
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986661422,
        "end_timestamp_ns": 23152986662216
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986659703,
        "end_timestamp_ns": 23152986660531
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986655586,
        "end_timestamp_ns": 23152986656379
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986653891,
        "end_timestamp_ns": 23152986654685
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986652215,
        "end_timestamp_ns": 23152986653011
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986650540,
        "end_timestamp_ns": 23152986651336
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986648862,
        "end_timestamp_ns": 23152986649656
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986647185,
        "end_timestamp_ns": 23152986647978
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986645500,
        "end_timestamp_ns": 23152986646303
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986643817,
        "end_timestamp_ns": 23152986644620
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986622443,
        "end_timestamp_ns": 23152986642872
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986620805,
        "end_timestamp_ns": 23152986621582
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986619162,
        "end_timestamp_ns": 23152986619940
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986617522,
        "end_timestamp_ns": 23152986618298
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986615881,
        "end_timestamp_ns": 23152986616660
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986614180,
        "end_timestamp_ns": 23152986615014
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986610042,
        "end_timestamp_ns": 23152986610814
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986608411,
        "end_timestamp_ns": 23152986609182
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986606783,
        "end_timestamp_ns": 23152986607557
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986605155,
        "end_timestamp_ns": 23152986605927
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986603522,
        "end_timestamp_ns": 23152986604296
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986601890,
        "end_timestamp_ns": 23152986602662
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986600264,
        "end_timestamp_ns": 23152986601036
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986598636,
        "end_timestamp_ns": 23152986599410
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986597006,
        "end_timestamp_ns": 23152986597780
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986595375,
        "end_timestamp_ns": 23152986596149
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986593741,
        "end_timestamp_ns": 23152986594516
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986592106,
        "end_timestamp_ns": 23152986592883
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986590363,
        "end_timestamp_ns": 23152986591185
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986587673,
        "end_timestamp_ns": 23152986588849
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986582257,
        "end_timestamp_ns": 23152986583430
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986580221,
        "end_timestamp_ns": 23152986581205
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986578146,
        "end_timestamp_ns": 23152986579006
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986575093,
        "end_timestamp_ns": 23152986576090
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986573039,
        "end_timestamp_ns": 23152986574025
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986570993,
        "end_timestamp_ns": 23152986571995
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986569272,
        "end_timestamp_ns": 23152986570145
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986567088,
        "end_timestamp_ns": 23152986568231
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986565055,
        "end_timestamp_ns": 23152986566064
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986563012,
        "end_timestamp_ns": 23152986563996
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986560752,
        "end_timestamp_ns": 23152986561518
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986559282,
        "end_timestamp_ns": 23152986560051
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986557809,
        "end_timestamp_ns": 23152986558577
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986556316,
        "end_timestamp_ns": 23152986557122
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986553446,
        "end_timestamp_ns": 23152986554215
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986551978,
        "end_timestamp_ns": 23152986552748
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986550517,
        "end_timestamp_ns": 23152986551286
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986549042,
        "end_timestamp_ns": 23152986549809
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986547572,
        "end_timestamp_ns": 23152986548339
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986546104,
        "end_timestamp_ns": 23152986546872
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986544634,
        "end_timestamp_ns": 23152986545401
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986543166,
        "end_timestamp_ns": 23152986543933
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986541696,
        "end_timestamp_ns": 23152986542465
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986540238,
        "end_timestamp_ns": 23152986541002
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986538772,
        "end_timestamp_ns": 23152986539541
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986537305,
        "end_timestamp_ns": 23152986538069
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986535834,
        "end_timestamp_ns": 23152986536609
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986534334,
        "end_timestamp_ns": 23152986535158
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986507137,
        "end_timestamp_ns": 23152986507908
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986505692,
        "end_timestamp_ns": 23152986506459
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986504253,
        "end_timestamp_ns": 23152986505021
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986502807,
        "end_timestamp_ns": 23152986503574
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986501354,
        "end_timestamp_ns": 23152986502125
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986499941,
        "end_timestamp_ns": 23152986500717
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986485448,
        "end_timestamp_ns": 23152986486216
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986483976,
        "end_timestamp_ns": 23152986484745
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986482500,
        "end_timestamp_ns": 23152986483268
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986481037,
        "end_timestamp_ns": 23152986481807
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986479574,
        "end_timestamp_ns": 23152986480342
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986478102,
        "end_timestamp_ns": 23152986478868
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986476632,
        "end_timestamp_ns": 23152986477401
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986475140,
        "end_timestamp_ns": 23152986475960
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986472202,
        "end_timestamp_ns": 23152986472969
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986470728,
        "end_timestamp_ns": 23152986471500
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986469256,
        "end_timestamp_ns": 23152986470027
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986467782,
        "end_timestamp_ns": 23152986468550
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986466308,
        "end_timestamp_ns": 23152986467077
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986464830,
        "end_timestamp_ns": 23152986465602
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986463350,
        "end_timestamp_ns": 23152986464120
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986461885,
        "end_timestamp_ns": 23152986462654
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986460419,
        "end_timestamp_ns": 23152986461190
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986458750,
        "end_timestamp_ns": 23152986459519
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986457256,
        "end_timestamp_ns": 23152986458042
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986455763,
        "end_timestamp_ns": 23152986456544
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986430845,
        "end_timestamp_ns": 23152986431604
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986429394,
        "end_timestamp_ns": 23152986430180
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986426563,
        "end_timestamp_ns": 23152986427320
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986425121,
        "end_timestamp_ns": 23152986425879
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986423681,
        "end_timestamp_ns": 23152986424433
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986422233,
        "end_timestamp_ns": 23152986423000
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986420795,
        "end_timestamp_ns": 23152986421548
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986419361,
        "end_timestamp_ns": 23152986420117
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986417921,
        "end_timestamp_ns": 23152986418674
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986416486,
        "end_timestamp_ns": 23152986417242
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986415051,
        "end_timestamp_ns": 23152986415802
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986413609,
        "end_timestamp_ns": 23152986414363
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986412173,
        "end_timestamp_ns": 23152986412925
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986410730,
        "end_timestamp_ns": 23152986411484
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986409285,
        "end_timestamp_ns": 23152986410038
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986407857,
        "end_timestamp_ns": 23152986408634
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986404946,
        "end_timestamp_ns": 23152986405702
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986403507,
        "end_timestamp_ns": 23152986404268
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986402058,
        "end_timestamp_ns": 23152986402819
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986400614,
        "end_timestamp_ns": 23152986401372
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986399172,
        "end_timestamp_ns": 23152986399926
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986397730,
        "end_timestamp_ns": 23152986398486
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986396283,
        "end_timestamp_ns": 23152986397038
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986394835,
        "end_timestamp_ns": 23152986395594
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986393393,
        "end_timestamp_ns": 23152986394147
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986391956,
        "end_timestamp_ns": 23152986392710
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986390514,
        "end_timestamp_ns": 23152986391268
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986389075,
        "end_timestamp_ns": 23152986389829
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986387630,
        "end_timestamp_ns": 23152986388386
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986386188,
        "end_timestamp_ns": 23152986386944
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986384748,
        "end_timestamp_ns": 23152986385501
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986383295,
        "end_timestamp_ns": 23152986384051
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986381856,
        "end_timestamp_ns": 23152986382612
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986380390,
        "end_timestamp_ns": 23152986381143
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986378807,
        "end_timestamp_ns": 23152986379636
      },
      {
        "id": "write",
        "stack_id": 8404,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986373135,
        "end_timestamp_ns": 23152986376432
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986371551,
        "end_timestamp_ns": 23152986372336
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986363502,
        "end_timestamp_ns": 23152986364264
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986362042,
        "end_timestamp_ns": 23152986362803
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986360530,
        "end_timestamp_ns": 23152986361340
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986359081,
        "end_timestamp_ns": 23152986359875
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986355785,
        "end_timestamp_ns": 23152986356542
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986354194,
        "end_timestamp_ns": 23152986355001
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986339503,
        "end_timestamp_ns": 23152986340336
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986336183,
        "end_timestamp_ns": 23152986336969
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986334639,
        "end_timestamp_ns": 23152986335463
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986333151,
        "end_timestamp_ns": 23152986333968
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986329839,
        "end_timestamp_ns": 23152986330622
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986328236,
        "end_timestamp_ns": 23152986329061
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986326732,
        "end_timestamp_ns": 23152986327576
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986323367,
        "end_timestamp_ns": 23152986324148
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986321782,
        "end_timestamp_ns": 23152986322605
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986320324,
        "end_timestamp_ns": 23152986321121
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986318766,
        "end_timestamp_ns": 23152986319617
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986316510,
        "end_timestamp_ns": 23152986317327
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986314998,
        "end_timestamp_ns": 23152986315853
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986311227,
        "end_timestamp_ns": 23152986312009
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986309594,
        "end_timestamp_ns": 23152986310418
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986308045,
        "end_timestamp_ns": 23152986308897
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986279729,
        "end_timestamp_ns": 23152986307247
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986276654,
        "end_timestamp_ns": 23152986277825
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986274543,
        "end_timestamp_ns": 23152986275688
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986268273,
        "end_timestamp_ns": 23152986269220
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986266317,
        "end_timestamp_ns": 23152986267354
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986264407,
        "end_timestamp_ns": 23152986265481
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986259321,
        "end_timestamp_ns": 23152986260293
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986257354,
        "end_timestamp_ns": 23152986258376
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986255257,
        "end_timestamp_ns": 23152986256313
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986253282,
        "end_timestamp_ns": 23152986254341
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986250254,
        "end_timestamp_ns": 23152986251190
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986248394,
        "end_timestamp_ns": 23152986249457
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986243118,
        "end_timestamp_ns": 23152986244249
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986240854,
        "end_timestamp_ns": 23152986241839
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986238979,
        "end_timestamp_ns": 23152986240064
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986233754,
        "end_timestamp_ns": 23152986234719
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986231493,
        "end_timestamp_ns": 23152986232486
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986229407,
        "end_timestamp_ns": 23152986230610
      },
      {
        "id": "write",
        "stack_id": 8404,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986218557,
        "end_timestamp_ns": 23152986224635
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986216319,
        "end_timestamp_ns": 23152986217280
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986214195,
        "end_timestamp_ns": 23152986215120
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986212368,
        "end_timestamp_ns": 23152986213263
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986210520,
        "end_timestamp_ns": 23152986211462
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986208426,
        "end_timestamp_ns": 23152986209692
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986206352,
        "end_timestamp_ns": 23152986207372
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986202615,
        "end_timestamp_ns": 23152986203632
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986200750,
        "end_timestamp_ns": 23152986201695
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986197419,
        "end_timestamp_ns": 23152986198174
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986195933,
        "end_timestamp_ns": 23152986196718
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986194513,
        "end_timestamp_ns": 23152986195287
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986192946,
        "end_timestamp_ns": 23152986193748
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986190842,
        "end_timestamp_ns": 23152986191639
      },
      {
        "id": "ioctl",
        "stack_id": 5916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986189221,
        "end_timestamp_ns": 23152986190175
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986185970,
        "end_timestamp_ns": 23152986186721
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986184512,
        "end_timestamp_ns": 23152986185309
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986183103,
        "end_timestamp_ns": 23152986183867
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986181592,
        "end_timestamp_ns": 23152986182404
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986179534,
        "end_timestamp_ns": 23152986180334
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986178078,
        "end_timestamp_ns": 23152986178868
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986174805,
        "end_timestamp_ns": 23152986175572
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986173303,
        "end_timestamp_ns": 23152986174094
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986171812,
        "end_timestamp_ns": 23152986172599
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986170280,
        "end_timestamp_ns": 23152986171089
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986168193,
        "end_timestamp_ns": 23152986168994
      },
      {
        "id": "ioctl",
        "stack_id": 3334,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986166588,
        "end_timestamp_ns": 23152986167525
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986163285,
        "end_timestamp_ns": 23152986164049
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986161690,
        "end_timestamp_ns": 23152986162478
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986160268,
        "end_timestamp_ns": 23152986161036
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986158764,
        "end_timestamp_ns": 23152986159573
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986156635,
        "end_timestamp_ns": 23152986157426
      },
      {
        "id": "ioctl",
        "stack_id": 15879,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986155068,
        "end_timestamp_ns": 23152986155967
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986151776,
        "end_timestamp_ns": 23152986152546
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986150278,
        "end_timestamp_ns": 23152986151065
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986148862,
        "end_timestamp_ns": 23152986149630
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986147366,
        "end_timestamp_ns": 23152986148168
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986145205,
        "end_timestamp_ns": 23152986146007
      },
      {
        "id": "ioctl",
        "stack_id": 10137,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986143596,
        "end_timestamp_ns": 23152986144534
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986140313,
        "end_timestamp_ns": 23152986141087
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986138853,
        "end_timestamp_ns": 23152986139642
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986137441,
        "end_timestamp_ns": 23152986138207
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986135944,
        "end_timestamp_ns": 23152986136745
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986133859,
        "end_timestamp_ns": 23152986134649
      },
      {
        "id": "ioctl",
        "stack_id": 5349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986132256,
        "end_timestamp_ns": 23152986133197
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986128963,
        "end_timestamp_ns": 23152986129729
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986127350,
        "end_timestamp_ns": 23152986128135
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986125933,
        "end_timestamp_ns": 23152986126699
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986124399,
        "end_timestamp_ns": 23152986125218
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986122068,
        "end_timestamp_ns": 23152986122867
      },
      {
        "id": "ioctl",
        "stack_id": 13284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986120455,
        "end_timestamp_ns": 23152986121403
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986117191,
        "end_timestamp_ns": 23152986117959
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986115714,
        "end_timestamp_ns": 23152986116499
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986114227,
        "end_timestamp_ns": 23152986115006
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986112686,
        "end_timestamp_ns": 23152986113488
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986110441,
        "end_timestamp_ns": 23152986111249
      },
      {
        "id": "ioctl",
        "stack_id": 3602,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986108870,
        "end_timestamp_ns": 23152986109778
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986105354,
        "end_timestamp_ns": 23152986106144
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986103656,
        "end_timestamp_ns": 23152986104463
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986101911,
        "end_timestamp_ns": 23152986102948
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986100285,
        "end_timestamp_ns": 23152986101094
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986097228,
        "end_timestamp_ns": 23152986098325
      },
      {
        "id": "ioctl",
        "stack_id": 4728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152986094174,
        "end_timestamp_ns": 23152986096367
      },
      {
        "id": "munmap",
        "stack_id": 2648,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985950322,
        "end_timestamp_ns": 23152985964214
      },
      {
        "id": "munmap",
        "stack_id": 5542,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985941087,
        "end_timestamp_ns": 23152985949395
      },
      {
        "id": "munmap",
        "stack_id": 14839,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985928785,
        "end_timestamp_ns": 23152985939840
      },
      {
        "id": "write",
        "stack_id": 389,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985917113,
        "end_timestamp_ns": 23152985919981
      },
      {
        "id": "close",
        "stack_id": 6199,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985887240,
        "end_timestamp_ns": 23152985888088
      },
      {
        "id": "close",
        "stack_id": 13528,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985884457,
        "end_timestamp_ns": 23152985885242
      },
      {
        "id": "write",
        "stack_id": 4809,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985879432,
        "end_timestamp_ns": 23152985882992
      },
      {
        "id": "gettid",
        "stack_id": 2161,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985875137,
        "end_timestamp_ns": 23152985875960
      },
      {
        "id": "close",
        "stack_id": 8353,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985872069,
        "end_timestamp_ns": 23152985872786
      },
      {
        "id": "fcntl",
        "stack_id": 15875,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985868742,
        "end_timestamp_ns": 23152985871434
      },
      {
        "id": "close",
        "stack_id": 3035,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985862291,
        "end_timestamp_ns": 23152985863106
      },
      {
        "id": "newfstatat",
        "stack_id": 13292,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985859371,
        "end_timestamp_ns": 23152985861608
      },
      {
        "id": "ftruncate",
        "stack_id": 13217,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985838479,
        "end_timestamp_ns": 23152985858461
      },
      {
        "id": "close",
        "stack_id": 5480,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985832734,
        "end_timestamp_ns": 23152985834099
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985525826,
        "end_timestamp_ns": 23152985830988
      },
      {
        "id": "close",
        "stack_id": 5480,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985491330,
        "end_timestamp_ns": 23152985493128
      },
      {
        "id": "close",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985467666,
        "end_timestamp_ns": 23152985469277
      },
      {
        "id": "close",
        "stack_id": 12533,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985447681,
        "end_timestamp_ns": 23152985448718
      },
      {
        "id": "write",
        "stack_id": 7714,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985436981,
        "end_timestamp_ns": 23152985443984
      },
      {
        "id": "gettid",
        "stack_id": 7282,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985427925,
        "end_timestamp_ns": 23152985429022
      },
      {
        "id": "unlink",
        "stack_id": 10372,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985403529,
        "end_timestamp_ns": 23152985425630
      },
      {
        "id": "close",
        "stack_id": 1282,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985387363,
        "end_timestamp_ns": 23152985388738
      },
      {
        "id": "getdents64",
        "stack_id": 3915,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985385481,
        "end_timestamp_ns": 23152985386519
      },
      {
        "id": "getdents64",
        "stack_id": 13006,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985377121,
        "end_timestamp_ns": 23152985383773
      },
      {
        "id": "newfstatat",
        "stack_id": 13867,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985370520,
        "end_timestamp_ns": 23152985372702
      },
      {
        "id": "openat",
        "stack_id": 4893,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985364706,
        "end_timestamp_ns": 23152985369807
      },
      {
        "id": "futex",
        "stack_id": 15045,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985214185,
        "end_timestamp_ns": 23152985354800
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081482,
        "start_timestamp_ns": 23152985300051,
        "end_timestamp_ns": 23152985305152
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081482,
        "start_timestamp_ns": 23152985297980,
        "end_timestamp_ns": 23152985299203
      },
      {
        "id": "futex",
        "stack_id": 16112,
        "pid_tgid": 850236021081482,
        "start_timestamp_ns": 23152985290538,
        "end_timestamp_ns": 23152985292535
      },
      {
        "id": "futex",
        "stack_id": 11045,
        "pid_tgid": 850236021081482,
        "start_timestamp_ns": 23152384312504,
        "end_timestamp_ns": 23152985287928
      },
      {
        "id": "futex",
        "stack_id": 10114,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985211244,
        "end_timestamp_ns": 23152985213183
      },
      {
        "id": "gettid",
        "stack_id": 5386,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985199985,
        "end_timestamp_ns": 23152985201565
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152985162732,
        "end_timestamp_ns": 23152985188729
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152985155681,
        "end_timestamp_ns": 23152985163697
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152985160829,
        "end_timestamp_ns": 23152985161742
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152985159445,
        "end_timestamp_ns": 23152985159998
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985157685,
        "end_timestamp_ns": 23152985158487
      },
      {
        "id": "futex",
        "stack_id": 6107,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152985157623,
        "end_timestamp_ns": 23152985158498
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152985155158,
        "end_timestamp_ns": 23152985158502
      },
      {
        "id": "futex",
        "stack_id": 6107,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152985135663,
        "end_timestamp_ns": 23152985156919
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985135737,
        "end_timestamp_ns": 23152985156145
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152985134943,
        "end_timestamp_ns": 23152985135939
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152985134493,
        "end_timestamp_ns": 23152985135519
      },
      {
        "id": "write",
        "stack_id": 389,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985128417,
        "end_timestamp_ns": 23152985134065
      },
      {
        "id": "futex",
        "stack_id": 2765,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152985130451,
        "end_timestamp_ns": 23152985131324
      },
      {
        "id": "futex",
        "stack_id": 2765,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152985130087,
        "end_timestamp_ns": 23152985131038
      },
      {
        "id": "futex",
        "stack_id": 12099,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152985127157,
        "end_timestamp_ns": 23152985129527
      },
      {
        "id": "futex",
        "stack_id": 12099,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152985127000,
        "end_timestamp_ns": 23152985129223
      },
      {
        "id": "futex",
        "stack_id": 2765,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152985127082,
        "end_timestamp_ns": 23152985128901
      },
      {
        "id": "close",
        "stack_id": 8473,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985119201,
        "end_timestamp_ns": 23152985120921
      },
      {
        "id": "getdents64",
        "stack_id": 3915,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985115499,
        "end_timestamp_ns": 23152985116723
      },
      {
        "id": "newfstatat",
        "stack_id": 13012,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985113133,
        "end_timestamp_ns": 23152985114889
      },
      {
        "id": "newfstatat",
        "stack_id": 2183,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985110490,
        "end_timestamp_ns": 23152985112199
      },
      {
        "id": "newfstatat",
        "stack_id": 3496,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985107623,
        "end_timestamp_ns": 23152985109460
      },
      {
        "id": "newfstatat",
        "stack_id": 13012,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985104469,
        "end_timestamp_ns": 23152985106092
      },
      {
        "id": "newfstatat",
        "stack_id": 13012,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985101929,
        "end_timestamp_ns": 23152985103562
      },
      {
        "id": "newfstatat",
        "stack_id": 15395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985099261,
        "end_timestamp_ns": 23152985101010
      },
      {
        "id": "newfstatat",
        "stack_id": 12263,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985096406,
        "end_timestamp_ns": 23152985098329
      },
      {
        "id": "newfstatat",
        "stack_id": 7021,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985093548,
        "end_timestamp_ns": 23152985095433
      },
      {
        "id": "newfstatat",
        "stack_id": 13012,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985090421,
        "end_timestamp_ns": 23152985092598
      },
      {
        "id": "newfstatat",
        "stack_id": 11364,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985087556,
        "end_timestamp_ns": 23152985089372
      },
      {
        "id": "newfstatat",
        "stack_id": 5202,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985084344,
        "end_timestamp_ns": 23152985086468
      },
      {
        "id": "newfstatat",
        "stack_id": 5202,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985071011,
        "end_timestamp_ns": 23152985081796
      },
      {
        "id": "getdents64",
        "stack_id": 13006,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985048425,
        "end_timestamp_ns": 23152985065212
      },
      {
        "id": "fcntl",
        "stack_id": 4011,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985037631,
        "end_timestamp_ns": 23152985038321
      },
      {
        "id": "fcntl",
        "stack_id": 4011,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985035542,
        "end_timestamp_ns": 23152985037004
      },
      {
        "id": "newfstatat",
        "stack_id": 13867,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985031868,
        "end_timestamp_ns": 23152985034768
      },
      {
        "id": "openat",
        "stack_id": 7075,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152985019643,
        "end_timestamp_ns": 23152985029423
      },
      {
        "id": "futex",
        "stack_id": 15045,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152984813052,
        "end_timestamp_ns": 23152984992853
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152984957594,
        "end_timestamp_ns": 23152984959985
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152984956120,
        "end_timestamp_ns": 23152984956939
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 6061,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152884898017,
        "end_timestamp_ns": 23152984953394
      },
      {
        "id": "futex",
        "stack_id": 15045,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152964836852,
        "end_timestamp_ns": 23152984810518
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152984768941,
        "end_timestamp_ns": 23152984772824
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152984766944,
        "end_timestamp_ns": 23152984768252
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152984754227,
        "end_timestamp_ns": 23152984758139
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152984742598,
        "end_timestamp_ns": 23152984753570
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152984731730,
        "end_timestamp_ns": 23152984741866
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 6291,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152884624538,
        "end_timestamp_ns": 23152984727633
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 16016,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152863728624,
        "end_timestamp_ns": 23152964832960
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152884891693,
        "end_timestamp_ns": 23152884893685
      },
      {
        "id": "read",
        "stack_id": 1095,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152884874900,
        "end_timestamp_ns": 23152884885660
      },
      {
        "id": "openat",
        "stack_id": 3269,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152884854530,
        "end_timestamp_ns": 23152884871048
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 5434,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152784769762,
        "end_timestamp_ns": 23152884828077
      },
      {
        "id": "times",
        "stack_id": 6982,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152884620400,
        "end_timestamp_ns": 23152884623536
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 6291,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152784556406,
        "end_timestamp_ns": 23152884617798
      },
      {
        "id": "write",
        "stack_id": 12132,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152863720822,
        "end_timestamp_ns": 23152863727583
      },
      {
        "id": "futex",
        "stack_id": 1804,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152863711904,
        "end_timestamp_ns": 23152863713416
      },
      {
        "id": "futex",
        "stack_id": 3485,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152563592182,
        "end_timestamp_ns": 23152863709872
      },
      {
        "id": "futex",
        "stack_id": 14741,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152863693012,
        "end_timestamp_ns": 23152863694551
      },
      {
        "id": "futex",
        "stack_id": 3485,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152547417068,
        "end_timestamp_ns": 23152863690552
      },
      {
        "id": "futex",
        "stack_id": 9809,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152863662847,
        "end_timestamp_ns": 23152863664339
      },
      {
        "id": "futex",
        "stack_id": 3485,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152561568622,
        "end_timestamp_ns": 23152863660929
      },
      {
        "id": "futex",
        "stack_id": 10114,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152863650043,
        "end_timestamp_ns": 23152863653039
      },
      {
        "id": "clock_gettime",
        "stack_id": 11786,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152863646642,
        "end_timestamp_ns": 23152863648880
      },
      {
        "id": "gettid",
        "stack_id": 14960,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152863639071,
        "end_timestamp_ns": 23152863640211
      },
      {
        "id": "futex",
        "stack_id": 9838,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152863633994,
        "end_timestamp_ns": 23152863636230
      },
      {
        "id": "futex",
        "stack_id": 11045,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569366001,
        "end_timestamp_ns": 23152863631317
      },
      {
        "id": "futex",
        "stack_id": 10114,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152863588811,
        "end_timestamp_ns": 23152863591192
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152863527755,
        "end_timestamp_ns": 23152863585067
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152863466911,
        "end_timestamp_ns": 23152863526724
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152863399024,
        "end_timestamp_ns": 23152863465878
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152863339954,
        "end_timestamp_ns": 23152863397980
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152863270965,
        "end_timestamp_ns": 23152863338773
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152863212689,
        "end_timestamp_ns": 23152863269951
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152863143261,
        "end_timestamp_ns": 23152863211620
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152863083863,
        "end_timestamp_ns": 23152863142274
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152863019912,
        "end_timestamp_ns": 23152863082841
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862962082,
        "end_timestamp_ns": 23152863018946
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862892626,
        "end_timestamp_ns": 23152862960996
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862832767,
        "end_timestamp_ns": 23152862891620
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862763317,
        "end_timestamp_ns": 23152862831718
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862704260,
        "end_timestamp_ns": 23152862762292
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862635372,
        "end_timestamp_ns": 23152862703187
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862577474,
        "end_timestamp_ns": 23152862634400
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862508956,
        "end_timestamp_ns": 23152862576415
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862448958,
        "end_timestamp_ns": 23152862507974
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862379427,
        "end_timestamp_ns": 23152862447913
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862319032,
        "end_timestamp_ns": 23152862378307
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862249844,
        "end_timestamp_ns": 23152862317984
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862189417,
        "end_timestamp_ns": 23152862248821
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862120759,
        "end_timestamp_ns": 23152862188373
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152862062774,
        "end_timestamp_ns": 23152862119497
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861995174,
        "end_timestamp_ns": 23152862061777
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861935260,
        "end_timestamp_ns": 23152861993908
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861866001,
        "end_timestamp_ns": 23152861934219
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861805429,
        "end_timestamp_ns": 23152861864998
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861736504,
        "end_timestamp_ns": 23152861804424
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861677222,
        "end_timestamp_ns": 23152861735476
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861608570,
        "end_timestamp_ns": 23152861676162
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861550321,
        "end_timestamp_ns": 23152861607526
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861481867,
        "end_timestamp_ns": 23152861549267
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861421999,
        "end_timestamp_ns": 23152861480872
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861353486,
        "end_timestamp_ns": 23152861420958
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861295720,
        "end_timestamp_ns": 23152861352489
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861226738,
        "end_timestamp_ns": 23152861294691
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861156725,
        "end_timestamp_ns": 23152861225697
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861097817,
        "end_timestamp_ns": 23152861155762
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152861027947,
        "end_timestamp_ns": 23152861096816
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860969240,
        "end_timestamp_ns": 23152861026987
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860900262,
        "end_timestamp_ns": 23152860968228
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860841111,
        "end_timestamp_ns": 23152860899294
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860770997,
        "end_timestamp_ns": 23152860840076
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860711398,
        "end_timestamp_ns": 23152860769991
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860642008,
        "end_timestamp_ns": 23152860710406
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860583228,
        "end_timestamp_ns": 23152860640994
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860511371,
        "end_timestamp_ns": 23152860582160
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860452711,
        "end_timestamp_ns": 23152860510335
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860383201,
        "end_timestamp_ns": 23152860451627
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860323329,
        "end_timestamp_ns": 23152860382209
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860251742,
        "end_timestamp_ns": 23152860322263
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860193257,
        "end_timestamp_ns": 23152860250562
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152860105807,
        "end_timestamp_ns": 23152860192166
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859975588,
        "end_timestamp_ns": 23152860104685
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859907064,
        "end_timestamp_ns": 23152859974588
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859848123,
        "end_timestamp_ns": 23152859906093
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859777623,
        "end_timestamp_ns": 23152859847113
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859719249,
        "end_timestamp_ns": 23152859776608
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859650379,
        "end_timestamp_ns": 23152859718175
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859592540,
        "end_timestamp_ns": 23152859649401
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859523953,
        "end_timestamp_ns": 23152859591534
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859465730,
        "end_timestamp_ns": 23152859523002
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859395656,
        "end_timestamp_ns": 23152859464713
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859337047,
        "end_timestamp_ns": 23152859394672
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859266672,
        "end_timestamp_ns": 23152859335745
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859208590,
        "end_timestamp_ns": 23152859265475
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859139240,
        "end_timestamp_ns": 23152859207553
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859070172,
        "end_timestamp_ns": 23152859138196
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152859010558,
        "end_timestamp_ns": 23152859069171
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858940543,
        "end_timestamp_ns": 23152859009489
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858881358,
        "end_timestamp_ns": 23152858939541
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858813196,
        "end_timestamp_ns": 23152858880315
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858754421,
        "end_timestamp_ns": 23152858812159
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858683774,
        "end_timestamp_ns": 23152858753411
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858623098,
        "end_timestamp_ns": 23152858682736
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858554190,
        "end_timestamp_ns": 23152858622086
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858494609,
        "end_timestamp_ns": 23152858553137
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858425729,
        "end_timestamp_ns": 23152858493569
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858364898,
        "end_timestamp_ns": 23152858424724
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858295069,
        "end_timestamp_ns": 23152858363852
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858235067,
        "end_timestamp_ns": 23152858294067
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858165756,
        "end_timestamp_ns": 23152858234057
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858094416,
        "end_timestamp_ns": 23152858164731
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152858036132,
        "end_timestamp_ns": 23152858093411
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857965797,
        "end_timestamp_ns": 23152858035073
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857905846,
        "end_timestamp_ns": 23152857964761
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857836175,
        "end_timestamp_ns": 23152857904794
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857778010,
        "end_timestamp_ns": 23152857835179
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857707961,
        "end_timestamp_ns": 23152857776978
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857648774,
        "end_timestamp_ns": 23152857706964
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857577936,
        "end_timestamp_ns": 23152857647671
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857518176,
        "end_timestamp_ns": 23152857576847
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857446995,
        "end_timestamp_ns": 23152857517110
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857386264,
        "end_timestamp_ns": 23152857445985
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857313629,
        "end_timestamp_ns": 23152857385192
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857245930,
        "end_timestamp_ns": 23152857312579
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857167722,
        "end_timestamp_ns": 23152857244837
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857087027,
        "end_timestamp_ns": 23152857166693
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152857016018,
        "end_timestamp_ns": 23152857085948
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152856964067,
        "end_timestamp_ns": 23152857015088
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152856898719,
        "end_timestamp_ns": 23152856962820
      },
      {
        "id": "gettid",
        "stack_id": 13163,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152856893613,
        "end_timestamp_ns": 23152856894441
      },
      {
        "id": "gettid",
        "stack_id": 13163,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152856891139,
        "end_timestamp_ns": 23152856891963
      },
      {
        "id": "gettid",
        "stack_id": 13163,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152856888737,
        "end_timestamp_ns": 23152856889587
      },
      {
        "id": "gettid",
        "stack_id": 13163,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152856886117,
        "end_timestamp_ns": 23152856887027
      },
      {
        "id": "gettid",
        "stack_id": 13163,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152856881497,
        "end_timestamp_ns": 23152856883079
      },
      {
        "id": "newfstatat",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152856863422,
        "end_timestamp_ns": 23152856871154
      },
      {
        "id": "write",
        "stack_id": 12731,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152856806716,
        "end_timestamp_ns": 23152856823703
      },
      {
        "id": "fdatasync",
        "stack_id": 12958,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152854804789,
        "end_timestamp_ns": 23152856797694
      },
      {
        "id": "write",
        "stack_id": 9333,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152854800050,
        "end_timestamp_ns": 23152854803353
      },
      {
        "id": "write",
        "stack_id": 9333,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152854779958,
        "end_timestamp_ns": 23152854798224
      },
      {
        "id": "gettid",
        "stack_id": 12916,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152854746553,
        "end_timestamp_ns": 23152854747587
      },
      {
        "id": "clock_gettime",
        "stack_id": 2938,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152854742645,
        "end_timestamp_ns": 23152854744881
      },
      {
        "id": "gettid",
        "stack_id": 8956,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152854736961,
        "end_timestamp_ns": 23152854739047
      },
      {
        "id": "fsync",
        "stack_id": 14246,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152852707289,
        "end_timestamp_ns": 23152854721821
      },
      {
        "id": "write",
        "stack_id": 6019,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152852656269,
        "end_timestamp_ns": 23152852675729
      },
      {
        "id": "gettid",
        "stack_id": 6030,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152852639529,
        "end_timestamp_ns": 23152852641791
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152846958672,
        "end_timestamp_ns": 23152852609733
      },
      {
        "id": "pread64",
        "stack_id": 14454,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152846842819,
        "end_timestamp_ns": 23152846907146
      },
      {
        "id": "pread64",
        "stack_id": 3029,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152846817794,
        "end_timestamp_ns": 23152846819849
      },
      {
        "id": "pread64",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152846810497,
        "end_timestamp_ns": 23152846812638
      },
      {
        "id": "pread64",
        "stack_id": 13922,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152846789362,
        "end_timestamp_ns": 23152846798276
      },
      {
        "id": "readahead",
        "stack_id": 15986,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152846777539,
        "end_timestamp_ns": 23152846784988
      },
      {
        "id": "fadvise64",
        "stack_id": 15287,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152846772655,
        "end_timestamp_ns": 23152846774130
      },
      {
        "id": "fcntl",
        "stack_id": 7964,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152846770349,
        "end_timestamp_ns": 23152846771407
      },
      {
        "id": "fcntl",
        "stack_id": 7964,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152846768022,
        "end_timestamp_ns": 23152846769658
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152846756532,
        "end_timestamp_ns": 23152846766965
      },
      {
        "id": "close",
        "stack_id": 14933,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152846734742,
        "end_timestamp_ns": 23152846737225
      },
      {
        "id": "fdatasync",
        "stack_id": 1353,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152795383760,
        "end_timestamp_ns": 23152846727359
      },
      {
        "id": "write",
        "stack_id": 11971,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152736261704,
        "end_timestamp_ns": 23152795374405
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152784765163,
        "end_timestamp_ns": 23152784766294
      },
      {
        "id": "read",
        "stack_id": 1095,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152784750427,
        "end_timestamp_ns": 23152784759774
      },
      {
        "id": "openat",
        "stack_id": 3269,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152784732630,
        "end_timestamp_ns": 23152784746859
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 5434,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152684667348,
        "end_timestamp_ns": 23152784722638
      },
      {
        "id": "times",
        "stack_id": 6982,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152784551687,
        "end_timestamp_ns": 23152784555243
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 6291,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152684453847,
        "end_timestamp_ns": 23152784548042
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152735711036,
        "end_timestamp_ns": 23152735723833
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152719272569,
        "end_timestamp_ns": 23152719286521
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152699310371,
        "end_timestamp_ns": 23152703330815
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152684662043,
        "end_timestamp_ns": 23152684663572
      },
      {
        "id": "read",
        "stack_id": 1095,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152684645950,
        "end_timestamp_ns": 23152684656125
      },
      {
        "id": "openat",
        "stack_id": 3269,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152684625461,
        "end_timestamp_ns": 23152684642318
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 5434,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152584560374,
        "end_timestamp_ns": 23152684615362
      },
      {
        "id": "times",
        "stack_id": 6982,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152684449269,
        "end_timestamp_ns": 23152684452685
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 6291,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152584352976,
        "end_timestamp_ns": 23152684445645
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152664345564,
        "end_timestamp_ns": 23152664358033
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152661453251,
        "end_timestamp_ns": 23152661464975
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152642676145,
        "end_timestamp_ns": 23152642688544
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152632765889,
        "end_timestamp_ns": 23152634694491
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152617279533,
        "end_timestamp_ns": 23152617291912
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152601726335,
        "end_timestamp_ns": 23152602672633
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152593838901,
        "end_timestamp_ns": 23152593852537
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152586250246,
        "end_timestamp_ns": 23152586722096
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152584555016,
        "end_timestamp_ns": 23152584556603
      },
      {
        "id": "read",
        "stack_id": 1095,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152584539511,
        "end_timestamp_ns": 23152584549757
      },
      {
        "id": "openat",
        "stack_id": 3269,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152584517986,
        "end_timestamp_ns": 23152584535926
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 5434,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152484452304,
        "end_timestamp_ns": 23152584508043
      },
      {
        "id": "times",
        "stack_id": 6982,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152584348902,
        "end_timestamp_ns": 23152584351940
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 6291,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152484262258,
        "end_timestamp_ns": 23152584345939
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152582230762,
        "end_timestamp_ns": 23152582244009
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152577930185,
        "end_timestamp_ns": 23152578141398
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152575552566,
        "end_timestamp_ns": 23152575558453
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152573742689,
        "end_timestamp_ns": 23152573831614
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152572746742,
        "end_timestamp_ns": 23152572753819
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152571813823,
        "end_timestamp_ns": 23152571875162
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152571327395,
        "end_timestamp_ns": 23152571330279
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152570648937,
        "end_timestamp_ns": 23152570653316
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152570306500,
        "end_timestamp_ns": 23152570309108
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152570135315,
        "end_timestamp_ns": 23152570137946
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152570043102,
        "end_timestamp_ns": 23152570050061
      },
      {
        "id": "uname",
        "stack_id": 10310,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569958622,
        "end_timestamp_ns": 23152569960509
      },
      {
        "id": "fcntl",
        "stack_id": 7667,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569597608,
        "end_timestamp_ns": 23152569599253
      },
      {
        "id": "sync_file_range",
        "stack_id": 5476,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569594866,
        "end_timestamp_ns": 23152569596548
      },
      {
        "id": "fstatfs",
        "stack_id": 1348,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569590160,
        "end_timestamp_ns": 23152569593851
      },
      {
        "id": "fcntl",
        "stack_id": 241,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569587231,
        "end_timestamp_ns": 23152569588558
      },
      {
        "id": "fcntl",
        "stack_id": 241,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569583818,
        "end_timestamp_ns": 23152569586362
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569515646,
        "end_timestamp_ns": 23152569581934
      },
      {
        "id": "gettid",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569491706,
        "end_timestamp_ns": 23152569493258
      },
      {
        "id": "gettid",
        "stack_id": 9384,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569474334,
        "end_timestamp_ns": 23152569475921
      },
      {
        "id": "gettid",
        "stack_id": 5869,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569439700,
        "end_timestamp_ns": 23152569440941
      },
      {
        "id": "gettid",
        "stack_id": 10782,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569419631,
        "end_timestamp_ns": 23152569420933
      },
      {
        "id": "clock_gettime",
        "stack_id": 1081,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569414598,
        "end_timestamp_ns": 23152569417165
      },
      {
        "id": "futex",
        "stack_id": 3077,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152569379963,
        "end_timestamp_ns": 23152569382082
      },
      {
        "id": "futex",
        "stack_id": 11045,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152361471037,
        "end_timestamp_ns": 23152569375041
      },
      {
        "id": "futex",
        "stack_id": 11910,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569342892,
        "end_timestamp_ns": 23152569363700
      },
      {
        "id": "gettid",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569325983,
        "end_timestamp_ns": 23152569327087
      },
      {
        "id": "close",
        "stack_id": 3764,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569320772,
        "end_timestamp_ns": 23152569321765
      },
      {
        "id": "read",
        "stack_id": 8662,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569317898,
        "end_timestamp_ns": 23152569320108
      },
      {
        "id": "openat",
        "stack_id": 14364,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569313468,
        "end_timestamp_ns": 23152569317258
      },
      {
        "id": "close",
        "stack_id": 1284,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569306684,
        "end_timestamp_ns": 23152569308103
      },
      {
        "id": "read",
        "stack_id": 11426,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569299840,
        "end_timestamp_ns": 23152569305338
      },
      {
        "id": "openat",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569284674,
        "end_timestamp_ns": 23152569299160
      },
      {
        "id": "gettid",
        "stack_id": 13261,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569270151,
        "end_timestamp_ns": 23152569271964
      },
      {
        "id": "write",
        "stack_id": 13630,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569265191,
        "end_timestamp_ns": 23152569267234
      },
      {
        "id": "write",
        "stack_id": 1524,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152569258151,
        "end_timestamp_ns": 23152569263725
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152567014226,
        "end_timestamp_ns": 23152567018606
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152563782906,
        "end_timestamp_ns": 23152563788140
      },
      {
        "id": "clock_gettime",
        "stack_id": 11786,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152563587981,
        "end_timestamp_ns": 23152563590567
      },
      {
        "id": "clock_gettime",
        "stack_id": 11786,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152561562910,
        "end_timestamp_ns": 23152561566338
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152561019234,
        "end_timestamp_ns": 23152561020655
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152561018268,
        "end_timestamp_ns": 23152561019578
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152561016879,
        "end_timestamp_ns": 23152561018390
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152561016172,
        "end_timestamp_ns": 23152561017459
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152561011219,
        "end_timestamp_ns": 23152561014853
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152561014095,
        "end_timestamp_ns": 23152561015329
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152561010083,
        "end_timestamp_ns": 23152561012758
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152561002294,
        "end_timestamp_ns": 23152561011954
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152560065288,
        "end_timestamp_ns": 23152560068468
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152558127256,
        "end_timestamp_ns": 23152558128616
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152558127100,
        "end_timestamp_ns": 23152558128479
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152558124548,
        "end_timestamp_ns": 23152558126252
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152558124857,
        "end_timestamp_ns": 23152558126222
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152558121334,
        "end_timestamp_ns": 23152558123929
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152558121048,
        "end_timestamp_ns": 23152558123621
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152558112498,
        "end_timestamp_ns": 23152558120359
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152556221802,
        "end_timestamp_ns": 23152556223483
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152556183978,
        "end_timestamp_ns": 23152556186300
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152555950511,
        "end_timestamp_ns": 23152555956173
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152555927485,
        "end_timestamp_ns": 23152555929795
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152555743246,
        "end_timestamp_ns": 23152555746939
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152555741356,
        "end_timestamp_ns": 23152555742259
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152555732324,
        "end_timestamp_ns": 23152555740090
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152555734696,
        "end_timestamp_ns": 23152555736288
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152555729140,
        "end_timestamp_ns": 23152555733780
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152555691125,
        "end_timestamp_ns": 23152555731023
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152555706483,
        "end_timestamp_ns": 23152555708000
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152555691134,
        "end_timestamp_ns": 23152555705101
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152555700898,
        "end_timestamp_ns": 23152555703036
      },
      {
        "id": "write",
        "stack_id": 10284,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152555691372,
        "end_timestamp_ns": 23152555699823
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152555686791,
        "end_timestamp_ns": 23152555687704
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152555683565,
        "end_timestamp_ns": 23152555685775
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152555683588,
        "end_timestamp_ns": 23152555685672
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152554469958,
        "end_timestamp_ns": 23152554471523
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152554444954,
        "end_timestamp_ns": 23152554446766
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152553556634,
        "end_timestamp_ns": 23152553558090
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152553556507,
        "end_timestamp_ns": 23152553557840
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152553553260,
        "end_timestamp_ns": 23152553555795
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152553553549,
        "end_timestamp_ns": 23152553555682
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152553544041,
        "end_timestamp_ns": 23152553549521
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152551234487,
        "end_timestamp_ns": 23152551236303
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152551210868,
        "end_timestamp_ns": 23152551213322
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152551156038,
        "end_timestamp_ns": 23152551160430
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152549652669,
        "end_timestamp_ns": 23152549654267
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152549468349,
        "end_timestamp_ns": 23152549469608
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152549468048,
        "end_timestamp_ns": 23152549469430
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152549466113,
        "end_timestamp_ns": 23152549467517
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152549464729,
        "end_timestamp_ns": 23152549467192
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152549463243,
        "end_timestamp_ns": 23152549465249
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152549455822,
        "end_timestamp_ns": 23152549462106
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152548049158,
        "end_timestamp_ns": 23152548064415
      },
      {
        "id": "clock_gettime",
        "stack_id": 11786,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152547412915,
        "end_timestamp_ns": 23152547415551
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152547237969,
        "end_timestamp_ns": 23152547239271
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152547234936,
        "end_timestamp_ns": 23152547236904
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152547234934,
        "end_timestamp_ns": 23152547236929
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152547234540,
        "end_timestamp_ns": 23152547235612
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152547232240,
        "end_timestamp_ns": 23152547233821
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152547224453,
        "end_timestamp_ns": 23152547228647
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152546324381,
        "end_timestamp_ns": 23152546326829
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152546324090,
        "end_timestamp_ns": 23152546326802
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152546323110,
        "end_timestamp_ns": 23152546325342
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152545538949,
        "end_timestamp_ns": 23152545540407
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152545535513,
        "end_timestamp_ns": 23152545537717
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152545535515,
        "end_timestamp_ns": 23152545537716
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152545534524,
        "end_timestamp_ns": 23152545537444
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152545524982,
        "end_timestamp_ns": 23152545530591
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152545288487,
        "end_timestamp_ns": 23152545292142
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152545286646,
        "end_timestamp_ns": 23152545287576
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152545279875,
        "end_timestamp_ns": 23152545285409
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152545281801,
        "end_timestamp_ns": 23152545283110
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152545276435,
        "end_timestamp_ns": 23152545280890
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152545199825,
        "end_timestamp_ns": 23152545278600
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152545273845,
        "end_timestamp_ns": 23152545275339
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152545199823,
        "end_timestamp_ns": 23152545272407
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152545267521,
        "end_timestamp_ns": 23152545270307
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152545199171,
        "end_timestamp_ns": 23152545265815
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152545209088,
        "end_timestamp_ns": 23152545211144
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152545199885,
        "end_timestamp_ns": 23152545207988
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152545195703,
        "end_timestamp_ns": 23152545196629
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152545192755,
        "end_timestamp_ns": 23152545194986
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152545192753,
        "end_timestamp_ns": 23152545194628
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152544785950,
        "end_timestamp_ns": 23152544788190
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152544785914,
        "end_timestamp_ns": 23152544788106
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152544783938,
        "end_timestamp_ns": 23152544785709
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152543811028,
        "end_timestamp_ns": 23152543816810
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152543089275,
        "end_timestamp_ns": 23152543091393
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152542139927,
        "end_timestamp_ns": 23152542141354
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152542139914,
        "end_timestamp_ns": 23152542140905
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152542139467,
        "end_timestamp_ns": 23152542140799
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152542138044,
        "end_timestamp_ns": 23152542139106
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152542136625,
        "end_timestamp_ns": 23152542139052
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152542136379,
        "end_timestamp_ns": 23152542138659
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152542135525,
        "end_timestamp_ns": 23152542137297
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152542127350,
        "end_timestamp_ns": 23152542133863
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152541404278,
        "end_timestamp_ns": 23152541405675
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152541401170,
        "end_timestamp_ns": 23152541403109
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152541401070,
        "end_timestamp_ns": 23152541403108
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152540682204,
        "end_timestamp_ns": 23152540684145
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152540682206,
        "end_timestamp_ns": 23152540684143
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152540519247,
        "end_timestamp_ns": 23152540521595
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152540517815,
        "end_timestamp_ns": 23152540519270
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152540288493,
        "end_timestamp_ns": 23152540291223
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152540289596,
        "end_timestamp_ns": 23152540291175
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152540286074,
        "end_timestamp_ns": 23152540288439
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152540286071,
        "end_timestamp_ns": 23152540288440
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152540278901,
        "end_timestamp_ns": 23152540284698
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152539139106,
        "end_timestamp_ns": 23152539141767
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152539139463,
        "end_timestamp_ns": 23152539141324
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152538419457,
        "end_timestamp_ns": 23152538420932
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152538416096,
        "end_timestamp_ns": 23152538418279
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152538416127,
        "end_timestamp_ns": 23152538418277
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152538415405,
        "end_timestamp_ns": 23152538417758
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152538405923,
        "end_timestamp_ns": 23152538411041
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152536595392,
        "end_timestamp_ns": 23152536596750
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152536592652,
        "end_timestamp_ns": 23152536595355
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152536592894,
        "end_timestamp_ns": 23152536594324
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152536592922,
        "end_timestamp_ns": 23152536594308
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152536589622,
        "end_timestamp_ns": 23152536591662
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152536589619,
        "end_timestamp_ns": 23152536591660
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152536581838,
        "end_timestamp_ns": 23152536589260
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152536128522,
        "end_timestamp_ns": 23152536130720
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152536127585,
        "end_timestamp_ns": 23152536130143
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152536127127,
        "end_timestamp_ns": 23152536129454
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152535991266,
        "end_timestamp_ns": 23152535992701
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152535989817,
        "end_timestamp_ns": 23152535992437
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152535988337,
        "end_timestamp_ns": 23152535990182
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152535988339,
        "end_timestamp_ns": 23152535990153
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152535941604,
        "end_timestamp_ns": 23152535944029
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152535922041,
        "end_timestamp_ns": 23152535923886
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152535866267,
        "end_timestamp_ns": 23152535920145
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152535908796,
        "end_timestamp_ns": 23152535912359
      },
      {
        "id": "futex",
        "stack_id": 11088,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152535865632,
        "end_timestamp_ns": 23152535907217
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152535899859,
        "end_timestamp_ns": 23152535904073
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152535897017,
        "end_timestamp_ns": 23152535898666
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152535865207,
        "end_timestamp_ns": 23152535895177
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152535890192,
        "end_timestamp_ns": 23152535891738
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152535863959,
        "end_timestamp_ns": 23152535888702
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152535861079,
        "end_timestamp_ns": 23152535865583
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152535863460,
        "end_timestamp_ns": 23152535864490
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152535863353,
        "end_timestamp_ns": 23152535864394
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152535861333,
        "end_timestamp_ns": 23152535862553
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152535861181,
        "end_timestamp_ns": 23152535862512
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152535861113,
        "end_timestamp_ns": 23152535862226
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152535854800,
        "end_timestamp_ns": 23152535855698
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152535854476,
        "end_timestamp_ns": 23152535855405
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152535851853,
        "end_timestamp_ns": 23152535853811
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152535851978,
        "end_timestamp_ns": 23152535853776
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152535851259,
        "end_timestamp_ns": 23152535853283
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152535851275,
        "end_timestamp_ns": 23152535853191
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152534593818,
        "end_timestamp_ns": 23152534594792
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152534593033,
        "end_timestamp_ns": 23152534594464
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152534592152,
        "end_timestamp_ns": 23152534593133
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152534591621,
        "end_timestamp_ns": 23152534592946
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152534590152,
        "end_timestamp_ns": 23152534592229
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152534590477,
        "end_timestamp_ns": 23152534591481
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152534588765,
        "end_timestamp_ns": 23152534590788
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152534588467,
        "end_timestamp_ns": 23152534589793
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152534580460,
        "end_timestamp_ns": 23152534585869
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152534136524,
        "end_timestamp_ns": 23152534137854
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152534135843,
        "end_timestamp_ns": 23152534136843
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152534133389,
        "end_timestamp_ns": 23152534135479
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152534133390,
        "end_timestamp_ns": 23152534135458
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152534133923,
        "end_timestamp_ns": 23152534135177
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152534014689,
        "end_timestamp_ns": 23152534016880
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152534013008,
        "end_timestamp_ns": 23152534014381
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152532819244,
        "end_timestamp_ns": 23152532821409
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152532818554,
        "end_timestamp_ns": 23152532820808
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152532819605,
        "end_timestamp_ns": 23152532820599
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152532817663,
        "end_timestamp_ns": 23152532818925
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152532809295,
        "end_timestamp_ns": 23152532814870
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152532492647,
        "end_timestamp_ns": 23152532494083
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152532363037,
        "end_timestamp_ns": 23152532365425
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152532361503,
        "end_timestamp_ns": 23152532363510
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152530996494,
        "end_timestamp_ns": 23152530997748
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152530992771,
        "end_timestamp_ns": 23152530995330
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152530993974,
        "end_timestamp_ns": 23152530995330
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152530993947,
        "end_timestamp_ns": 23152530995329
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152530990737,
        "end_timestamp_ns": 23152530992789
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152530990738,
        "end_timestamp_ns": 23152530992791
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152530983474,
        "end_timestamp_ns": 23152530988336
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152529497446,
        "end_timestamp_ns": 23152529499632
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152529497436,
        "end_timestamp_ns": 23152529499633
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152529495913,
        "end_timestamp_ns": 23152529497982
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152529487540,
        "end_timestamp_ns": 23152529492710
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152527682155,
        "end_timestamp_ns": 23152527683472
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152527682246,
        "end_timestamp_ns": 23152527683312
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152527679314,
        "end_timestamp_ns": 23152527681465
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152527679040,
        "end_timestamp_ns": 23152527681064
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152527679042,
        "end_timestamp_ns": 23152527681065
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152527670409,
        "end_timestamp_ns": 23152527675929
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152527229895,
        "end_timestamp_ns": 23152527232155
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152527229893,
        "end_timestamp_ns": 23152527232154
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152527227200,
        "end_timestamp_ns": 23152527230044
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152526957637,
        "end_timestamp_ns": 23152526959240
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152526881098,
        "end_timestamp_ns": 23152526955796
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152526906143,
        "end_timestamp_ns": 23152526908244
      },
      {
        "id": "futex",
        "stack_id": 5914,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152526878137,
        "end_timestamp_ns": 23152526904721
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152526897576,
        "end_timestamp_ns": 23152526901008
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152526895025,
        "end_timestamp_ns": 23152526896565
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152526877788,
        "end_timestamp_ns": 23152526893527
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152526888648,
        "end_timestamp_ns": 23152526890227
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152526878182,
        "end_timestamp_ns": 23152526887640
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152526875934,
        "end_timestamp_ns": 23152526880412
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152526876064,
        "end_timestamp_ns": 23152526877127
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152526873704,
        "end_timestamp_ns": 23152526874668
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152526870474,
        "end_timestamp_ns": 23152526872779
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152526870549,
        "end_timestamp_ns": 23152526872204
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152526868113,
        "end_timestamp_ns": 23152526868957
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152526866178,
        "end_timestamp_ns": 23152526868002
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152526865569,
        "end_timestamp_ns": 23152526867162
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152526515361,
        "end_timestamp_ns": 23152526517533
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152526514182,
        "end_timestamp_ns": 23152526516175
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152525930985,
        "end_timestamp_ns": 23152525933280
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152525930988,
        "end_timestamp_ns": 23152525933282
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152525929092,
        "end_timestamp_ns": 23152525931590
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152525920555,
        "end_timestamp_ns": 23152525926367
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152523913347,
        "end_timestamp_ns": 23152523915669
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152523911589,
        "end_timestamp_ns": 23152523913746
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152523912659,
        "end_timestamp_ns": 23152523913720
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152523910614,
        "end_timestamp_ns": 23152523911938
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152523901740,
        "end_timestamp_ns": 23152523907753
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152523852119,
        "end_timestamp_ns": 23152523853638
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152522568537,
        "end_timestamp_ns": 23152522570928
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152522559248,
        "end_timestamp_ns": 23152522564986
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152522235755,
        "end_timestamp_ns": 23152522236855
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152522235092,
        "end_timestamp_ns": 23152522236414
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152522232825,
        "end_timestamp_ns": 23152522234955
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152522231799,
        "end_timestamp_ns": 23152522233925
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152522231797,
        "end_timestamp_ns": 23152522233927
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152520912864,
        "end_timestamp_ns": 23152520914593
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152520910725,
        "end_timestamp_ns": 23152520912847
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152520910355,
        "end_timestamp_ns": 23152520911786
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152520910388,
        "end_timestamp_ns": 23152520911762
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152520907382,
        "end_timestamp_ns": 23152520909176
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152520907384,
        "end_timestamp_ns": 23152520909202
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152520897387,
        "end_timestamp_ns": 23152520903415
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152520875268,
        "end_timestamp_ns": 23152520878323
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152520875480,
        "end_timestamp_ns": 23152520877047
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152520829353,
        "end_timestamp_ns": 23152520830510
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152520825693,
        "end_timestamp_ns": 23152520828126
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152520825998,
        "end_timestamp_ns": 23152520827645
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152520764007,
        "end_timestamp_ns": 23152520765454
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152520762530,
        "end_timestamp_ns": 23152520763964
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152520762170,
        "end_timestamp_ns": 23152520763431
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152520760251,
        "end_timestamp_ns": 23152520763133
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152520758452,
        "end_timestamp_ns": 23152520761657
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152520757879,
        "end_timestamp_ns": 23152520761088
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152520548549,
        "end_timestamp_ns": 23152520550331
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152519582827,
        "end_timestamp_ns": 23152519584787
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152519094369,
        "end_timestamp_ns": 23152519113434
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152519091893,
        "end_timestamp_ns": 23152519093240
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152519091853,
        "end_timestamp_ns": 23152519093209
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152519092138,
        "end_timestamp_ns": 23152519093173
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152519090370,
        "end_timestamp_ns": 23152519091414
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152519089410,
        "end_timestamp_ns": 23152519090796
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152519089375,
        "end_timestamp_ns": 23152519090734
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152519087925,
        "end_timestamp_ns": 23152519089644
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152519086168,
        "end_timestamp_ns": 23152519088189
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152519086170,
        "end_timestamp_ns": 23152519088190
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152519079700,
        "end_timestamp_ns": 23152519087761
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152518789494,
        "end_timestamp_ns": 23152518790978
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152518785844,
        "end_timestamp_ns": 23152518788339
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152518785846,
        "end_timestamp_ns": 23152518788336
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152518784482,
        "end_timestamp_ns": 23152518786477
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152518199472,
        "end_timestamp_ns": 23152518203411
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152518197306,
        "end_timestamp_ns": 23152518198366
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152518189779,
        "end_timestamp_ns": 23152518195950
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152518192240,
        "end_timestamp_ns": 23152518193754
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152518187078,
        "end_timestamp_ns": 23152518191266
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152518174871,
        "end_timestamp_ns": 23152518188775
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152518184233,
        "end_timestamp_ns": 23152518185993
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152518154834,
        "end_timestamp_ns": 23152518182539
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152518177130,
        "end_timestamp_ns": 23152518178893
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152518171630,
        "end_timestamp_ns": 23152518176200
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152518154158,
        "end_timestamp_ns": 23152518173506
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152518168474,
        "end_timestamp_ns": 23152518170315
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152518154145,
        "end_timestamp_ns": 23152518167041
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152518162523,
        "end_timestamp_ns": 23152518164584
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152518153147,
        "end_timestamp_ns": 23152518161505
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152518149711,
        "end_timestamp_ns": 23152518150677
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152518146661,
        "end_timestamp_ns": 23152518148923
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152518146624,
        "end_timestamp_ns": 23152518148564
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152517078024,
        "end_timestamp_ns": 23152517080159
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152517078034,
        "end_timestamp_ns": 23152517079351
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152517077508,
        "end_timestamp_ns": 23152517078531
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152517075330,
        "end_timestamp_ns": 23152517077225
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152517075757,
        "end_timestamp_ns": 23152517076828
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152517073568,
        "end_timestamp_ns": 23152517075072
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152517066058,
        "end_timestamp_ns": 23152517073105
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152516820787,
        "end_timestamp_ns": 23152516823554
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152516820349,
        "end_timestamp_ns": 23152516822367
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152516818883,
        "end_timestamp_ns": 23152516820196
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152516715850,
        "end_timestamp_ns": 23152516718694
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152516713985,
        "end_timestamp_ns": 23152516716415
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152515410050,
        "end_timestamp_ns": 23152515413036
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152515409813,
        "end_timestamp_ns": 23152515413082
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152515410047,
        "end_timestamp_ns": 23152515412644
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152515401521,
        "end_timestamp_ns": 23152515407574
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152513589041,
        "end_timestamp_ns": 23152513590133
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152513585913,
        "end_timestamp_ns": 23152513588121
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152513585671,
        "end_timestamp_ns": 23152513588089
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152513585670,
        "end_timestamp_ns": 23152513588090
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152513577249,
        "end_timestamp_ns": 23152513583376
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152511614353,
        "end_timestamp_ns": 23152511616428
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152511614352,
        "end_timestamp_ns": 23152511616433
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152511612585,
        "end_timestamp_ns": 23152511614837
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152511604097,
        "end_timestamp_ns": 23152511609325
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152510635490,
        "end_timestamp_ns": 23152510636492
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152510633426,
        "end_timestamp_ns": 23152510634755
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152510632104,
        "end_timestamp_ns": 23152510634254
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152509901892,
        "end_timestamp_ns": 23152509903209
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152509901014,
        "end_timestamp_ns": 23152509901990
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152509900586,
        "end_timestamp_ns": 23152509901973
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152509899012,
        "end_timestamp_ns": 23152509901050
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152509899306,
        "end_timestamp_ns": 23152509900297
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152509897343,
        "end_timestamp_ns": 23152509899591
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152509897165,
        "end_timestamp_ns": 23152509898591
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152509888784,
        "end_timestamp_ns": 23152509895015
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152509691953,
        "end_timestamp_ns": 23152509694457
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152509691967,
        "end_timestamp_ns": 23152509694377
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152509691969,
        "end_timestamp_ns": 23152509694375
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152508932078,
        "end_timestamp_ns": 23152508935665
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152508929931,
        "end_timestamp_ns": 23152508931054
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152508910845,
        "end_timestamp_ns": 23152508928372
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152508923839,
        "end_timestamp_ns": 23152508925824
      },
      {
        "id": "futex",
        "stack_id": 5914,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152508889514,
        "end_timestamp_ns": 23152508922472
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152508913221,
        "end_timestamp_ns": 23152508914935
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152508907404,
        "end_timestamp_ns": 23152508912293
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152508889354,
        "end_timestamp_ns": 23152508909692
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152508904765,
        "end_timestamp_ns": 23152508906285
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152508889317,
        "end_timestamp_ns": 23152508903447
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152508898691,
        "end_timestamp_ns": 23152508901134
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152508889158,
        "end_timestamp_ns": 23152508897702
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152508887398,
        "end_timestamp_ns": 23152508888342
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152508887097,
        "end_timestamp_ns": 23152508888260
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152508887066,
        "end_timestamp_ns": 23152508888174
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152508887059,
        "end_timestamp_ns": 23152508887841
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152508880779,
        "end_timestamp_ns": 23152508881867
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152508880590,
        "end_timestamp_ns": 23152508881564
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152508877959,
        "end_timestamp_ns": 23152508879715
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152508877417,
        "end_timestamp_ns": 23152508879347
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152508877297,
        "end_timestamp_ns": 23152508879318
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152508877897,
        "end_timestamp_ns": 23152508879237
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152508720697,
        "end_timestamp_ns": 23152508723197
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152508719282,
        "end_timestamp_ns": 23152508720609
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152508059065,
        "end_timestamp_ns": 23152508061108
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152508059066,
        "end_timestamp_ns": 23152508061106
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152508057116,
        "end_timestamp_ns": 23152508058628
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152508048907,
        "end_timestamp_ns": 23152508054328
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152507920199,
        "end_timestamp_ns": 23152507921645
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152507919449,
        "end_timestamp_ns": 23152507920472
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152507916909,
        "end_timestamp_ns": 23152507918949
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152507916871,
        "end_timestamp_ns": 23152507918947
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152507917375,
        "end_timestamp_ns": 23152507918766
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152506805618,
        "end_timestamp_ns": 23152506807727
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152506804046,
        "end_timestamp_ns": 23152506806230
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152506803915,
        "end_timestamp_ns": 23152506805274
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152506377514,
        "end_timestamp_ns": 23152506378884
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152506375331,
        "end_timestamp_ns": 23152506376411
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152506374467,
        "end_timestamp_ns": 23152506376312
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152506374465,
        "end_timestamp_ns": 23152506376314
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152506373273,
        "end_timestamp_ns": 23152506374648
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152506364056,
        "end_timestamp_ns": 23152506370025
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152506270608,
        "end_timestamp_ns": 23152506272983
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152506270357,
        "end_timestamp_ns": 23152506272084
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152504730213,
        "end_timestamp_ns": 23152504732557
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152504730505,
        "end_timestamp_ns": 23152504732374
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152504729381,
        "end_timestamp_ns": 23152504731506
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152504719879,
        "end_timestamp_ns": 23152504727311
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152504605755,
        "end_timestamp_ns": 23152504606916
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152504605300,
        "end_timestamp_ns": 23152504606715
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152504602594,
        "end_timestamp_ns": 23152504604926
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152504601715,
        "end_timestamp_ns": 23152504604076
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152504601742,
        "end_timestamp_ns": 23152504604062
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152503078360,
        "end_timestamp_ns": 23152503080422
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152503078791,
        "end_timestamp_ns": 23152503080049
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152503076771,
        "end_timestamp_ns": 23152503077938
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152503074607,
        "end_timestamp_ns": 23152503075836
      },
      {
        "id": "sched_yield",
        "stack_id": 14564,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152503072671,
        "end_timestamp_ns": 23152503074640
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152503071637,
        "end_timestamp_ns": 23152503072874
      },
      {
        "id": "sched_yield",
        "stack_id": 14564,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152503070250,
        "end_timestamp_ns": 23152503071718
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152503068976,
        "end_timestamp_ns": 23152503070718
      },
      {
        "id": "sched_yield",
        "stack_id": 14564,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152503067518,
        "end_timestamp_ns": 23152503069351
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152503059344,
        "end_timestamp_ns": 23152503068633
      },
      {
        "id": "sched_yield",
        "stack_id": 14564,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152503063032,
        "end_timestamp_ns": 23152503066556
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152503028138,
        "end_timestamp_ns": 23152503030371
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152503026570,
        "end_timestamp_ns": 23152503028890
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152502905494,
        "end_timestamp_ns": 23152502907075
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152501787547,
        "end_timestamp_ns": 23152501789773
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501786597,
        "end_timestamp_ns": 23152501787607
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501785299,
        "end_timestamp_ns": 23152501786713
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501784892,
        "end_timestamp_ns": 23152501785926
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501781693,
        "end_timestamp_ns": 23152501784396
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501783077,
        "end_timestamp_ns": 23152501784186
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501780261,
        "end_timestamp_ns": 23152501782340
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501279069,
        "end_timestamp_ns": 23152501280507
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501279111,
        "end_timestamp_ns": 23152501280476
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501279032,
        "end_timestamp_ns": 23152501280093
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501276511,
        "end_timestamp_ns": 23152501277880
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501276303,
        "end_timestamp_ns": 23152501277732
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501276266,
        "end_timestamp_ns": 23152501277457
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501273872,
        "end_timestamp_ns": 23152501275572
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501273705,
        "end_timestamp_ns": 23152501275239
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501273481,
        "end_timestamp_ns": 23152501275226
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152501265448,
        "end_timestamp_ns": 23152501273012
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501245332,
        "end_timestamp_ns": 23152501246338
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501244646,
        "end_timestamp_ns": 23152501246186
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501244387,
        "end_timestamp_ns": 23152501245712
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501243670,
        "end_timestamp_ns": 23152501244671
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501242245,
        "end_timestamp_ns": 23152501243784
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501241989,
        "end_timestamp_ns": 23152501243314
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501241987,
        "end_timestamp_ns": 23152501242989
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501239846,
        "end_timestamp_ns": 23152501241387
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501240283,
        "end_timestamp_ns": 23152501241307
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501239590,
        "end_timestamp_ns": 23152501240932
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501238621,
        "end_timestamp_ns": 23152501239624
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501237451,
        "end_timestamp_ns": 23152501238981
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501237191,
        "end_timestamp_ns": 23152501238527
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501236771,
        "end_timestamp_ns": 23152501237772
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501234737,
        "end_timestamp_ns": 23152501236590
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501234691,
        "end_timestamp_ns": 23152501236020
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501234995,
        "end_timestamp_ns": 23152501235995
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501233322,
        "end_timestamp_ns": 23152501234320
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501232314,
        "end_timestamp_ns": 23152501233636
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501232273,
        "end_timestamp_ns": 23152501233583
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501231669,
        "end_timestamp_ns": 23152501232670
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501229964,
        "end_timestamp_ns": 23152501231259
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501229789,
        "end_timestamp_ns": 23152501231150
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501230017,
        "end_timestamp_ns": 23152501231014
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501228342,
        "end_timestamp_ns": 23152501229340
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501227267,
        "end_timestamp_ns": 23152501228879
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501227529,
        "end_timestamp_ns": 23152501228786
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501226692,
        "end_timestamp_ns": 23152501227689
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501225124,
        "end_timestamp_ns": 23152501226661
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501224864,
        "end_timestamp_ns": 23152501226195
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501225036,
        "end_timestamp_ns": 23152501226037
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501223356,
        "end_timestamp_ns": 23152501224357
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501222729,
        "end_timestamp_ns": 23152501224263
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501222464,
        "end_timestamp_ns": 23152501223800
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501221696,
        "end_timestamp_ns": 23152501222697
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501220334,
        "end_timestamp_ns": 23152501221866
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501220002,
        "end_timestamp_ns": 23152501221373
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501220040,
        "end_timestamp_ns": 23152501221039
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501217832,
        "end_timestamp_ns": 23152501219382
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501218347,
        "end_timestamp_ns": 23152501219349
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501217572,
        "end_timestamp_ns": 23152501218909
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501216688,
        "end_timestamp_ns": 23152501217692
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501215424,
        "end_timestamp_ns": 23152501216979
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501215168,
        "end_timestamp_ns": 23152501216520
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501215030,
        "end_timestamp_ns": 23152501216031
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501213003,
        "end_timestamp_ns": 23152501214566
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501213351,
        "end_timestamp_ns": 23152501214352
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501212749,
        "end_timestamp_ns": 23152501214100
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501211691,
        "end_timestamp_ns": 23152501212694
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501210594,
        "end_timestamp_ns": 23152501212143
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501210336,
        "end_timestamp_ns": 23152501211681
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501210011,
        "end_timestamp_ns": 23152501211013
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501208178,
        "end_timestamp_ns": 23152501209712
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501208354,
        "end_timestamp_ns": 23152501209357
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501207928,
        "end_timestamp_ns": 23152501209271
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501206678,
        "end_timestamp_ns": 23152501207678
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501205761,
        "end_timestamp_ns": 23152501207326
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501205505,
        "end_timestamp_ns": 23152501206861
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501205017,
        "end_timestamp_ns": 23152501206018
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501203351,
        "end_timestamp_ns": 23152501204895
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501203094,
        "end_timestamp_ns": 23152501204432
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501203369,
        "end_timestamp_ns": 23152501204368
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501201693,
        "end_timestamp_ns": 23152501202692
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501200939,
        "end_timestamp_ns": 23152501202484
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501200677,
        "end_timestamp_ns": 23152501202023
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501200042,
        "end_timestamp_ns": 23152501201040
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501198515,
        "end_timestamp_ns": 23152501200045
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501198261,
        "end_timestamp_ns": 23152501199587
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501198388,
        "end_timestamp_ns": 23152501199388
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501196736,
        "end_timestamp_ns": 23152501197733
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501195667,
        "end_timestamp_ns": 23152501197634
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501195405,
        "end_timestamp_ns": 23152501196752
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501195087,
        "end_timestamp_ns": 23152501196084
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501193251,
        "end_timestamp_ns": 23152501194793
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501193412,
        "end_timestamp_ns": 23152501194409
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501192912,
        "end_timestamp_ns": 23152501194266
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501191731,
        "end_timestamp_ns": 23152501192732
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501190777,
        "end_timestamp_ns": 23152501192349
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501190447,
        "end_timestamp_ns": 23152501191787
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501190073,
        "end_timestamp_ns": 23152501191074
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501187984,
        "end_timestamp_ns": 23152501189712
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501188395,
        "end_timestamp_ns": 23152501189395
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501187726,
        "end_timestamp_ns": 23152501189062
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501186737,
        "end_timestamp_ns": 23152501187736
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501185568,
        "end_timestamp_ns": 23152501187121
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501185310,
        "end_timestamp_ns": 23152501186645
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501185054,
        "end_timestamp_ns": 23152501186057
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501183114,
        "end_timestamp_ns": 23152501184674
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501183376,
        "end_timestamp_ns": 23152501184378
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501182834,
        "end_timestamp_ns": 23152501184171
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501181691,
        "end_timestamp_ns": 23152501182695
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501180102,
        "end_timestamp_ns": 23152501182015
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501180287,
        "end_timestamp_ns": 23152501181571
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501180040,
        "end_timestamp_ns": 23152501181042
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501178375,
        "end_timestamp_ns": 23152501179379
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501177658,
        "end_timestamp_ns": 23152501179068
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501177698,
        "end_timestamp_ns": 23152501179027
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501176672,
        "end_timestamp_ns": 23152501177676
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501175164,
        "end_timestamp_ns": 23152501176464
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501174969,
        "end_timestamp_ns": 23152501176395
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501175023,
        "end_timestamp_ns": 23152501176022
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501173345,
        "end_timestamp_ns": 23152501174344
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501172243,
        "end_timestamp_ns": 23152501174235
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501172074,
        "end_timestamp_ns": 23152501173474
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501171666,
        "end_timestamp_ns": 23152501172668
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501169653,
        "end_timestamp_ns": 23152501171161
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501170013,
        "end_timestamp_ns": 23152501171011
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501169449,
        "end_timestamp_ns": 23152501170825
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501168335,
        "end_timestamp_ns": 23152501169336
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501167154,
        "end_timestamp_ns": 23152501168825
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501166986,
        "end_timestamp_ns": 23152501168370
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501166654,
        "end_timestamp_ns": 23152501167658
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501164439,
        "end_timestamp_ns": 23152501166136
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501164836,
        "end_timestamp_ns": 23152501165836
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501164490,
        "end_timestamp_ns": 23152501165811
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501163160,
        "end_timestamp_ns": 23152501164159
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501161611,
        "end_timestamp_ns": 23152501163287
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501161610,
        "end_timestamp_ns": 23152501163286
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501161511,
        "end_timestamp_ns": 23152501162513
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501159864,
        "end_timestamp_ns": 23152501160864
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501158201,
        "end_timestamp_ns": 23152501159205
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501156499,
        "end_timestamp_ns": 23152501157514
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501154708,
        "end_timestamp_ns": 23152501155821
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152501138151,
        "end_timestamp_ns": 23152501139899
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152501134714,
        "end_timestamp_ns": 23152501136998
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501133904,
        "end_timestamp_ns": 23152501134994
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152501131736,
        "end_timestamp_ns": 23152501133214
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152500977561,
        "end_timestamp_ns": 23152500979452
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152500976125,
        "end_timestamp_ns": 23152500978371
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152500976310,
        "end_timestamp_ns": 23152500977618
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152500902977,
        "end_timestamp_ns": 23152500904079
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152500899632,
        "end_timestamp_ns": 23152500902209
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152500899349,
        "end_timestamp_ns": 23152500901953
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152500156798,
        "end_timestamp_ns": 23152500158873
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152500135898,
        "end_timestamp_ns": 23152500140284
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152500133311,
        "end_timestamp_ns": 23152500134606
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152500059223,
        "end_timestamp_ns": 23152500131053
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152500123071,
        "end_timestamp_ns": 23152500125941
      },
      {
        "id": "futex",
        "stack_id": 11088,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152500058267,
        "end_timestamp_ns": 23152500121861
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152500115414,
        "end_timestamp_ns": 23152500119896
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152500112859,
        "end_timestamp_ns": 23152500114331
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152500058000,
        "end_timestamp_ns": 23152500111460
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152500085145,
        "end_timestamp_ns": 23152500086888
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152500056981,
        "end_timestamp_ns": 23152500084062
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152500056125,
        "end_timestamp_ns": 23152500058286
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152500056030,
        "end_timestamp_ns": 23152500056993
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152500055754,
        "end_timestamp_ns": 23152500056951
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152500050150,
        "end_timestamp_ns": 23152500051235
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152500048031,
        "end_timestamp_ns": 23152500049234
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152500047984,
        "end_timestamp_ns": 23152500049115
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152500045175,
        "end_timestamp_ns": 23152500047216
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152500045070,
        "end_timestamp_ns": 23152500046915
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152500044577,
        "end_timestamp_ns": 23152500046779
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152499407892,
        "end_timestamp_ns": 23152499409175
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152499405496,
        "end_timestamp_ns": 23152499406922
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152499405538,
        "end_timestamp_ns": 23152499406808
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152499404933,
        "end_timestamp_ns": 23152499405930
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152499402892,
        "end_timestamp_ns": 23152499404274
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152499402927,
        "end_timestamp_ns": 23152499404213
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152499403224,
        "end_timestamp_ns": 23152499404226
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152499401552,
        "end_timestamp_ns": 23152499402570
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152499400409,
        "end_timestamp_ns": 23152499401787
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152499400388,
        "end_timestamp_ns": 23152499401771
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152499399799,
        "end_timestamp_ns": 23152499400816
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152499396986,
        "end_timestamp_ns": 23152499399345
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152499397005,
        "end_timestamp_ns": 23152499399191
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152499398010,
        "end_timestamp_ns": 23152499399128
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152499394739,
        "end_timestamp_ns": 23152499397260
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152499386842,
        "end_timestamp_ns": 23152499394104
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152497851937,
        "end_timestamp_ns": 23152497853936
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152497851425,
        "end_timestamp_ns": 23152497852964
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152497756900,
        "end_timestamp_ns": 23152497758306
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152497756062,
        "end_timestamp_ns": 23152497757073
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152497754095,
        "end_timestamp_ns": 23152497755769
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152497754098,
        "end_timestamp_ns": 23152497755762
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152497754247,
        "end_timestamp_ns": 23152497755384
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152497728256,
        "end_timestamp_ns": 23152497730363
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152497728388,
        "end_timestamp_ns": 23152497730361
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152497727324,
        "end_timestamp_ns": 23152497729149
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152497718561,
        "end_timestamp_ns": 23152497724917
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152497057982,
        "end_timestamp_ns": 23152497060246
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152497057789,
        "end_timestamp_ns": 23152497059847
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152497056740,
        "end_timestamp_ns": 23152497059234
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152496038918,
        "end_timestamp_ns": 23152496040389
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152496038363,
        "end_timestamp_ns": 23152496039672
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152496035213,
        "end_timestamp_ns": 23152496037725
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152496035603,
        "end_timestamp_ns": 23152496037257
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152495930332,
        "end_timestamp_ns": 23152495931646
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152495929638,
        "end_timestamp_ns": 23152495930646
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152495928619,
        "end_timestamp_ns": 23152495929879
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152495928169,
        "end_timestamp_ns": 23152495929504
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152495927943,
        "end_timestamp_ns": 23152495928954
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152495925120,
        "end_timestamp_ns": 23152495927597
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152495924903,
        "end_timestamp_ns": 23152495927353
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152495926145,
        "end_timestamp_ns": 23152495927264
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152495923364,
        "end_timestamp_ns": 23152495925383
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152495918169,
        "end_timestamp_ns": 23152495923508
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152493979270,
        "end_timestamp_ns": 23152493981494
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152493977745,
        "end_timestamp_ns": 23152493979939
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152493977762,
        "end_timestamp_ns": 23152493979172
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152493969414,
        "end_timestamp_ns": 23152493975231
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152492445552,
        "end_timestamp_ns": 23152492446933
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152492443310,
        "end_timestamp_ns": 23152492444732
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152492442508,
        "end_timestamp_ns": 23152492444484
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152492442506,
        "end_timestamp_ns": 23152492444466
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152492330936,
        "end_timestamp_ns": 23152492332894
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152492329982,
        "end_timestamp_ns": 23152492332476
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152492329351,
        "end_timestamp_ns": 23152492331347
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152492320672,
        "end_timestamp_ns": 23152492325728
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152491167562,
        "end_timestamp_ns": 23152491169600
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152491164848,
        "end_timestamp_ns": 23152491166549
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152490998396,
        "end_timestamp_ns": 23152490999723
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152490965868,
        "end_timestamp_ns": 23152490997072
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152490991904,
        "end_timestamp_ns": 23152490995890
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152490989441,
        "end_timestamp_ns": 23152490990914
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152490963285,
        "end_timestamp_ns": 23152490988103
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152490983079,
        "end_timestamp_ns": 23152490984901
      },
      {
        "id": "futex",
        "stack_id": 11088,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152490963084,
        "end_timestamp_ns": 23152490981583
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152490973031,
        "end_timestamp_ns": 23152490975126
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152490961614,
        "end_timestamp_ns": 23152490972040
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152490960719,
        "end_timestamp_ns": 23152490965202
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152490960874,
        "end_timestamp_ns": 23152490962484
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152490960887,
        "end_timestamp_ns": 23152490961892
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152490954985,
        "end_timestamp_ns": 23152490956118
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152490952064,
        "end_timestamp_ns": 23152490954032
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152490952188,
        "end_timestamp_ns": 23152490953680
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152490487042,
        "end_timestamp_ns": 23152490489189
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152490487081,
        "end_timestamp_ns": 23152490489210
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152490485246,
        "end_timestamp_ns": 23152490486696
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152490476495,
        "end_timestamp_ns": 23152490482192
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152489308727,
        "end_timestamp_ns": 23152489310549
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152489308468,
        "end_timestamp_ns": 23152489310059
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152488930621,
        "end_timestamp_ns": 23152488933424
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152488928727,
        "end_timestamp_ns": 23152488931072
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152488919805,
        "end_timestamp_ns": 23152488925694
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152487592359,
        "end_timestamp_ns": 23152487593564
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152487589643,
        "end_timestamp_ns": 23152487591390
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152487590291,
        "end_timestamp_ns": 23152487591299
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152487588297,
        "end_timestamp_ns": 23152487589614
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152487388080,
        "end_timestamp_ns": 23152487389477
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152487387118,
        "end_timestamp_ns": 23152487388531
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152487387508,
        "end_timestamp_ns": 23152487388488
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152487385095,
        "end_timestamp_ns": 23152487387277
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152487385798,
        "end_timestamp_ns": 23152487386808
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152487383731,
        "end_timestamp_ns": 23152487386338
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152487383690,
        "end_timestamp_ns": 23152487385101
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152487375325,
        "end_timestamp_ns": 23152487381179
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152485802101,
        "end_timestamp_ns": 23152485804281
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152485800530,
        "end_timestamp_ns": 23152485801819
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152485584497,
        "end_timestamp_ns": 23152485586273
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152485583629,
        "end_timestamp_ns": 23152485585954
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152485575221,
        "end_timestamp_ns": 23152485580971
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152484446903,
        "end_timestamp_ns": 23152484448504
      },
      {
        "id": "read",
        "stack_id": 1095,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152484433209,
        "end_timestamp_ns": 23152484442039
      },
      {
        "id": "openat",
        "stack_id": 3269,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152484413697,
        "end_timestamp_ns": 23152484430063
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 5434,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152384350113,
        "end_timestamp_ns": 23152484404645
      },
      {
        "id": "times",
        "stack_id": 6982,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152484258720,
        "end_timestamp_ns": 23152484261352
      },
      {
        "id": "clock_nanosleep",
        "stack_id": 6291,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152384174905,
        "end_timestamp_ns": 23152484255982
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152484114424,
        "end_timestamp_ns": 23152484115778
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152484114359,
        "end_timestamp_ns": 23152484115387
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152484111859,
        "end_timestamp_ns": 23152484113619
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152484111250,
        "end_timestamp_ns": 23152484113334
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152484111315,
        "end_timestamp_ns": 23152484113321
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152483825573,
        "end_timestamp_ns": 23152483826997
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152483822187,
        "end_timestamp_ns": 23152483824510
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152483822210,
        "end_timestamp_ns": 23152483824428
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152483821240,
        "end_timestamp_ns": 23152483824204
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152483812069,
        "end_timestamp_ns": 23152483818886
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152482561768,
        "end_timestamp_ns": 23152482563336
      },
      {
        "id": "futex",
        "stack_id": 11088,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152482497481,
        "end_timestamp_ns": 23152482559666
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152482548182,
        "end_timestamp_ns": 23152482550210
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152482496737,
        "end_timestamp_ns": 23152482546819
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152482539013,
        "end_timestamp_ns": 23152482543555
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152482514541,
        "end_timestamp_ns": 23152482516223
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152482495893,
        "end_timestamp_ns": 23152482512796
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152482508101,
        "end_timestamp_ns": 23152482509724
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152482496719,
        "end_timestamp_ns": 23152482507174
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152482495741,
        "end_timestamp_ns": 23152482496518
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152482495077,
        "end_timestamp_ns": 23152482495752
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152482493339,
        "end_timestamp_ns": 23152482494860
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152482493423,
        "end_timestamp_ns": 23152482494544
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152482493253,
        "end_timestamp_ns": 23152482494493
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152482493363,
        "end_timestamp_ns": 23152482494228
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152482486715,
        "end_timestamp_ns": 23152482487630
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152482483737,
        "end_timestamp_ns": 23152482485477
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152482483735,
        "end_timestamp_ns": 23152482485429
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152482484232,
        "end_timestamp_ns": 23152482485124
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152482481802,
        "end_timestamp_ns": 23152482483628
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152482481475,
        "end_timestamp_ns": 23152482483336
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152482015877,
        "end_timestamp_ns": 23152482017327
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152482015976,
        "end_timestamp_ns": 23152482017188
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152482013469,
        "end_timestamp_ns": 23152482015712
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152482013242,
        "end_timestamp_ns": 23152482015124
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152482013225,
        "end_timestamp_ns": 23152482014964
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152482004504,
        "end_timestamp_ns": 23152482010800
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152481911247,
        "end_timestamp_ns": 23152481913978
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152481911018,
        "end_timestamp_ns": 23152481913278
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152481910178,
        "end_timestamp_ns": 23152481912274
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152480589652,
        "end_timestamp_ns": 23152480591884
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152480589376,
        "end_timestamp_ns": 23152480591589
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152480580770,
        "end_timestamp_ns": 23152480586858
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152479863062,
        "end_timestamp_ns": 23152479865335
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152479862786,
        "end_timestamp_ns": 23152479864584
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152478628454,
        "end_timestamp_ns": 23152478629865
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152478627384,
        "end_timestamp_ns": 23152478629683
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152478625410,
        "end_timestamp_ns": 23152478627590
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152478625307,
        "end_timestamp_ns": 23152478627518
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152478614907,
        "end_timestamp_ns": 23152478622123
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152478048826,
        "end_timestamp_ns": 23152478051697
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152478048334,
        "end_timestamp_ns": 23152478050813
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152478047500,
        "end_timestamp_ns": 23152478049759
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152477203227,
        "end_timestamp_ns": 23152477204551
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152477201305,
        "end_timestamp_ns": 23152477204082
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152477200061,
        "end_timestamp_ns": 23152477202087
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152477200063,
        "end_timestamp_ns": 23152477202089
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152476871558,
        "end_timestamp_ns": 23152476873795
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152476871628,
        "end_timestamp_ns": 23152476873794
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152476843739,
        "end_timestamp_ns": 23152476849741
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152475378909,
        "end_timestamp_ns": 23152475380176
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152475375935,
        "end_timestamp_ns": 23152475377845
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152475375933,
        "end_timestamp_ns": 23152475377844
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152475375268,
        "end_timestamp_ns": 23152475377210
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152475020235,
        "end_timestamp_ns": 23152475021603
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152475018910,
        "end_timestamp_ns": 23152475019971
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152475017064,
        "end_timestamp_ns": 23152475019109
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152475017066,
        "end_timestamp_ns": 23152475019107
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152475016614,
        "end_timestamp_ns": 23152475018235
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152475007377,
        "end_timestamp_ns": 23152475013267
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152473888985,
        "end_timestamp_ns": 23152473891291
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152473887959,
        "end_timestamp_ns": 23152473890332
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152473604795,
        "end_timestamp_ns": 23152473607305
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152473605180,
        "end_timestamp_ns": 23152473606636
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152473601535,
        "end_timestamp_ns": 23152473604345
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152473601535,
        "end_timestamp_ns": 23152473603788
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152473283928,
        "end_timestamp_ns": 23152473285077
      },
      {
        "id": "futex",
        "stack_id": 5914,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152473250478,
        "end_timestamp_ns": 23152473282570
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152473278121,
        "end_timestamp_ns": 23152473281249
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152473276201,
        "end_timestamp_ns": 23152473277121
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152473273667,
        "end_timestamp_ns": 23152473275350
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152473273704,
        "end_timestamp_ns": 23152473274861
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152473268520,
        "end_timestamp_ns": 23152473272524
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152473249823,
        "end_timestamp_ns": 23152473272034
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152473265903,
        "end_timestamp_ns": 23152473267356
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152473249626,
        "end_timestamp_ns": 23152473264007
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152473259826,
        "end_timestamp_ns": 23152473261452
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152473249500,
        "end_timestamp_ns": 23152473258792
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152473247804,
        "end_timestamp_ns": 23152473249473
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152473247274,
        "end_timestamp_ns": 23152473248623
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152473247263,
        "end_timestamp_ns": 23152473248637
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152473247399,
        "end_timestamp_ns": 23152473248142
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152473242121,
        "end_timestamp_ns": 23152473243054
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152473239379,
        "end_timestamp_ns": 23152473241710
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152473238916,
        "end_timestamp_ns": 23152473241223
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152473093813,
        "end_timestamp_ns": 23152473095176
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152473090544,
        "end_timestamp_ns": 23152473092690
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152473090543,
        "end_timestamp_ns": 23152473092713
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152473089296,
        "end_timestamp_ns": 23152473091370
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152473080164,
        "end_timestamp_ns": 23152473085557
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152471937603,
        "end_timestamp_ns": 23152471939608
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152471937189,
        "end_timestamp_ns": 23152471938545
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152471795989,
        "end_timestamp_ns": 23152471797326
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152471795676,
        "end_timestamp_ns": 23152471796678
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152471792991,
        "end_timestamp_ns": 23152471794929
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152471793685,
        "end_timestamp_ns": 23152471794995
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152471792992,
        "end_timestamp_ns": 23152471794923
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152471462376,
        "end_timestamp_ns": 23152471463748
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152471461128,
        "end_timestamp_ns": 23152471462547
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152471461460,
        "end_timestamp_ns": 23152471462435
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152471459345,
        "end_timestamp_ns": 23152471461548
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152471459773,
        "end_timestamp_ns": 23152471460774
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152471457835,
        "end_timestamp_ns": 23152471460328
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152471457637,
        "end_timestamp_ns": 23152471459095
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152471448784,
        "end_timestamp_ns": 23152471454434
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152470149283,
        "end_timestamp_ns": 23152470150639
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152470149051,
        "end_timestamp_ns": 23152470150041
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152470147082,
        "end_timestamp_ns": 23152470148379
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152470146192,
        "end_timestamp_ns": 23152470148171
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152470146193,
        "end_timestamp_ns": 23152470148175
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152469670214,
        "end_timestamp_ns": 23152469671600
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152469668970,
        "end_timestamp_ns": 23152469669946
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152469667078,
        "end_timestamp_ns": 23152469669513
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152469667103,
        "end_timestamp_ns": 23152469669383
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152469667284,
        "end_timestamp_ns": 23152469668303
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152469665190,
        "end_timestamp_ns": 23152469666609
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152469657919,
        "end_timestamp_ns": 23152469664197
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152468350515,
        "end_timestamp_ns": 23152468352367
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152468349192,
        "end_timestamp_ns": 23152468350401
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152468275829,
        "end_timestamp_ns": 23152468278265
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152468274332,
        "end_timestamp_ns": 23152468275914
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152467949328,
        "end_timestamp_ns": 23152467950746
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152467947483,
        "end_timestamp_ns": 23152467948520
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152467946135,
        "end_timestamp_ns": 23152467948209
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152467946115,
        "end_timestamp_ns": 23152467948211
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152467945207,
        "end_timestamp_ns": 23152467946693
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152467936206,
        "end_timestamp_ns": 23152467940935
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152466772985,
        "end_timestamp_ns": 23152466774983
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152466771772,
        "end_timestamp_ns": 23152466773211
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152466402146,
        "end_timestamp_ns": 23152466404267
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152466400573,
        "end_timestamp_ns": 23152466401997
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152466282236,
        "end_timestamp_ns": 23152466283525
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152466278560,
        "end_timestamp_ns": 23152466281935
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152466278964,
        "end_timestamp_ns": 23152466281117
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152466278963,
        "end_timestamp_ns": 23152466281119
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152466268655,
        "end_timestamp_ns": 23152466274315
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152464660851,
        "end_timestamp_ns": 23152464662363
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152464660635,
        "end_timestamp_ns": 23152464662025
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152464658385,
        "end_timestamp_ns": 23152464659916
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152464658107,
        "end_timestamp_ns": 23152464659575
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152464657911,
        "end_timestamp_ns": 23152464659315
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152464654446,
        "end_timestamp_ns": 23152464656661
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152464654443,
        "end_timestamp_ns": 23152464656635
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152464654441,
        "end_timestamp_ns": 23152464656636
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152464646497,
        "end_timestamp_ns": 23152464652506
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152464586804,
        "end_timestamp_ns": 23152464588119
      },
      {
        "id": "futex",
        "stack_id": 14359,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152464526185,
        "end_timestamp_ns": 23152464585384
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152464575674,
        "end_timestamp_ns": 23152464577395
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152464523211,
        "end_timestamp_ns": 23152464574445
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152464566811,
        "end_timestamp_ns": 23152464568827
      },
      {
        "id": "futex",
        "stack_id": 5914,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152464523091,
        "end_timestamp_ns": 23152464565384
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152464533703,
        "end_timestamp_ns": 23152464535088
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152464522868,
        "end_timestamp_ns": 23152464532913
      },
      {
        "id": "futex",
        "stack_id": 14359,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152464520227,
        "end_timestamp_ns": 23152464525230
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152464517959,
        "end_timestamp_ns": 23152464522536
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152464521137,
        "end_timestamp_ns": 23152464522047
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152464520279,
        "end_timestamp_ns": 23152464521160
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152464518415,
        "end_timestamp_ns": 23152464520060
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152464518082,
        "end_timestamp_ns": 23152464519089
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152464517918,
        "end_timestamp_ns": 23152464519037
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152464500118,
        "end_timestamp_ns": 23152464501383
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152464499693,
        "end_timestamp_ns": 23152464501402
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152464495797,
        "end_timestamp_ns": 23152464501377
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152464495787,
        "end_timestamp_ns": 23152464498707
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152464495372,
        "end_timestamp_ns": 23152464498685
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152463212973,
        "end_timestamp_ns": 23152463214489
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152462653120,
        "end_timestamp_ns": 23152462657937
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152462273912,
        "end_timestamp_ns": 23152462275085
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152462241920,
        "end_timestamp_ns": 23152462243608
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152461016942,
        "end_timestamp_ns": 23152461019306
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152461017112,
        "end_timestamp_ns": 23152461019304
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152461016747,
        "end_timestamp_ns": 23152461017739
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152461014748,
        "end_timestamp_ns": 23152461016043
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152461006084,
        "end_timestamp_ns": 23152461011871
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152460510255,
        "end_timestamp_ns": 23152460511242
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152460508429,
        "end_timestamp_ns": 23152460509510
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152460505946,
        "end_timestamp_ns": 23152460508478
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152460506002,
        "end_timestamp_ns": 23152460507687
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152459898182,
        "end_timestamp_ns": 23152459900377
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152459201575,
        "end_timestamp_ns": 23152459204302
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152459202911,
        "end_timestamp_ns": 23152459204279
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152459199679,
        "end_timestamp_ns": 23152459201747
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152459199687,
        "end_timestamp_ns": 23152459201750
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152459191865,
        "end_timestamp_ns": 23152459197507
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152458805683,
        "end_timestamp_ns": 23152458807734
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152458805682,
        "end_timestamp_ns": 23152458807730
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152458802277,
        "end_timestamp_ns": 23152458804796
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152458352480,
        "end_timestamp_ns": 23152458354872
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152458351713,
        "end_timestamp_ns": 23152458354620
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152458055184,
        "end_timestamp_ns": 23152458056219
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152458054848,
        "end_timestamp_ns": 23152458056143
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152458052411,
        "end_timestamp_ns": 23152458054397
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152458051593,
        "end_timestamp_ns": 23152458053679
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152458051595,
        "end_timestamp_ns": 23152458053680
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152457393517,
        "end_timestamp_ns": 23152457394857
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152457390299,
        "end_timestamp_ns": 23152457392443
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152457390297,
        "end_timestamp_ns": 23152457392441
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152457389103,
        "end_timestamp_ns": 23152457392160
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152457380014,
        "end_timestamp_ns": 23152457386015
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152457170448,
        "end_timestamp_ns": 23152457172663
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152456390363,
        "end_timestamp_ns": 23152456392669
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152456389067,
        "end_timestamp_ns": 23152456390319
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152456282323,
        "end_timestamp_ns": 23152456283450
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152456281681,
        "end_timestamp_ns": 23152456283009
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152456279340,
        "end_timestamp_ns": 23152456281566
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152456278396,
        "end_timestamp_ns": 23152456280618
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152456278446,
        "end_timestamp_ns": 23152456280609
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152455595500,
        "end_timestamp_ns": 23152455597329
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152455560274,
        "end_timestamp_ns": 23152455561432
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152455558101,
        "end_timestamp_ns": 23152455559430
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152455558290,
        "end_timestamp_ns": 23152455559286
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152455556542,
        "end_timestamp_ns": 23152455557547
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152455555817,
        "end_timestamp_ns": 23152455557209
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152455554675,
        "end_timestamp_ns": 23152455555795
      },
      {
        "id": "sched_yield",
        "stack_id": 11427,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152455553390,
        "end_timestamp_ns": 23152455555179
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152455552729,
        "end_timestamp_ns": 23152455554963
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152455551559,
        "end_timestamp_ns": 23152455553865
      },
      {
        "id": "sched_yield",
        "stack_id": 11427,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152455550634,
        "end_timestamp_ns": 23152455552553
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152455542963,
        "end_timestamp_ns": 23152455550806
      },
      {
        "id": "sched_yield",
        "stack_id": 11427,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152455546706,
        "end_timestamp_ns": 23152455549516
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152455297401,
        "end_timestamp_ns": 23152455301328
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152455295241,
        "end_timestamp_ns": 23152455296166
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152455287191,
        "end_timestamp_ns": 23152455293884
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152455290274,
        "end_timestamp_ns": 23152455291971
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152455285087,
        "end_timestamp_ns": 23152455289258
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152455254501,
        "end_timestamp_ns": 23152455285457
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152455282787,
        "end_timestamp_ns": 23152455283882
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152455280555,
        "end_timestamp_ns": 23152455282151
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152455280020,
        "end_timestamp_ns": 23152455281568
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152455274510,
        "end_timestamp_ns": 23152455279338
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152455254511,
        "end_timestamp_ns": 23152455278438
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152455269252,
        "end_timestamp_ns": 23152455273304
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152455253203,
        "end_timestamp_ns": 23152455267573
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152455262085,
        "end_timestamp_ns": 23152455264245
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152455252775,
        "end_timestamp_ns": 23152455260856
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152455250207,
        "end_timestamp_ns": 23152455251165
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152455247168,
        "end_timestamp_ns": 23152455249325
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152455247062,
        "end_timestamp_ns": 23152455248878
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152454949273,
        "end_timestamp_ns": 23152454951715
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152454948945,
        "end_timestamp_ns": 23152454950647
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152453700846,
        "end_timestamp_ns": 23152453702350
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152453691914,
        "end_timestamp_ns": 23152453696266
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152452052613,
        "end_timestamp_ns": 23152452054880
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152452052611,
        "end_timestamp_ns": 23152452054813
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152452052178,
        "end_timestamp_ns": 23152452053824
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152452043733,
        "end_timestamp_ns": 23152452048441
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152451812854,
        "end_timestamp_ns": 23152451815034
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152451811498,
        "end_timestamp_ns": 23152451812804
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152451179734,
        "end_timestamp_ns": 23152451180719
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152451177147,
        "end_timestamp_ns": 23152451179374
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152451177834,
        "end_timestamp_ns": 23152451179056
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152451084364,
        "end_timestamp_ns": 23152451085655
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152451083188,
        "end_timestamp_ns": 23152451084671
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152451081248,
        "end_timestamp_ns": 23152451083333
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152451081247,
        "end_timestamp_ns": 23152451083332
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152450317659,
        "end_timestamp_ns": 23152450319726
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152450317658,
        "end_timestamp_ns": 23152450319702
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152450315790,
        "end_timestamp_ns": 23152450317090
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152450306891,
        "end_timestamp_ns": 23152450311118
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152449880591,
        "end_timestamp_ns": 23152449881596
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152449877345,
        "end_timestamp_ns": 23152449879797
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152449878385,
        "end_timestamp_ns": 23152449879808
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152449359856,
        "end_timestamp_ns": 23152449362188
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152449358624,
        "end_timestamp_ns": 23152449360806
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152448542737,
        "end_timestamp_ns": 23152448544932
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152448542835,
        "end_timestamp_ns": 23152448544934
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152448540764,
        "end_timestamp_ns": 23152448542436
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152448532460,
        "end_timestamp_ns": 23152448536979
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152446745021,
        "end_timestamp_ns": 23152446746403
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152446743377,
        "end_timestamp_ns": 23152446745640
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152446741473,
        "end_timestamp_ns": 23152446744301
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152446741743,
        "end_timestamp_ns": 23152446743812
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152446733061,
        "end_timestamp_ns": 23152446739090
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152446336651,
        "end_timestamp_ns": 23152446337845
      },
      {
        "id": "futex",
        "stack_id": 14359,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152446276807,
        "end_timestamp_ns": 23152446335479
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152446327125,
        "end_timestamp_ns": 23152446329362
      },
      {
        "id": "futex",
        "stack_id": 11088,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152446275872,
        "end_timestamp_ns": 23152446325646
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152446318392,
        "end_timestamp_ns": 23152446322437
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152446315186,
        "end_timestamp_ns": 23152446317176
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152446275613,
        "end_timestamp_ns": 23152446313088
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152446284769,
        "end_timestamp_ns": 23152446307489
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152446274475,
        "end_timestamp_ns": 23152446283776
      },
      {
        "id": "futex",
        "stack_id": 14359,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152446271633,
        "end_timestamp_ns": 23152446276129
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152446273813,
        "end_timestamp_ns": 23152446274815
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152446273852,
        "end_timestamp_ns": 23152446274741
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152446271803,
        "end_timestamp_ns": 23152446273013
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152446271646,
        "end_timestamp_ns": 23152446272974
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152446271595,
        "end_timestamp_ns": 23152446272700
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152446264928,
        "end_timestamp_ns": 23152446265846
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152446264235,
        "end_timestamp_ns": 23152446265178
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152446262632,
        "end_timestamp_ns": 23152446264464
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152446262412,
        "end_timestamp_ns": 23152446264105
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152446261545,
        "end_timestamp_ns": 23152446263249
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152446261150,
        "end_timestamp_ns": 23152446263142
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152444891991,
        "end_timestamp_ns": 23152444894373
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152444891989,
        "end_timestamp_ns": 23152444894374
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152444891711,
        "end_timestamp_ns": 23152444893775
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152444883345,
        "end_timestamp_ns": 23152444888942
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152443862633,
        "end_timestamp_ns": 23152443864865
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152443209338,
        "end_timestamp_ns": 23152443210982
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152443209412,
        "end_timestamp_ns": 23152443210757
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152443205132,
        "end_timestamp_ns": 23152443208314
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152443206939,
        "end_timestamp_ns": 23152443208318
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152443206909,
        "end_timestamp_ns": 23152443208308
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152443203590,
        "end_timestamp_ns": 23152443205758
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152443203612,
        "end_timestamp_ns": 23152443205795
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152443195987,
        "end_timestamp_ns": 23152443201767
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152443139645,
        "end_timestamp_ns": 23152443142325
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152442266993,
        "end_timestamp_ns": 23152442269235
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152442267758,
        "end_timestamp_ns": 23152442269151
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152442264676,
        "end_timestamp_ns": 23152442266692
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152442264617,
        "end_timestamp_ns": 23152442266716
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152441820453,
        "end_timestamp_ns": 23152441821869
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152441817246,
        "end_timestamp_ns": 23152441819556
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152441817028,
        "end_timestamp_ns": 23152441819256
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152441353611,
        "end_timestamp_ns": 23152441354960
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152441350414,
        "end_timestamp_ns": 23152441352472
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152441350416,
        "end_timestamp_ns": 23152441352471
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152441348926,
        "end_timestamp_ns": 23152441351744
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152441340120,
        "end_timestamp_ns": 23152441345930
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152440560260,
        "end_timestamp_ns": 23152440562063
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152440559628,
        "end_timestamp_ns": 23152440562088
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152440559422,
        "end_timestamp_ns": 23152440561630
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152439876088,
        "end_timestamp_ns": 23152439878187
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152439614619,
        "end_timestamp_ns": 23152439616519
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152439614717,
        "end_timestamp_ns": 23152439615717
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152439613371,
        "end_timestamp_ns": 23152439615422
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152439612517,
        "end_timestamp_ns": 23152439614007
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152439604662,
        "end_timestamp_ns": 23152439610700
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152439175830,
        "end_timestamp_ns": 23152439177204
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152439172713,
        "end_timestamp_ns": 23152439174768
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152439172680,
        "end_timestamp_ns": 23152439174745
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152439160510,
        "end_timestamp_ns": 23152439162603
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152439159957,
        "end_timestamp_ns": 23152439162073
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152438834571,
        "end_timestamp_ns": 23152438836576
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152437776570,
        "end_timestamp_ns": 23152437778026
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152437775806,
        "end_timestamp_ns": 23152437777124
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152437775279,
        "end_timestamp_ns": 23152437776344
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152437773183,
        "end_timestamp_ns": 23152437775737
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152437772560,
        "end_timestamp_ns": 23152437774949
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152437772543,
        "end_timestamp_ns": 23152437774567
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152437763949,
        "end_timestamp_ns": 23152437770678
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152437362764,
        "end_timestamp_ns": 23152437364002
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152437301071,
        "end_timestamp_ns": 23152437361401
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152437354331,
        "end_timestamp_ns": 23152437358955
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152437351350,
        "end_timestamp_ns": 23152437353168
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152437300697,
        "end_timestamp_ns": 23152437349156
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152437341533,
        "end_timestamp_ns": 23152437343263
      },
      {
        "id": "futex",
        "stack_id": 14359,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152437300357,
        "end_timestamp_ns": 23152437340347
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152437309748,
        "end_timestamp_ns": 23152437311365
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152437299983,
        "end_timestamp_ns": 23152437308798
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152437299146,
        "end_timestamp_ns": 23152437300096
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152437298804,
        "end_timestamp_ns": 23152437299858
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152437298627,
        "end_timestamp_ns": 23152437299601
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152437295831,
        "end_timestamp_ns": 23152437297845
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152437295766,
        "end_timestamp_ns": 23152437297818
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152437295701,
        "end_timestamp_ns": 23152437297776
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152437295645,
        "end_timestamp_ns": 23152437297711
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152436402546,
        "end_timestamp_ns": 23152436403900
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152436402518,
        "end_timestamp_ns": 23152436403865
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152436399464,
        "end_timestamp_ns": 23152436401869
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152436399425,
        "end_timestamp_ns": 23152436401376
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152436399420,
        "end_timestamp_ns": 23152436401377
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152436169423,
        "end_timestamp_ns": 23152436170696
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152436168450,
        "end_timestamp_ns": 23152436169442
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152436166913,
        "end_timestamp_ns": 23152436168288
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152436166912,
        "end_timestamp_ns": 23152436168286
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152436166659,
        "end_timestamp_ns": 23152436167748
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152436163990,
        "end_timestamp_ns": 23152436165879
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152436163335,
        "end_timestamp_ns": 23152436165707
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152436163470,
        "end_timestamp_ns": 23152436165716
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152436155878,
        "end_timestamp_ns": 23152436162930
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152435351202,
        "end_timestamp_ns": 23152435353176
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152435135593,
        "end_timestamp_ns": 23152435136974
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152435132413,
        "end_timestamp_ns": 23152435135250
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152435132378,
        "end_timestamp_ns": 23152435134715
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152434229334,
        "end_timestamp_ns": 23152434234499
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152433505841,
        "end_timestamp_ns": 23152433507182
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152433066502,
        "end_timestamp_ns": 23152433067850
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152432508975,
        "end_timestamp_ns": 23152432510482
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152432506895,
        "end_timestamp_ns": 23152432507911
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152432505700,
        "end_timestamp_ns": 23152432507785
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152432505699,
        "end_timestamp_ns": 23152432507783
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152432505172,
        "end_timestamp_ns": 23152432506223
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152432502917,
        "end_timestamp_ns": 23152432504469
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152432495478,
        "end_timestamp_ns": 23152432501484
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152431779688,
        "end_timestamp_ns": 23152431781886
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152431778609,
        "end_timestamp_ns": 23152431780044
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152430637973,
        "end_timestamp_ns": 23152430639009
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152430636405,
        "end_timestamp_ns": 23152430638649
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152430635883,
        "end_timestamp_ns": 23152430638304
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152430635804,
        "end_timestamp_ns": 23152430637307
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152430626539,
        "end_timestamp_ns": 23152430632882
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152430110996,
        "end_timestamp_ns": 23152430112371
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152430108953,
        "end_timestamp_ns": 23152430111056
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152430107895,
        "end_timestamp_ns": 23152430109948
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152430107894,
        "end_timestamp_ns": 23152430109949
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152429174301,
        "end_timestamp_ns": 23152429176323
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152428938339,
        "end_timestamp_ns": 23152428939677
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152428938300,
        "end_timestamp_ns": 23152428939691
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152428934957,
        "end_timestamp_ns": 23152428937148
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152428935089,
        "end_timestamp_ns": 23152428937096
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152428935091,
        "end_timestamp_ns": 23152428937098
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152428927052,
        "end_timestamp_ns": 23152428932248
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152428306792,
        "end_timestamp_ns": 23152428307832
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152428306464,
        "end_timestamp_ns": 23152428307792
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152428304296,
        "end_timestamp_ns": 23152428306056
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152428303274,
        "end_timestamp_ns": 23152428305437
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152428303302,
        "end_timestamp_ns": 23152428305403
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152428140210,
        "end_timestamp_ns": 23152428141264
      },
      {
        "id": "futex",
        "stack_id": 14359,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152428102129,
        "end_timestamp_ns": 23152428139044
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152428131605,
        "end_timestamp_ns": 23152428133595
      },
      {
        "id": "futex",
        "stack_id": 2159,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152428101116,
        "end_timestamp_ns": 23152428130326
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152428123271,
        "end_timestamp_ns": 23152428127422
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152428120112,
        "end_timestamp_ns": 23152428122194
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152428100819,
        "end_timestamp_ns": 23152428117666
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152428111204,
        "end_timestamp_ns": 23152428113094
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152428099865,
        "end_timestamp_ns": 23152428110316
      },
      {
        "id": "futex",
        "stack_id": 14359,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152428096646,
        "end_timestamp_ns": 23152428101474
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152428099179,
        "end_timestamp_ns": 23152428100122
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152428098924,
        "end_timestamp_ns": 23152428099982
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152428096752,
        "end_timestamp_ns": 23152428098366
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152428096585,
        "end_timestamp_ns": 23152428097973
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152428096484,
        "end_timestamp_ns": 23152428097969
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152428091030,
        "end_timestamp_ns": 23152428092004
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152428089566,
        "end_timestamp_ns": 23152428090426
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152428087953,
        "end_timestamp_ns": 23152428089663
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152428087913,
        "end_timestamp_ns": 23152428089669
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152428086780,
        "end_timestamp_ns": 23152428088795
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152428086138,
        "end_timestamp_ns": 23152428088545
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152427145240,
        "end_timestamp_ns": 23152427147200
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152427143505,
        "end_timestamp_ns": 23152427144718
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152427111908,
        "end_timestamp_ns": 23152427113268
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152427108806,
        "end_timestamp_ns": 23152427110841
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152427108843,
        "end_timestamp_ns": 23152427110843
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152427107991,
        "end_timestamp_ns": 23152427109013
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152427105935,
        "end_timestamp_ns": 23152427107299
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152427098393,
        "end_timestamp_ns": 23152427104087
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152426537781,
        "end_timestamp_ns": 23152426539413
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152425395867,
        "end_timestamp_ns": 23152425397127
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152425395272,
        "end_timestamp_ns": 23152425396503
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152425395207,
        "end_timestamp_ns": 23152425396177
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152425393768,
        "end_timestamp_ns": 23152425395111
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152425393589,
        "end_timestamp_ns": 23152425394564
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152425393162,
        "end_timestamp_ns": 23152425394454
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152425391906,
        "end_timestamp_ns": 23152425392907
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152425390486,
        "end_timestamp_ns": 23152425392671
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152425390530,
        "end_timestamp_ns": 23152425392266
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152425390035,
        "end_timestamp_ns": 23152425391226
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152425381855,
        "end_timestamp_ns": 23152425388473
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152425333951,
        "end_timestamp_ns": 23152425336051
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152425333540,
        "end_timestamp_ns": 23152425334817
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152424931360,
        "end_timestamp_ns": 23152424932707
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152424930670,
        "end_timestamp_ns": 23152424931668
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152424927998,
        "end_timestamp_ns": 23152424930252
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152424927999,
        "end_timestamp_ns": 23152424930214
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152424928630,
        "end_timestamp_ns": 23152424929993
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152424162707,
        "end_timestamp_ns": 23152424164746
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152424161338,
        "end_timestamp_ns": 23152424162868
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152423697108,
        "end_timestamp_ns": 23152423698389
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152423697317,
        "end_timestamp_ns": 23152423698318
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152423697051,
        "end_timestamp_ns": 23152423698303
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152423695671,
        "end_timestamp_ns": 23152423696672
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152423694732,
        "end_timestamp_ns": 23152423696207
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152423695054,
        "end_timestamp_ns": 23152423696139
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152423694024,
        "end_timestamp_ns": 23152423695026
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152423693013,
        "end_timestamp_ns": 23152423694215
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152423692584,
        "end_timestamp_ns": 23152423693906
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152423692325,
        "end_timestamp_ns": 23152423693345
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152423690172,
        "end_timestamp_ns": 23152423692110
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152423681358,
        "end_timestamp_ns": 23152423691912
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152423690638,
        "end_timestamp_ns": 23152423691675
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152423688810,
        "end_timestamp_ns": 23152423691177
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152423688313,
        "end_timestamp_ns": 23152423689810
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152423450560,
        "end_timestamp_ns": 23152423453811
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152423448742,
        "end_timestamp_ns": 23152423450313
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152423262834,
        "end_timestamp_ns": 23152423265170
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152423262823,
        "end_timestamp_ns": 23152423265172
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152423260935,
        "end_timestamp_ns": 23152423262977
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152422239094,
        "end_timestamp_ns": 23152422241128
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152422237926,
        "end_timestamp_ns": 23152422239580
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152421976745,
        "end_timestamp_ns": 23152421978228
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152421973605,
        "end_timestamp_ns": 23152421976217
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152421973648,
        "end_timestamp_ns": 23152421975552
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152421973108,
        "end_timestamp_ns": 23152421975503
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152421962819,
        "end_timestamp_ns": 23152421970152
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152421523186,
        "end_timestamp_ns": 23152421525358
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152420365235,
        "end_timestamp_ns": 23152420367854
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420366280,
        "end_timestamp_ns": 23152420367528
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420365213,
        "end_timestamp_ns": 23152420366492
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420363926,
        "end_timestamp_ns": 23152420365510
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420363101,
        "end_timestamp_ns": 23152420364402
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420360931,
        "end_timestamp_ns": 23152420363008
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420360636,
        "end_timestamp_ns": 23152420362269
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420287768,
        "end_timestamp_ns": 23152420289064
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420286493,
        "end_timestamp_ns": 23152420287884
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152420286453,
        "end_timestamp_ns": 23152420287814
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420285695,
        "end_timestamp_ns": 23152420286976
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420284017,
        "end_timestamp_ns": 23152420285412
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152420283980,
        "end_timestamp_ns": 23152420285327
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420283573,
        "end_timestamp_ns": 23152420284898
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420281442,
        "end_timestamp_ns": 23152420282852
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152420281488,
        "end_timestamp_ns": 23152420282838
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420281492,
        "end_timestamp_ns": 23152420282791
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420279007,
        "end_timestamp_ns": 23152420280658
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152420278774,
        "end_timestamp_ns": 23152420280332
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420278359,
        "end_timestamp_ns": 23152420280291
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152420229516,
        "end_timestamp_ns": 23152420230892
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420229296,
        "end_timestamp_ns": 23152420230580
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420228085,
        "end_timestamp_ns": 23152420229377
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152420227352,
        "end_timestamp_ns": 23152420228730
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420226995,
        "end_timestamp_ns": 23152420228508
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420226011,
        "end_timestamp_ns": 23152420227296
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152420225256,
        "end_timestamp_ns": 23152420226560
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420224618,
        "end_timestamp_ns": 23152420225921
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420223906,
        "end_timestamp_ns": 23152420225187
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152420223052,
        "end_timestamp_ns": 23152420224434
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420222213,
        "end_timestamp_ns": 23152420223768
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420221826,
        "end_timestamp_ns": 23152420223122
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152420220695,
        "end_timestamp_ns": 23152420222100
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420219709,
        "end_timestamp_ns": 23152420221093
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420219737,
        "end_timestamp_ns": 23152420221019
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152420218301,
        "end_timestamp_ns": 23152420219862
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420217515,
        "end_timestamp_ns": 23152420218835
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420216701,
        "end_timestamp_ns": 23152420218771
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152420214359,
        "end_timestamp_ns": 23152420217300
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420214531,
        "end_timestamp_ns": 23152420216681
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152420180366,
        "end_timestamp_ns": 23152420182608
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152420180368,
        "end_timestamp_ns": 23152420182600
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152420169165,
        "end_timestamp_ns": 23152420176083
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152419692813,
        "end_timestamp_ns": 23152419695254
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152419692810,
        "end_timestamp_ns": 23152419695256
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152419693072,
        "end_timestamp_ns": 23152419695195
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152419281606,
        "end_timestamp_ns": 23152419285613
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152419279397,
        "end_timestamp_ns": 23152419280486
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152419270098,
        "end_timestamp_ns": 23152419277862
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152419271645,
        "end_timestamp_ns": 23152419273398
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152419266830,
        "end_timestamp_ns": 23152419270771
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152419256025,
        "end_timestamp_ns": 23152419269030
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152419264290,
        "end_timestamp_ns": 23152419265750
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152419237884,
        "end_timestamp_ns": 23152419262779
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152419257987,
        "end_timestamp_ns": 23152419259381
      },
      {
        "id": "write",
        "stack_id": 1524,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152419253884,
        "end_timestamp_ns": 23152419257119
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152419233127,
        "end_timestamp_ns": 23152419254558
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152419247039,
        "end_timestamp_ns": 23152419249015
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152419233074,
        "end_timestamp_ns": 23152419245695
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152419240600,
        "end_timestamp_ns": 23152419242752
      },
      {
        "id": "write",
        "stack_id": 10284,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152419231617,
        "end_timestamp_ns": 23152419239653
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152419230052,
        "end_timestamp_ns": 23152419232019
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152419229964,
        "end_timestamp_ns": 23152419231977
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152418337985,
        "end_timestamp_ns": 23152418339545
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152418337788,
        "end_timestamp_ns": 23152418339217
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152418334373,
        "end_timestamp_ns": 23152418336650
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152418334150,
        "end_timestamp_ns": 23152418336624
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152418334374,
        "end_timestamp_ns": 23152418336651
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152418324390,
        "end_timestamp_ns": 23152418331408
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152417463965,
        "end_timestamp_ns": 23152417466371
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152416378101,
        "end_timestamp_ns": 23152416379505
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152416378103,
        "end_timestamp_ns": 23152416379476
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152416374444,
        "end_timestamp_ns": 23152416376982
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152416374914,
        "end_timestamp_ns": 23152416376919
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152416374904,
        "end_timestamp_ns": 23152416376894
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152416364159,
        "end_timestamp_ns": 23152416371471
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152416017298,
        "end_timestamp_ns": 23152416018724
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152416015352,
        "end_timestamp_ns": 23152416016713
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152416015300,
        "end_timestamp_ns": 23152416016669
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152416013572,
        "end_timestamp_ns": 23152416016328
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152416012861,
        "end_timestamp_ns": 23152416014247
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152416012825,
        "end_timestamp_ns": 23152416014194
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152416010134,
        "end_timestamp_ns": 23152416011568
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152416010099,
        "end_timestamp_ns": 23152416011532
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152416006801,
        "end_timestamp_ns": 23152416008967
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152416006693,
        "end_timestamp_ns": 23152416008933
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152415437122,
        "end_timestamp_ns": 23152415439176
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152415435499,
        "end_timestamp_ns": 23152415437605
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152414580401,
        "end_timestamp_ns": 23152414582483
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152414559659,
        "end_timestamp_ns": 23152414560872
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152414559270,
        "end_timestamp_ns": 23152414560603
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152414558892,
        "end_timestamp_ns": 23152414559896
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152414557380,
        "end_timestamp_ns": 23152414558692
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152414557138,
        "end_timestamp_ns": 23152414558507
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152414557163,
        "end_timestamp_ns": 23152414558166
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152414555058,
        "end_timestamp_ns": 23152414556489
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152414555413,
        "end_timestamp_ns": 23152414556435
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152414554723,
        "end_timestamp_ns": 23152414556304
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152414553650,
        "end_timestamp_ns": 23152414554672
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152414551914,
        "end_timestamp_ns": 23152414554155
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152414551785,
        "end_timestamp_ns": 23152414553830
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152414551330,
        "end_timestamp_ns": 23152414552862
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152414542661,
        "end_timestamp_ns": 23152414549935
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152414312891,
        "end_timestamp_ns": 23152414314441
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152414310473,
        "end_timestamp_ns": 23152414313038
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152414309270,
        "end_timestamp_ns": 23152414311750
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152414309268,
        "end_timestamp_ns": 23152414311752
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152412735657,
        "end_timestamp_ns": 23152412737918
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152412726526,
        "end_timestamp_ns": 23152412731962
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152412597882,
        "end_timestamp_ns": 23152412600409
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152411436542,
        "end_timestamp_ns": 23152411438731
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152411435234,
        "end_timestamp_ns": 23152411436606
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152411093543,
        "end_timestamp_ns": 23152411095416
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152411092927,
        "end_timestamp_ns": 23152411095425
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152411092239,
        "end_timestamp_ns": 23152411094659
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152411083969,
        "end_timestamp_ns": 23152411089697
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152410323316,
        "end_timestamp_ns": 23152410325586
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152409923261,
        "end_timestamp_ns": 23152409924197
      },
      {
        "id": "futex",
        "stack_id": 14359,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152409865664,
        "end_timestamp_ns": 23152409922028
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152409915366,
        "end_timestamp_ns": 23152409917240
      },
      {
        "id": "futex",
        "stack_id": 11088,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152409865034,
        "end_timestamp_ns": 23152409913599
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152409906640,
        "end_timestamp_ns": 23152409911013
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152409903441,
        "end_timestamp_ns": 23152409905264
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152409864847,
        "end_timestamp_ns": 23152409901684
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152409873192,
        "end_timestamp_ns": 23152409875074
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152409863963,
        "end_timestamp_ns": 23152409872282
      },
      {
        "id": "futex",
        "stack_id": 14359,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152409860630,
        "end_timestamp_ns": 23152409865028
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152409862965,
        "end_timestamp_ns": 23152409863951
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152409862909,
        "end_timestamp_ns": 23152409863887
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152409861159,
        "end_timestamp_ns": 23152409862822
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152409860774,
        "end_timestamp_ns": 23152409861875
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152409860772,
        "end_timestamp_ns": 23152409861784
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152409855726,
        "end_timestamp_ns": 23152409856748
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152409855482,
        "end_timestamp_ns": 23152409856385
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152409852362,
        "end_timestamp_ns": 23152409854548
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152409852561,
        "end_timestamp_ns": 23152409854529
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152409852559,
        "end_timestamp_ns": 23152409854486
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152409255447,
        "end_timestamp_ns": 23152409256754
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152409254754,
        "end_timestamp_ns": 23152409256065
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152409254182,
        "end_timestamp_ns": 23152409255191
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152409252459,
        "end_timestamp_ns": 23152409254626
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152409251913,
        "end_timestamp_ns": 23152409253990
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152409251996,
        "end_timestamp_ns": 23152409253511
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152409243114,
        "end_timestamp_ns": 23152409249234
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152408021484,
        "end_timestamp_ns": 23152408022953
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152408021963,
        "end_timestamp_ns": 23152408022976
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152408020098,
        "end_timestamp_ns": 23152408021418
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152408020114,
        "end_timestamp_ns": 23152408021280
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152408018006,
        "end_timestamp_ns": 23152408020644
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152408018294,
        "end_timestamp_ns": 23152408019317
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152408017880,
        "end_timestamp_ns": 23152408019271
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152408015878,
        "end_timestamp_ns": 23152408017571
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152408014938,
        "end_timestamp_ns": 23152408017030
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152407528103,
        "end_timestamp_ns": 23152407529474
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152407525326,
        "end_timestamp_ns": 23152407527076
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152407525328,
        "end_timestamp_ns": 23152407527078
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152407524727,
        "end_timestamp_ns": 23152407526536
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152407389309,
        "end_timestamp_ns": 23152407390692
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152407389427,
        "end_timestamp_ns": 23152407390409
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152407386965,
        "end_timestamp_ns": 23152407389574
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152407387664,
        "end_timestamp_ns": 23152407388665
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152407386144,
        "end_timestamp_ns": 23152407388514
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152407385498,
        "end_timestamp_ns": 23152407386972
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152407376979,
        "end_timestamp_ns": 23152407383030
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152406236112,
        "end_timestamp_ns": 23152406237416
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152405595127,
        "end_timestamp_ns": 23152405596435
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152405592328,
        "end_timestamp_ns": 23152405594010
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152405592326,
        "end_timestamp_ns": 23152405594009
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152405590551,
        "end_timestamp_ns": 23152405591923
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152405557998,
        "end_timestamp_ns": 23152405559222
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152405557418,
        "end_timestamp_ns": 23152405558765
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152405557089,
        "end_timestamp_ns": 23152405558072
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152405555405,
        "end_timestamp_ns": 23152405556856
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152405555273,
        "end_timestamp_ns": 23152405556665
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152405555428,
        "end_timestamp_ns": 23152405556416
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152405553748,
        "end_timestamp_ns": 23152405554745
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152405551982,
        "end_timestamp_ns": 23152405554489
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152405552228,
        "end_timestamp_ns": 23152405554363
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152405551375,
        "end_timestamp_ns": 23152405553050
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152405542944,
        "end_timestamp_ns": 23152405551363
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152404348017,
        "end_timestamp_ns": 23152404350585
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152404345191,
        "end_timestamp_ns": 23152404346831
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152404085896,
        "end_timestamp_ns": 23152404087154
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152404083451,
        "end_timestamp_ns": 23152404084859
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152404083483,
        "end_timestamp_ns": 23152404084869
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152404083204,
        "end_timestamp_ns": 23152404084213
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152404081502,
        "end_timestamp_ns": 23152404082514
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152404080238,
        "end_timestamp_ns": 23152404082354
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152404080200,
        "end_timestamp_ns": 23152404082308
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152404079776,
        "end_timestamp_ns": 23152404080805
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152404077368,
        "end_timestamp_ns": 23152404079017
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152404051888,
        "end_timestamp_ns": 23152404078371
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152403785444,
        "end_timestamp_ns": 23152403788072
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152403784093,
        "end_timestamp_ns": 23152403787585
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152403101840,
        "end_timestamp_ns": 23152403104142
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152402386587,
        "end_timestamp_ns": 23152402388828
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152402383969,
        "end_timestamp_ns": 23152402385270
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152402218508,
        "end_timestamp_ns": 23152402219816
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152402215597,
        "end_timestamp_ns": 23152402217401
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152402215595,
        "end_timestamp_ns": 23152402217403
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152402215438,
        "end_timestamp_ns": 23152402217170
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152402205656,
        "end_timestamp_ns": 23152402213256
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152402015899,
        "end_timestamp_ns": 23152402017235
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152402014258,
        "end_timestamp_ns": 23152402016752
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152402012792,
        "end_timestamp_ns": 23152402014884
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152402012790,
        "end_timestamp_ns": 23152402014886
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152401019902,
        "end_timestamp_ns": 23152401021257
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152401017450,
        "end_timestamp_ns": 23152401018796
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152401017396,
        "end_timestamp_ns": 23152401018780
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152401017051,
        "end_timestamp_ns": 23152401018273
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152401014848,
        "end_timestamp_ns": 23152401016273
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152401014797,
        "end_timestamp_ns": 23152401016237
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152401014996,
        "end_timestamp_ns": 23152401016138
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152401012644,
        "end_timestamp_ns": 23152401013927
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152401010923,
        "end_timestamp_ns": 23152401013629
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152401010932,
        "end_timestamp_ns": 23152401013579
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152401009219,
        "end_timestamp_ns": 23152401011698
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152400714018,
        "end_timestamp_ns": 23152400715507
      },
      {
        "id": "futex",
        "stack_id": 11088,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152400584932,
        "end_timestamp_ns": 23152400712417
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152400673237,
        "end_timestamp_ns": 23152400710061
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152400668607,
        "end_timestamp_ns": 23152400671959
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152400579126,
        "end_timestamp_ns": 23152400666651
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152400618736,
        "end_timestamp_ns": 23152400637947
      },
      {
        "id": "futex",
        "stack_id": 14359,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152400576986,
        "end_timestamp_ns": 23152400617371
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152400585568,
        "end_timestamp_ns": 23152400587172
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152400575469,
        "end_timestamp_ns": 23152400584432
      },
      {
        "id": "futex",
        "stack_id": 11088,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152400571434,
        "end_timestamp_ns": 23152400583973
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152400571410,
        "end_timestamp_ns": 23152400578037
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152400571754,
        "end_timestamp_ns": 23152400575773
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152400572141,
        "end_timestamp_ns": 23152400574148
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152400569875,
        "end_timestamp_ns": 23152400571019
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152400569669,
        "end_timestamp_ns": 23152400570696
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152400569733,
        "end_timestamp_ns": 23152400570456
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152400564269,
        "end_timestamp_ns": 23152400565413
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152400563007,
        "end_timestamp_ns": 23152400563858
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152400560513,
        "end_timestamp_ns": 23152400562785
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152400560813,
        "end_timestamp_ns": 23152400562741
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152400560726,
        "end_timestamp_ns": 23152400562719
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152400560371,
        "end_timestamp_ns": 23152400562105
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152400156611,
        "end_timestamp_ns": 23152400159079
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152400156346,
        "end_timestamp_ns": 23152400157721
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152400155160,
        "end_timestamp_ns": 23152400156137
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152400153410,
        "end_timestamp_ns": 23152400155452
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152400153500,
        "end_timestamp_ns": 23152400154500
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152400151568,
        "end_timestamp_ns": 23152400152815
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152400144260,
        "end_timestamp_ns": 23152400151354
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152400118503,
        "end_timestamp_ns": 23152400120888
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152400117613,
        "end_timestamp_ns": 23152400120696
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152400117625,
        "end_timestamp_ns": 23152400120399
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152398264193,
        "end_timestamp_ns": 23152398266610
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152398263902,
        "end_timestamp_ns": 23152398265242
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152398030437,
        "end_timestamp_ns": 23152398031529
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152398028315,
        "end_timestamp_ns": 23152398030805
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152398029611,
        "end_timestamp_ns": 23152398030671
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152398027873,
        "end_timestamp_ns": 23152398029743
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152398027035,
        "end_timestamp_ns": 23152398028838
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152398019276,
        "end_timestamp_ns": 23152398026358
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152397859674,
        "end_timestamp_ns": 23152397861231
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152397833177,
        "end_timestamp_ns": 23152397858692
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152397833064,
        "end_timestamp_ns": 23152397858569
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152397831205,
        "end_timestamp_ns": 23152397857890
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152397812899,
        "end_timestamp_ns": 23152397814556
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152396666756,
        "end_timestamp_ns": 23152396668368
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152396663694,
        "end_timestamp_ns": 23152396665713
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152396663608,
        "end_timestamp_ns": 23152396665610
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152396662977,
        "end_timestamp_ns": 23152396665105
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152396621660,
        "end_timestamp_ns": 23152396622697
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152396619859,
        "end_timestamp_ns": 23152396620920
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152396617916,
        "end_timestamp_ns": 23152396620204
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152396617331,
        "end_timestamp_ns": 23152396619145
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152396350978,
        "end_timestamp_ns": 23152396352472
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152396347336,
        "end_timestamp_ns": 23152396349980
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152396347370,
        "end_timestamp_ns": 23152396349784
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152396345631,
        "end_timestamp_ns": 23152396348224
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152396337073,
        "end_timestamp_ns": 23152396343825
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152396028956,
        "end_timestamp_ns": 23152396030731
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152396027212,
        "end_timestamp_ns": 23152396030148
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152396025081,
        "end_timestamp_ns": 23152396027625
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152394716262,
        "end_timestamp_ns": 23152394718478
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152394717023,
        "end_timestamp_ns": 23152394718225
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152394716134,
        "end_timestamp_ns": 23152394717234
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152394713456,
        "end_timestamp_ns": 23152394716108
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152394713129,
        "end_timestamp_ns": 23152394715375
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152394705550,
        "end_timestamp_ns": 23152394712229
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152393871678,
        "end_timestamp_ns": 23152393872917
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152393871095,
        "end_timestamp_ns": 23152393872154
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152393868523,
        "end_timestamp_ns": 23152393870784
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152393868551,
        "end_timestamp_ns": 23152393870614
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152393868506,
        "end_timestamp_ns": 23152393870332
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152393195343,
        "end_timestamp_ns": 23152393197835
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152393195331,
        "end_timestamp_ns": 23152393197799
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152393195201,
        "end_timestamp_ns": 23152393197421
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152393186658,
        "end_timestamp_ns": 23152393192710
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152392050722,
        "end_timestamp_ns": 23152392055926
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152392043561,
        "end_timestamp_ns": 23152392048188
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152392041520,
        "end_timestamp_ns": 23152392042449
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152392025020,
        "end_timestamp_ns": 23152392039121
      },
      {
        "id": "write",
        "stack_id": 12251,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152392031366,
        "end_timestamp_ns": 23152392037018
      },
      {
        "id": "futex",
        "stack_id": 13509,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152392029879,
        "end_timestamp_ns": 23152392032136
      },
      {
        "id": "write",
        "stack_id": 15095,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152391994725,
        "end_timestamp_ns": 23152392028707
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152391982254,
        "end_timestamp_ns": 23152391983197
      },
      {
        "id": "futex",
        "stack_id": 15273,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152391979889,
        "end_timestamp_ns": 23152391981672
      },
      {
        "id": "futex",
        "stack_id": 1500,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152391979494,
        "end_timestamp_ns": 23152391981362
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152391606744,
        "end_timestamp_ns": 23152391607745
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152391605794,
        "end_timestamp_ns": 23152391606768
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152391605161,
        "end_timestamp_ns": 23152391606175
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152391605076,
        "end_timestamp_ns": 23152391606078
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152391604108,
        "end_timestamp_ns": 23152391605082
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152391603425,
        "end_timestamp_ns": 23152391604444
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152391603386,
        "end_timestamp_ns": 23152391604391
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152391602409,
        "end_timestamp_ns": 23152391603392
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152391601584,
        "end_timestamp_ns": 23152391602665
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152391601284,
        "end_timestamp_ns": 23152391602297
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152391600657,
        "end_timestamp_ns": 23152391601686
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152391598972,
        "end_timestamp_ns": 23152391600885
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152391599531,
        "end_timestamp_ns": 23152391600588
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152391598344,
        "end_timestamp_ns": 23152391599900
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152391589914,
        "end_timestamp_ns": 23152391599345
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152391597157,
        "end_timestamp_ns": 23152391598846
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152390160495,
        "end_timestamp_ns": 23152390164370
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152388838896,
        "end_timestamp_ns": 23152388840841
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152388837956,
        "end_timestamp_ns": 23152388840016
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152388837641,
        "end_timestamp_ns": 23152388839976
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152388828270,
        "end_timestamp_ns": 23152388834073
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152387460157,
        "end_timestamp_ns": 23152387462833
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152387461224,
        "end_timestamp_ns": 23152387462307
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152387461014,
        "end_timestamp_ns": 23152387462042
      },
      {
        "id": "sched_yield",
        "stack_id": 13571,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152387459042,
        "end_timestamp_ns": 23152387460518
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152387458851,
        "end_timestamp_ns": 23152387460266
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152387451579,
        "end_timestamp_ns": 23152387459319
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152387377199,
        "end_timestamp_ns": 23152387380512
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152387377590,
        "end_timestamp_ns": 23152387380100
      },
      {
        "id": "sched_yield",
        "stack_id": 10717,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152387376786,
        "end_timestamp_ns": 23152387379910
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152385689480,
        "end_timestamp_ns": 23152385691337
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152385688990,
        "end_timestamp_ns": 23152385690752
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152385688548,
        "end_timestamp_ns": 23152385689555
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152385686712,
        "end_timestamp_ns": 23152385687851
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152385684002,
        "end_timestamp_ns": 23152385685963
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152385631208,
        "end_timestamp_ns": 23152385632798
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152385629806,
        "end_timestamp_ns": 23152385631011
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152385627096,
        "end_timestamp_ns": 23152385630258
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152385626522,
        "end_timestamp_ns": 23152385628889
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152385616375,
        "end_timestamp_ns": 23152385625605
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152384343825,
        "end_timestamp_ns": 23152384345358
      },
      {
        "id": "read",
        "stack_id": 1095,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152384321734,
        "end_timestamp_ns": 23152384335041
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384317758,
        "end_timestamp_ns": 23152384318937
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384315805,
        "end_timestamp_ns": 23152384316940
      },
      {
        "id": "openat",
        "stack_id": 3269,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152384294355,
        "end_timestamp_ns": 23152384315556
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384313481,
        "end_timestamp_ns": 23152384314695
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384311355,
        "end_timestamp_ns": 23152384312609
      },
      {
        "id": "sched_yield",
        "stack_id": 11427,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152384308731,
        "end_timestamp_ns": 23152384312256
      },
      {
        "id": "sched_yield",
        "stack_id": 11427,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152384309198,
        "end_timestamp_ns": 23152384312135
      },
      {
        "id": "sched_yield",
        "stack_id": 16195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384307701,
        "end_timestamp_ns": 23152384310358
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152384295009,
        "end_timestamp_ns": 23152384303914
      },
      {
        "id": "gettid",
        "stack_id": 6819,
        "pid_tgid": 850236021081482,
        "start_timestamp_ns": 23152384288159,
        "end_timestamp_ns": 23152384289469
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152384282078,
        "end_timestamp_ns": 23152384286119
      },
      {
        "id": "gettid",
        "stack_id": 15785,
        "pid_tgid": 850236021081482,
        "start_timestamp_ns": 23152384281849,
        "end_timestamp_ns": 23152384283700
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152384276013,
        "end_timestamp_ns": 23152384281253
      },
      {
        "id": "clock_gettime",
        "stack_id": 12244,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152384274951,
        "end_timestamp_ns": 23152384276878
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152384237176,
        "end_timestamp_ns": 23152384275072
      },
      {
        "id": "clock_gettime",
        "stack_id": 13581,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152384272029,
        "end_timestamp_ns": 23152384274333
      },
      {
        "id": "futex",
        "stack_id": 10539,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152384272519,
        "end_timestamp_ns": 23152384273748
      },
      {
        "id": "futex",
        "stack_id": 11045,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152384188550,
        "end_timestamp_ns": 23152384270681
      },
      {
        "id": "futex",
        "stack_id": 10539,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152384269016,
        "end_timestamp_ns": 23152384270612
      },
      {
        "id": "clock_gettime",
        "stack_id": 1831,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152384268432,
        "end_timestamp_ns": 23152384270608
      },
      {
        "id": "clock_gettime",
        "stack_id": 6628,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384266110,
        "end_timestamp_ns": 23152384268499
      },
      {
        "id": "futex",
        "stack_id": 10539,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152384265213,
        "end_timestamp_ns": 23152384267090
      },
      {
        "id": "futex",
        "stack_id": 11045,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152384191818,
        "end_timestamp_ns": 23152384266958
      },
      {
        "id": "futex",
        "stack_id": 11045,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152384185327,
        "end_timestamp_ns": 23152384263590
      },
      {
        "id": "futex",
        "stack_id": 10114,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384233912,
        "end_timestamp_ns": 23152384238092
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152384209986,
        "end_timestamp_ns": 23152384236286
      },
      {
        "id": "write",
        "stack_id": 1524,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384200098,
        "end_timestamp_ns": 23152384207856
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152384197980,
        "end_timestamp_ns": 23152384198966
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152384196142,
        "end_timestamp_ns": 23152384197037
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384191062,
        "end_timestamp_ns": 23152384195736
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081484,
        "start_timestamp_ns": 23152384193993,
        "end_timestamp_ns": 23152384195174
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384168450,
        "end_timestamp_ns": 23152384189971
      },
      {
        "id": "times",
        "stack_id": 6982,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152384169766,
        "end_timestamp_ns": 23152384173714
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152384167185,
        "end_timestamp_ns": 23152384168309
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 16118,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384162620,
        "end_timestamp_ns": 23152384167692
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152384163834,
        "end_timestamp_ns": 23152384165669
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081483,
        "start_timestamp_ns": 23152384160285,
        "end_timestamp_ns": 23152384162787
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7754,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384154549,
        "end_timestamp_ns": 23152384160615
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384139250,
        "end_timestamp_ns": 23152384153204
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152384137607,
        "end_timestamp_ns": 23152384148768
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152384132692,
        "end_timestamp_ns": 23152384141923
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4438,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384133278,
        "end_timestamp_ns": 23152384138439
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152384120943,
        "end_timestamp_ns": 23152384136803
      },
      {
        "id": "getpid",
        "stack_id": 15669,
        "pid_tgid": 850236021081482,
        "start_timestamp_ns": 23152384134787,
        "end_timestamp_ns": 23152384136415
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152384120811,
        "end_timestamp_ns": 23152384131900
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081482,
        "start_timestamp_ns": 23152384111985,
        "end_timestamp_ns": 23152384113029
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081482,
        "start_timestamp_ns": 23152384109999,
        "end_timestamp_ns": 23152384111142
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081482,
        "start_timestamp_ns": 23152384106136,
        "end_timestamp_ns": 23152384109049
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11403,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384074275,
        "end_timestamp_ns": 23152384101517
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384029272,
        "end_timestamp_ns": 23152384073160
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14329,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152384022401,
        "end_timestamp_ns": 23152384028211
      },
      {
        "id": "write",
        "stack_id": 2364,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383992891,
        "end_timestamp_ns": 23152384010932
      },
      {
        "id": "gettid",
        "stack_id": 4305,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383987709,
        "end_timestamp_ns": 23152383988922
      },
      {
        "id": "close",
        "stack_id": 4093,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383979251,
        "end_timestamp_ns": 23152383980642
      },
      {
        "id": "getdents64",
        "stack_id": 1417,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383976984,
        "end_timestamp_ns": 23152383978341
      },
      {
        "id": "getdents64",
        "stack_id": 13006,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383969275,
        "end_timestamp_ns": 23152383975423
      },
      {
        "id": "newfstatat",
        "stack_id": 13867,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383965077,
        "end_timestamp_ns": 23152383967418
      },
      {
        "id": "openat",
        "stack_id": 12043,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383959922,
        "end_timestamp_ns": 23152383964250
      },
      {
        "id": "gettid",
        "stack_id": 14704,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383942699,
        "end_timestamp_ns": 23152383944552
      },
      {
        "id": "unlink",
        "stack_id": 2464,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383869703,
        "end_timestamp_ns": 23152383933529
      },
      {
        "id": "close",
        "stack_id": 12911,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383852342,
        "end_timestamp_ns": 23152383853584
      },
      {
        "id": "getdents64",
        "stack_id": 3470,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383850392,
        "end_timestamp_ns": 23152383851527
      },
      {
        "id": "getdents64",
        "stack_id": 13006,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383842739,
        "end_timestamp_ns": 23152383848767
      },
      {
        "id": "newfstatat",
        "stack_id": 13867,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383839384,
        "end_timestamp_ns": 23152383841454
      },
      {
        "id": "openat",
        "stack_id": 11269,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383834724,
        "end_timestamp_ns": 23152383838616
      },
      {
        "id": "close",
        "stack_id": 14420,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383821301,
        "end_timestamp_ns": 23152383822659
      },
      {
        "id": "getdents64",
        "stack_id": 3470,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383818819,
        "end_timestamp_ns": 23152383820272
      },
      {
        "id": "getdents64",
        "stack_id": 13006,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383800629,
        "end_timestamp_ns": 23152383815877
      },
      {
        "id": "newfstatat",
        "stack_id": 13867,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383786125,
        "end_timestamp_ns": 23152383789867
      },
      {
        "id": "openat",
        "stack_id": 14940,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383778114,
        "end_timestamp_ns": 23152383785192
      },
      {
        "id": "close",
        "stack_id": 5989,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152383770528,
        "end_timestamp_ns": 23152383772985
      },
      {
        "id": "fsync",
        "stack_id": 261,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382521500,
        "end_timestamp_ns": 23152383766410
      },
      {
        "id": "fstatfs",
        "stack_id": 1780,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382517244,
        "end_timestamp_ns": 23152382520002
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382511664,
        "end_timestamp_ns": 23152382515974
      },
      {
        "id": "rename",
        "stack_id": 13419,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382483623,
        "end_timestamp_ns": 23152382510017
      },
      {
        "id": "newfstatat",
        "stack_id": 3491,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382476813,
        "end_timestamp_ns": 23152382481956
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382377727,
        "end_timestamp_ns": 23152382379656
      },
      {
        "id": "futex",
        "stack_id": 285,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382288992,
        "end_timestamp_ns": 23152382290133
      },
      {
        "id": "futex",
        "stack_id": 285,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382281157,
        "end_timestamp_ns": 23152382282550
      },
      {
        "id": "futex",
        "stack_id": 285,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382256434,
        "end_timestamp_ns": 23152382257562
      },
      {
        "id": "futex",
        "stack_id": 285,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382242544,
        "end_timestamp_ns": 23152382243948
      },
      {
        "id": "futex",
        "stack_id": 15052,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382159329,
        "end_timestamp_ns": 23152382160657
      },
      {
        "id": "futex",
        "stack_id": 285,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382152581,
        "end_timestamp_ns": 23152382153774
      },
      {
        "id": "futex",
        "stack_id": 285,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152382133579,
        "end_timestamp_ns": 23152382135294
      },
      {
        "id": "futex",
        "stack_id": 285,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152381933986,
        "end_timestamp_ns": 23152381936025
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152381781339,
        "end_timestamp_ns": 23152381782500
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152381774308,
        "end_timestamp_ns": 23152381780464
      },
      {
        "id": "newfstatat",
        "stack_id": 10390,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152381769347,
        "end_timestamp_ns": 23152381773123
      },
      {
        "id": "brk",
        "stack_id": 813,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152381750573,
        "end_timestamp_ns": 23152381759903
      },
      {
        "id": "fcntl",
        "stack_id": 5539,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152381745674,
        "end_timestamp_ns": 23152381747192
      },
      {
        "id": "fcntl",
        "stack_id": 12193,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152381743246,
        "end_timestamp_ns": 23152381744325
      },
      {
        "id": "fcntl",
        "stack_id": 12193,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152381740754,
        "end_timestamp_ns": 23152381742407
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152381732041,
        "end_timestamp_ns": 23152381739672
      },
      {
        "id": "close",
        "stack_id": 4009,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152381722146,
        "end_timestamp_ns": 23152381724417
      },
      {
        "id": "fsync",
        "stack_id": 10953,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152380272205,
        "end_timestamp_ns": 23152381719049
      },
      {
        "id": "write",
        "stack_id": 5489,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152380253156,
        "end_timestamp_ns": 23152380270579
      },
      {
        "id": "sync_file_range",
        "stack_id": 8982,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152380090972,
        "end_timestamp_ns": 23152380092494
      },
      {
        "id": "fstatfs",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152380087464,
        "end_timestamp_ns": 23152380090154
      },
      {
        "id": "fcntl",
        "stack_id": 14682,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152380084600,
        "end_timestamp_ns": 23152380085810
      },
      {
        "id": "fcntl",
        "stack_id": 14682,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152380082111,
        "end_timestamp_ns": 23152380083800
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152380057475,
        "end_timestamp_ns": 23152380080930
      },
      {
        "id": "write",
        "stack_id": 8134,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152379984632,
        "end_timestamp_ns": 23152380007947
      },
      {
        "id": "fsync",
        "stack_id": 13493,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152378722960,
        "end_timestamp_ns": 23152379980232
      },
      {
        "id": "rename",
        "stack_id": 1238,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152378573715,
        "end_timestamp_ns": 23152378708701
      },
      {
        "id": "close",
        "stack_id": 6375,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152378547172,
        "end_timestamp_ns": 23152378567419
      },
      {
        "id": "fdatasync",
        "stack_id": 6622,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152377077462,
        "end_timestamp_ns": 23152378544391
      },
      {
        "id": "write",
        "stack_id": 5318,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152377055345,
        "end_timestamp_ns": 23152377076164
      },
      {
        "id": "sync_file_range",
        "stack_id": 3359,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152377052249,
        "end_timestamp_ns": 23152377054232
      },
      {
        "id": "fstatfs",
        "stack_id": 13965,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152377048424,
        "end_timestamp_ns": 23152377051391
      },
      {
        "id": "fcntl",
        "stack_id": 5691,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152377045710,
        "end_timestamp_ns": 23152377046987
      },
      {
        "id": "fcntl",
        "stack_id": 5691,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152377042384,
        "end_timestamp_ns": 23152377044901
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152376987959,
        "end_timestamp_ns": 23152377041006
      },
      {
        "id": "fdatasync",
        "stack_id": 8021,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373301057,
        "end_timestamp_ns": 23152376954770
      },
      {
        "id": "write",
        "stack_id": 5793,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373297101,
        "end_timestamp_ns": 23152373299657
      },
      {
        "id": "write",
        "stack_id": 5793,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373293190,
        "end_timestamp_ns": 23152373296026
      },
      {
        "id": "write",
        "stack_id": 10316,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373286399,
        "end_timestamp_ns": 23152373289703
      },
      {
        "id": "write",
        "stack_id": 12018,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373268466,
        "end_timestamp_ns": 23152373275740
      },
      {
        "id": "fallocate",
        "stack_id": 16166,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373241453,
        "end_timestamp_ns": 23152373265037
      },
      {
        "id": "brk",
        "stack_id": 813,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373228366,
        "end_timestamp_ns": 23152373233649
      },
      {
        "id": "sync_file_range",
        "stack_id": 5082,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373225568,
        "end_timestamp_ns": 23152373226671
      },
      {
        "id": "fstatfs",
        "stack_id": 4235,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373223411,
        "end_timestamp_ns": 23152373224939
      },
      {
        "id": "fcntl",
        "stack_id": 10103,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373221608,
        "end_timestamp_ns": 23152373222612
      },
      {
        "id": "fcntl",
        "stack_id": 10103,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373219683,
        "end_timestamp_ns": 23152373220960
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373207035,
        "end_timestamp_ns": 23152373218884
      },
      {
        "id": "gettid",
        "stack_id": 4958,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373202687,
        "end_timestamp_ns": 23152373203965
      },
      {
        "id": "fcntl",
        "stack_id": 14320,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373184735,
        "end_timestamp_ns": 23152373185773
      },
      {
        "id": "sync_file_range",
        "stack_id": 11799,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373182913,
        "end_timestamp_ns": 23152373183954
      },
      {
        "id": "fstatfs",
        "stack_id": 10030,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373180782,
        "end_timestamp_ns": 23152373182279
      },
      {
        "id": "fcntl",
        "stack_id": 3428,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373178993,
        "end_timestamp_ns": 23152373179932
      },
      {
        "id": "fcntl",
        "stack_id": 3428,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373176916,
        "end_timestamp_ns": 23152373178329
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373159611,
        "end_timestamp_ns": 23152373176036
      },
      {
        "id": "gettid",
        "stack_id": 12353,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373154195,
        "end_timestamp_ns": 23152373155356
      },
      {
        "id": "close",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373149064,
        "end_timestamp_ns": 23152373150281
      },
      {
        "id": "ftruncate",
        "stack_id": 4511,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373136889,
        "end_timestamp_ns": 23152373148081
      },
      {
        "id": "sync_file_range",
        "stack_id": 11021,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373134467,
        "end_timestamp_ns": 23152373135796
      },
      {
        "id": "fstatfs",
        "stack_id": 10905,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373132105,
        "end_timestamp_ns": 23152373133746
      },
      {
        "id": "fcntl",
        "stack_id": 13742,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373130288,
        "end_timestamp_ns": 23152373131272
      },
      {
        "id": "fcntl",
        "stack_id": 13742,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373128544,
        "end_timestamp_ns": 23152373129634
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373124645,
        "end_timestamp_ns": 23152373127768
      },
      {
        "id": "newfstatat",
        "stack_id": 8229,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373120584,
        "end_timestamp_ns": 23152373122751
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373117016,
        "end_timestamp_ns": 23152373117900
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373110746,
        "end_timestamp_ns": 23152373114989
      },
      {
        "id": "newfstatat",
        "stack_id": 10390,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373108239,
        "end_timestamp_ns": 23152373109892
      },
      {
        "id": "fcntl",
        "stack_id": 5539,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373104754,
        "end_timestamp_ns": 23152373105536
      },
      {
        "id": "fcntl",
        "stack_id": 15554,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373103053,
        "end_timestamp_ns": 23152373103978
      },
      {
        "id": "fcntl",
        "stack_id": 15554,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373101178,
        "end_timestamp_ns": 23152373102395
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373097543,
        "end_timestamp_ns": 23152373100479
      },
      {
        "id": "gettid",
        "stack_id": 4914,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373094220,
        "end_timestamp_ns": 23152373095379
      },
      {
        "id": "gettid",
        "stack_id": 10828,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373089703,
        "end_timestamp_ns": 23152373090973
      },
      {
        "id": "close",
        "stack_id": 11525,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373075461,
        "end_timestamp_ns": 23152373076634
      },
      {
        "id": "getdents64",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373073643,
        "end_timestamp_ns": 23152373074674
      },
      {
        "id": "getdents64",
        "stack_id": 13006,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373067419,
        "end_timestamp_ns": 23152373072353
      },
      {
        "id": "newfstatat",
        "stack_id": 13867,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373065020,
        "end_timestamp_ns": 23152373066473
      },
      {
        "id": "openat",
        "stack_id": 13502,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373062116,
        "end_timestamp_ns": 23152373064416
      },
      {
        "id": "fstatfs",
        "stack_id": 14684,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373057948,
        "end_timestamp_ns": 23152373060011
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373054203,
        "end_timestamp_ns": 23152373056973
      },
      {
        "id": "newfstatat",
        "stack_id": 14730,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373051596,
        "end_timestamp_ns": 23152373053380
      },
      {
        "id": "mkdir",
        "stack_id": 8494,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373048377,
        "end_timestamp_ns": 23152373050838
      },
      {
        "id": "newfstatat",
        "stack_id": 7288,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152373043823,
        "end_timestamp_ns": 23152373046898
      },
      {
        "id": "close",
        "stack_id": 937,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372806602,
        "end_timestamp_ns": 23152372808009
      },
      {
        "id": "getdents64",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372804541,
        "end_timestamp_ns": 23152372805765
      },
      {
        "id": "getdents64",
        "stack_id": 13006,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372792876,
        "end_timestamp_ns": 23152372802765
      },
      {
        "id": "newfstatat",
        "stack_id": 13867,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372787186,
        "end_timestamp_ns": 23152372788956
      },
      {
        "id": "openat",
        "stack_id": 3655,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372782255,
        "end_timestamp_ns": 23152372786551
      },
      {
        "id": "gettid",
        "stack_id": 12225,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372775616,
        "end_timestamp_ns": 23152372776692
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372772636,
        "end_timestamp_ns": 23152372773478
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372770476,
        "end_timestamp_ns": 23152372771437
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372768012,
        "end_timestamp_ns": 23152372769219
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372628094,
        "end_timestamp_ns": 23152372766920
      },
      {
        "id": "newfstatat",
        "stack_id": 10390,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372624357,
        "end_timestamp_ns": 23152372627145
      },
      {
        "id": "fcntl",
        "stack_id": 5539,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372619121,
        "end_timestamp_ns": 23152372619895
      },
      {
        "id": "fcntl",
        "stack_id": 15612,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372617326,
        "end_timestamp_ns": 23152372618302
      },
      {
        "id": "fcntl",
        "stack_id": 15612,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372615348,
        "end_timestamp_ns": 23152372616656
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372609822,
        "end_timestamp_ns": 23152372614532
      },
      {
        "id": "access",
        "stack_id": 6372,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372594510,
        "end_timestamp_ns": 23152372607690
      },
      {
        "id": "gettid",
        "stack_id": 11875,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372590690,
        "end_timestamp_ns": 23152372591747
      },
      {
        "id": "gettid",
        "stack_id": 2552,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372583629,
        "end_timestamp_ns": 23152372585363
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372578053,
        "end_timestamp_ns": 23152372579783
      },
      {
        "id": "munmap",
        "stack_id": 10798,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372543961,
        "end_timestamp_ns": 23152372555302
      },
      {
        "id": "munmap",
        "stack_id": 5335,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372534174,
        "end_timestamp_ns": 23152372542964
      },
      {
        "id": "munmap",
        "stack_id": 2111,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372524677,
        "end_timestamp_ns": 23152372533062
      },
      {
        "id": "munmap",
        "stack_id": 13894,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372513225,
        "end_timestamp_ns": 23152372523683
      },
      {
        "id": "munmap",
        "stack_id": 1133,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372501550,
        "end_timestamp_ns": 23152372512171
      },
      {
        "id": "munmap",
        "stack_id": 9923,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372489757,
        "end_timestamp_ns": 23152372500485
      },
      {
        "id": "munmap",
        "stack_id": 1147,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372480318,
        "end_timestamp_ns": 23152372488707
      },
      {
        "id": "munmap",
        "stack_id": 9442,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372470426,
        "end_timestamp_ns": 23152372479164
      },
      {
        "id": "munmap",
        "stack_id": 3545,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372458258,
        "end_timestamp_ns": 23152372469393
      },
      {
        "id": "munmap",
        "stack_id": 15801,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372448995,
        "end_timestamp_ns": 23152372457200
      },
      {
        "id": "munmap",
        "stack_id": 3551,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372439712,
        "end_timestamp_ns": 23152372448009
      },
      {
        "id": "munmap",
        "stack_id": 1407,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372429740,
        "end_timestamp_ns": 23152372438652
      },
      {
        "id": "munmap",
        "stack_id": 2588,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372419911,
        "end_timestamp_ns": 23152372428700
      },
      {
        "id": "munmap",
        "stack_id": 10972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372410683,
        "end_timestamp_ns": 23152372418882
      },
      {
        "id": "munmap",
        "stack_id": 11201,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372401369,
        "end_timestamp_ns": 23152372409672
      },
      {
        "id": "munmap",
        "stack_id": 431,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372391889,
        "end_timestamp_ns": 23152372400380
      },
      {
        "id": "munmap",
        "stack_id": 3773,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372380330,
        "end_timestamp_ns": 23152372390615
      },
      {
        "id": "munmap",
        "stack_id": 14664,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372368792,
        "end_timestamp_ns": 23152372379279
      },
      {
        "id": "munmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372359040,
        "end_timestamp_ns": 23152372367689
      },
      {
        "id": "munmap",
        "stack_id": 5660,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372347035,
        "end_timestamp_ns": 23152372357966
      },
      {
        "id": "munmap",
        "stack_id": 9210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372336847,
        "end_timestamp_ns": 23152372345662
      },
      {
        "id": "munmap",
        "stack_id": 10105,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372324734,
        "end_timestamp_ns": 23152372335777
      },
      {
        "id": "munmap",
        "stack_id": 14378,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372312657,
        "end_timestamp_ns": 23152372323552
      },
      {
        "id": "munmap",
        "stack_id": 4677,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372298445,
        "end_timestamp_ns": 23152372311493
      },
      {
        "id": "munmap",
        "stack_id": 12883,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372288282,
        "end_timestamp_ns": 23152372297459
      },
      {
        "id": "munmap",
        "stack_id": 14350,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372277671,
        "end_timestamp_ns": 23152372287252
      },
      {
        "id": "munmap",
        "stack_id": 349,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152372258882,
        "end_timestamp_ns": 23152372276317
      },
      {
        "id": "futex",
        "stack_id": 15045,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366500131,
        "end_timestamp_ns": 23152372254554
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152372243074,
        "end_timestamp_ns": 23152372246650
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152372240511,
        "end_timestamp_ns": 23152372242257
      },
      {
        "id": "pread64",
        "stack_id": 13515,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152366223630,
        "end_timestamp_ns": 23152371712509
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081481,
        "start_timestamp_ns": 23152366501883,
        "end_timestamp_ns": 23152366505006
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081481,
        "start_timestamp_ns": 23152366500090,
        "end_timestamp_ns": 23152366501051
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081481,
        "start_timestamp_ns": 23152366497162,
        "end_timestamp_ns": 23152366498067
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11403,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366491117,
        "end_timestamp_ns": 23152366496719
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081481,
        "start_timestamp_ns": 23152366495205,
        "end_timestamp_ns": 23152366496078
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081481,
        "start_timestamp_ns": 23152366493013,
        "end_timestamp_ns": 23152366494272
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366479473,
        "end_timestamp_ns": 23152366490254
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14329,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366474492,
        "end_timestamp_ns": 23152366478796
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081480,
        "start_timestamp_ns": 23152366462733,
        "end_timestamp_ns": 23152366473319
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366461959,
        "end_timestamp_ns": 23152366467655
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081480,
        "start_timestamp_ns": 23152366461210,
        "end_timestamp_ns": 23152366461984
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366457658,
        "end_timestamp_ns": 23152366461277
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081480,
        "start_timestamp_ns": 23152366458200,
        "end_timestamp_ns": 23152366459043
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081480,
        "start_timestamp_ns": 23152366456690,
        "end_timestamp_ns": 23152366457465
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7754,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366452183,
        "end_timestamp_ns": 23152366456379
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081480,
        "start_timestamp_ns": 23152366454312,
        "end_timestamp_ns": 23152366455757
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366440899,
        "end_timestamp_ns": 23152366451468
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 4438,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366435690,
        "end_timestamp_ns": 23152366440229
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366415521,
        "end_timestamp_ns": 23152366426570
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081479,
        "start_timestamp_ns": 23152366412883,
        "end_timestamp_ns": 23152366419646
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366410324,
        "end_timestamp_ns": 23152366414760
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081479,
        "start_timestamp_ns": 23152366411145,
        "end_timestamp_ns": 23152366412096
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081479,
        "start_timestamp_ns": 23152366408295,
        "end_timestamp_ns": 23152366409445
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6728,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366402945,
        "end_timestamp_ns": 23152366408682
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081479,
        "start_timestamp_ns": 23152366406641,
        "end_timestamp_ns": 23152366407484
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081479,
        "start_timestamp_ns": 23152366404518,
        "end_timestamp_ns": 23152366405718
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366391539,
        "end_timestamp_ns": 23152366402066
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 16118,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366386355,
        "end_timestamp_ns": 23152366390846
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366360044,
        "end_timestamp_ns": 23152366371802
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081478,
        "start_timestamp_ns": 23152366357324,
        "end_timestamp_ns": 23152366364428
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366354958,
        "end_timestamp_ns": 23152366359300
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081478,
        "start_timestamp_ns": 23152366355609,
        "end_timestamp_ns": 23152366356539
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081478,
        "start_timestamp_ns": 23152366352840,
        "end_timestamp_ns": 23152366353935
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 409,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366347591,
        "end_timestamp_ns": 23152366353277
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081478,
        "start_timestamp_ns": 23152366351206,
        "end_timestamp_ns": 23152366352046
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081478,
        "start_timestamp_ns": 23152366349125,
        "end_timestamp_ns": 23152366350290
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366335063,
        "end_timestamp_ns": 23152366346761
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9518,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366329962,
        "end_timestamp_ns": 23152366334384
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366310526,
        "end_timestamp_ns": 23152366320715
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081477,
        "start_timestamp_ns": 23152366308363,
        "end_timestamp_ns": 23152366315177
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366305697,
        "end_timestamp_ns": 23152366309740
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081477,
        "start_timestamp_ns": 23152366306632,
        "end_timestamp_ns": 23152366307575
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081477,
        "start_timestamp_ns": 23152366303767,
        "end_timestamp_ns": 23152366304867
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7966,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366298509,
        "end_timestamp_ns": 23152366304183
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081477,
        "start_timestamp_ns": 23152366302097,
        "end_timestamp_ns": 23152366302956
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081477,
        "start_timestamp_ns": 23152366299952,
        "end_timestamp_ns": 23152366301140
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366287159,
        "end_timestamp_ns": 23152366297625
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14437,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366282039,
        "end_timestamp_ns": 23152366286443
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366260831,
        "end_timestamp_ns": 23152366272740
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081476,
        "start_timestamp_ns": 23152366257382,
        "end_timestamp_ns": 23152366266388
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366254337,
        "end_timestamp_ns": 23152366259802
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081476,
        "start_timestamp_ns": 23152366255568,
        "end_timestamp_ns": 23152366256543
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081476,
        "start_timestamp_ns": 23152366252472,
        "end_timestamp_ns": 23152366253605
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9478,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366246874,
        "end_timestamp_ns": 23152366252562
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081476,
        "start_timestamp_ns": 23152366250798,
        "end_timestamp_ns": 23152366251687
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081476,
        "start_timestamp_ns": 23152366248602,
        "end_timestamp_ns": 23152366249862
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366234615,
        "end_timestamp_ns": 23152366245908
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 5787,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366229169,
        "end_timestamp_ns": 23152366233879
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081475,
        "start_timestamp_ns": 23152366207370,
        "end_timestamp_ns": 23152366223190
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152366206022,
        "end_timestamp_ns": 23152366218204
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366204657,
        "end_timestamp_ns": 23152366210437
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081475,
        "start_timestamp_ns": 23152366205499,
        "end_timestamp_ns": 23152366206485
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366200245,
        "end_timestamp_ns": 23152366203868
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081475,
        "start_timestamp_ns": 23152366201500,
        "end_timestamp_ns": 23152366202798
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081475,
        "start_timestamp_ns": 23152366199700,
        "end_timestamp_ns": 23152366200637
      },
      {
        "id": "futex",
        "stack_id": 285,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152366197937,
        "end_timestamp_ns": 23152366200028
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6032,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366194953,
        "end_timestamp_ns": 23152366199188
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081475,
        "start_timestamp_ns": 23152366197145,
        "end_timestamp_ns": 23152366198667
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366184353,
        "end_timestamp_ns": 23152366194260
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 5538,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366179391,
        "end_timestamp_ns": 23152366183653
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081474,
        "start_timestamp_ns": 23152366174193,
        "end_timestamp_ns": 23152366181870
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081474,
        "start_timestamp_ns": 23152366172344,
        "end_timestamp_ns": 23152366173284
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366165799,
        "end_timestamp_ns": 23152366172008
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081474,
        "start_timestamp_ns": 23152366168641,
        "end_timestamp_ns": 23152366169684
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081474,
        "start_timestamp_ns": 23152366166762,
        "end_timestamp_ns": 23152366167806
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081474,
        "start_timestamp_ns": 23152366164035,
        "end_timestamp_ns": 23152366165782
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366162602,
        "end_timestamp_ns": 23152366165174
      },
      {
        "id": "pread64",
        "stack_id": 12156,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152366159451,
        "end_timestamp_ns": 23152366162632
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7482,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366156400,
        "end_timestamp_ns": 23152366161462
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366142529,
        "end_timestamp_ns": 23152366155569
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11386,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366136228,
        "end_timestamp_ns": 23152366141692
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366116327,
        "end_timestamp_ns": 23152366125177
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081473,
        "start_timestamp_ns": 23152366113460,
        "end_timestamp_ns": 23152366120378
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366110797,
        "end_timestamp_ns": 23152366115573
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081473,
        "start_timestamp_ns": 23152366111729,
        "end_timestamp_ns": 23152366112681
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081473,
        "start_timestamp_ns": 23152366108877,
        "end_timestamp_ns": 23152366110041
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 13361,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366103502,
        "end_timestamp_ns": 23152366109186
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081473,
        "start_timestamp_ns": 23152366107198,
        "end_timestamp_ns": 23152366108064
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081473,
        "start_timestamp_ns": 23152366105093,
        "end_timestamp_ns": 23152366106272
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366092495,
        "end_timestamp_ns": 23152366102661
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 13696,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366087162,
        "end_timestamp_ns": 23152366091797
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366066888,
        "end_timestamp_ns": 23152366077838
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081472,
        "start_timestamp_ns": 23152366064496,
        "end_timestamp_ns": 23152366071283
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366062128,
        "end_timestamp_ns": 23152366066171
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081472,
        "start_timestamp_ns": 23152366062794,
        "end_timestamp_ns": 23152366063709
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081472,
        "start_timestamp_ns": 23152366060060,
        "end_timestamp_ns": 23152366061173
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7402,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366054671,
        "end_timestamp_ns": 23152366060511
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081472,
        "start_timestamp_ns": 23152366058415,
        "end_timestamp_ns": 23152366059248
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081472,
        "start_timestamp_ns": 23152366056294,
        "end_timestamp_ns": 23152366057508
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366043406,
        "end_timestamp_ns": 23152366053814
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14909,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366038244,
        "end_timestamp_ns": 23152366042713
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366018962,
        "end_timestamp_ns": 23152366028488
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081471,
        "start_timestamp_ns": 23152366018690,
        "end_timestamp_ns": 23152366021708
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366014585,
        "end_timestamp_ns": 23152366018173
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081471,
        "start_timestamp_ns": 23152366016688,
        "end_timestamp_ns": 23152366017654
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081471,
        "start_timestamp_ns": 23152366013858,
        "end_timestamp_ns": 23152366014843
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7462,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152366007515,
        "end_timestamp_ns": 23152366013125
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081471,
        "start_timestamp_ns": 23152366011644,
        "end_timestamp_ns": 23152366012509
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081471,
        "start_timestamp_ns": 23152366009466,
        "end_timestamp_ns": 23152366010707
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365997666,
        "end_timestamp_ns": 23152366006671
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7182,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365992805,
        "end_timestamp_ns": 23152365997033
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365975474,
        "end_timestamp_ns": 23152365985751
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081470,
        "start_timestamp_ns": 23152365974803,
        "end_timestamp_ns": 23152365979339
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365968088,
        "end_timestamp_ns": 23152365974796
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081470,
        "start_timestamp_ns": 23152365972859,
        "end_timestamp_ns": 23152365973920
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081470,
        "start_timestamp_ns": 23152365968878,
        "end_timestamp_ns": 23152365970186
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081470,
        "start_timestamp_ns": 23152365966879,
        "end_timestamp_ns": 23152365967830
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9236,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365962152,
        "end_timestamp_ns": 23152365966666
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081470,
        "start_timestamp_ns": 23152365964220,
        "end_timestamp_ns": 23152365965902
      },
      {
        "id": "pread64",
        "stack_id": 15334,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365961849,
        "end_timestamp_ns": 23152365964474
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365950637,
        "end_timestamp_ns": 23152365961419
      },
      {
        "id": "pread64",
        "stack_id": 5161,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365946242,
        "end_timestamp_ns": 23152365949908
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11483,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365944870,
        "end_timestamp_ns": 23152365949883
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365926008,
        "end_timestamp_ns": 23152365936006
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081469,
        "start_timestamp_ns": 23152365923316,
        "end_timestamp_ns": 23152365930357
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365920767,
        "end_timestamp_ns": 23152365925272
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081469,
        "start_timestamp_ns": 23152365921530,
        "end_timestamp_ns": 23152365922477
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081469,
        "start_timestamp_ns": 23152365918648,
        "end_timestamp_ns": 23152365919921
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11382,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365913753,
        "end_timestamp_ns": 23152365919331
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081469,
        "start_timestamp_ns": 23152365917035,
        "end_timestamp_ns": 23152365917892
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081469,
        "start_timestamp_ns": 23152365914938,
        "end_timestamp_ns": 23152365916097
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365901455,
        "end_timestamp_ns": 23152365912888
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 13337,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365896138,
        "end_timestamp_ns": 23152365900699
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365875553,
        "end_timestamp_ns": 23152365886006
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081468,
        "start_timestamp_ns": 23152365871763,
        "end_timestamp_ns": 23152365879476
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365869372,
        "end_timestamp_ns": 23152365874753
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081468,
        "start_timestamp_ns": 23152365870031,
        "end_timestamp_ns": 23152365870987
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081468,
        "start_timestamp_ns": 23152365867281,
        "end_timestamp_ns": 23152365868483
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365862500,
        "end_timestamp_ns": 23152365868067
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081468,
        "start_timestamp_ns": 23152365865665,
        "end_timestamp_ns": 23152365866501
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081468,
        "start_timestamp_ns": 23152365863571,
        "end_timestamp_ns": 23152365864734
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365850652,
        "end_timestamp_ns": 23152365861506
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7544,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365845325,
        "end_timestamp_ns": 23152365849841
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365826365,
        "end_timestamp_ns": 23152365836517
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081467,
        "start_timestamp_ns": 23152365823330,
        "end_timestamp_ns": 23152365830852
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365820738,
        "end_timestamp_ns": 23152365825498
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081467,
        "start_timestamp_ns": 23152365821598,
        "end_timestamp_ns": 23152365822538
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081467,
        "start_timestamp_ns": 23152365818771,
        "end_timestamp_ns": 23152365819945
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 16270,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365813564,
        "end_timestamp_ns": 23152365819276
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081467,
        "start_timestamp_ns": 23152365817138,
        "end_timestamp_ns": 23152365817994
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081467,
        "start_timestamp_ns": 23152365814906,
        "end_timestamp_ns": 23152365816213
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365799842,
        "end_timestamp_ns": 23152365812679
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 5431,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365794105,
        "end_timestamp_ns": 23152365798979
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365773583,
        "end_timestamp_ns": 23152365785362
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081466,
        "start_timestamp_ns": 23152365770819,
        "end_timestamp_ns": 23152365778000
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365768653,
        "end_timestamp_ns": 23152365772815
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081466,
        "start_timestamp_ns": 23152365769099,
        "end_timestamp_ns": 23152365770035
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081466,
        "start_timestamp_ns": 23152365766386,
        "end_timestamp_ns": 23152365767296
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 8555,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365761474,
        "end_timestamp_ns": 23152365767192
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081466,
        "start_timestamp_ns": 23152365764757,
        "end_timestamp_ns": 23152365765626
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081466,
        "start_timestamp_ns": 23152365762666,
        "end_timestamp_ns": 23152365763834
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365749809,
        "end_timestamp_ns": 23152365760630
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 5068,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365744446,
        "end_timestamp_ns": 23152365749009
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365724085,
        "end_timestamp_ns": 23152365733873
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081465,
        "start_timestamp_ns": 23152365721076,
        "end_timestamp_ns": 23152365728087
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365718504,
        "end_timestamp_ns": 23152365723322
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081465,
        "start_timestamp_ns": 23152365719348,
        "end_timestamp_ns": 23152365720276
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081465,
        "start_timestamp_ns": 23152365716518,
        "end_timestamp_ns": 23152365717678
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 10854,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365711626,
        "end_timestamp_ns": 23152365717231
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081465,
        "start_timestamp_ns": 23152365714884,
        "end_timestamp_ns": 23152365715749
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081465,
        "start_timestamp_ns": 23152365712803,
        "end_timestamp_ns": 23152365713984
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365699976,
        "end_timestamp_ns": 23152365710775
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6522,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365694658,
        "end_timestamp_ns": 23152365699249
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365675757,
        "end_timestamp_ns": 23152365685757
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081464,
        "start_timestamp_ns": 23152365672088,
        "end_timestamp_ns": 23152365680357
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365669614,
        "end_timestamp_ns": 23152365675031
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081464,
        "start_timestamp_ns": 23152365670283,
        "end_timestamp_ns": 23152365671250
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081464,
        "start_timestamp_ns": 23152365667442,
        "end_timestamp_ns": 23152365668634
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 2162,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365662485,
        "end_timestamp_ns": 23152365668169
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081464,
        "start_timestamp_ns": 23152365665841,
        "end_timestamp_ns": 23152365666681
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081464,
        "start_timestamp_ns": 23152365663696,
        "end_timestamp_ns": 23152365664878
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365649935,
        "end_timestamp_ns": 23152365661439
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6632,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365644497,
        "end_timestamp_ns": 23152365649142
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365622513,
        "end_timestamp_ns": 23152365633869
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081463,
        "start_timestamp_ns": 23152365619800,
        "end_timestamp_ns": 23152365626753
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365617408,
        "end_timestamp_ns": 23152365621762
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081463,
        "start_timestamp_ns": 23152365618024,
        "end_timestamp_ns": 23152365618981
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081463,
        "start_timestamp_ns": 23152365615284,
        "end_timestamp_ns": 23152365616221
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15361,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365610244,
        "end_timestamp_ns": 23152365616149
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081463,
        "start_timestamp_ns": 23152365613425,
        "end_timestamp_ns": 23152365614274
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081463,
        "start_timestamp_ns": 23152365611360,
        "end_timestamp_ns": 23152365612535
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365597882,
        "end_timestamp_ns": 23152365609408
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15254,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365592608,
        "end_timestamp_ns": 23152365597090
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365575088,
        "end_timestamp_ns": 23152365583658
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081462,
        "start_timestamp_ns": 23152365571998,
        "end_timestamp_ns": 23152365579058
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365569555,
        "end_timestamp_ns": 23152365574306
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081462,
        "start_timestamp_ns": 23152365570268,
        "end_timestamp_ns": 23152365571198
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081462,
        "start_timestamp_ns": 23152365567494,
        "end_timestamp_ns": 23152365568674
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9570,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365562531,
        "end_timestamp_ns": 23152365568183
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081462,
        "start_timestamp_ns": 23152365565881,
        "end_timestamp_ns": 23152365566720
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081462,
        "start_timestamp_ns": 23152365563784,
        "end_timestamp_ns": 23152365564954
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365550703,
        "end_timestamp_ns": 23152365561671
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7864,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365545373,
        "end_timestamp_ns": 23152365549906
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365528145,
        "end_timestamp_ns": 23152365536236
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081461,
        "start_timestamp_ns": 23152365528103,
        "end_timestamp_ns": 23152365531194
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365523916,
        "end_timestamp_ns": 23152365527101
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081461,
        "start_timestamp_ns": 23152365525988,
        "end_timestamp_ns": 23152365526967
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081461,
        "start_timestamp_ns": 23152365522701,
        "end_timestamp_ns": 23152365523884
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6008,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365517113,
        "end_timestamp_ns": 23152365522791
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081461,
        "start_timestamp_ns": 23152365520975,
        "end_timestamp_ns": 23152365521851
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081461,
        "start_timestamp_ns": 23152365518657,
        "end_timestamp_ns": 23152365519954
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365504317,
        "end_timestamp_ns": 23152365516228
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 12252,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365498516,
        "end_timestamp_ns": 23152365503552
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081460,
        "start_timestamp_ns": 23152365486685,
        "end_timestamp_ns": 23152365495542
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365482642,
        "end_timestamp_ns": 23152365489476
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081460,
        "start_timestamp_ns": 23152365484988,
        "end_timestamp_ns": 23152365485855
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081460,
        "start_timestamp_ns": 23152365482113,
        "end_timestamp_ns": 23152365482997
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365478201,
        "end_timestamp_ns": 23152365481906
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081460,
        "start_timestamp_ns": 23152365480512,
        "end_timestamp_ns": 23152365481319
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081460,
        "start_timestamp_ns": 23152365478421,
        "end_timestamp_ns": 23152365479563
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15523,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365472025,
        "end_timestamp_ns": 23152365476946
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365457343,
        "end_timestamp_ns": 23152365471018
      },
      {
        "id": "readahead",
        "stack_id": 15852,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365316324,
        "end_timestamp_ns": 23152365465070
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 5210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365451725,
        "end_timestamp_ns": 23152365456568
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081459,
        "start_timestamp_ns": 23152365436756,
        "end_timestamp_ns": 23152365452335
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365433284,
        "end_timestamp_ns": 23152365442500
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081459,
        "start_timestamp_ns": 23152365434876,
        "end_timestamp_ns": 23152365435877
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365428896,
        "end_timestamp_ns": 23152365432288
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081459,
        "start_timestamp_ns": 23152365431188,
        "end_timestamp_ns": 23152365432163
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081459,
        "start_timestamp_ns": 23152365429355,
        "end_timestamp_ns": 23152365430367
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081459,
        "start_timestamp_ns": 23152365426322,
        "end_timestamp_ns": 23152365428323
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15819,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365422352,
        "end_timestamp_ns": 23152365427555
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365408037,
        "end_timestamp_ns": 23152365421511
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 8037,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365402231,
        "end_timestamp_ns": 23152365407243
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081458,
        "start_timestamp_ns": 23152365384709,
        "end_timestamp_ns": 23152365396812
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365384070,
        "end_timestamp_ns": 23152365391586
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081458,
        "start_timestamp_ns": 23152365382877,
        "end_timestamp_ns": 23152365383865
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365379580,
        "end_timestamp_ns": 23152365383328
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081458,
        "start_timestamp_ns": 23152365379412,
        "end_timestamp_ns": 23152365380399
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081458,
        "start_timestamp_ns": 23152365377640,
        "end_timestamp_ns": 23152365378573
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7595,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365373098,
        "end_timestamp_ns": 23152365377984
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081458,
        "start_timestamp_ns": 23152365375277,
        "end_timestamp_ns": 23152365376673
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365358234,
        "end_timestamp_ns": 23152365372070
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 12663,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365352458,
        "end_timestamp_ns": 23152365357437
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081457,
        "start_timestamp_ns": 23152365330112,
        "end_timestamp_ns": 23152365344623
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365330055,
        "end_timestamp_ns": 23152365338280
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365324829,
        "end_timestamp_ns": 23152365329312
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081457,
        "start_timestamp_ns": 23152365328195,
        "end_timestamp_ns": 23152365329255
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081457,
        "start_timestamp_ns": 23152365324285,
        "end_timestamp_ns": 23152365325305
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081457,
        "start_timestamp_ns": 23152365322543,
        "end_timestamp_ns": 23152365323472
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 2454,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365318491,
        "end_timestamp_ns": 23152365323344
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081457,
        "start_timestamp_ns": 23152365320116,
        "end_timestamp_ns": 23152365321530
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365301833,
        "end_timestamp_ns": 23152365317673
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7139,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365295999,
        "end_timestamp_ns": 23152365300913
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365276790,
        "end_timestamp_ns": 23152365286482
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081456,
        "start_timestamp_ns": 23152365273980,
        "end_timestamp_ns": 23152365280560
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365271634,
        "end_timestamp_ns": 23152365276050
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081456,
        "start_timestamp_ns": 23152365272262,
        "end_timestamp_ns": 23152365273175
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081456,
        "start_timestamp_ns": 23152365269480,
        "end_timestamp_ns": 23152365270587
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9712,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365264344,
        "end_timestamp_ns": 23152365270033
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081456,
        "start_timestamp_ns": 23152365267862,
        "end_timestamp_ns": 23152365268701
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081456,
        "start_timestamp_ns": 23152365265839,
        "end_timestamp_ns": 23152365266982
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365252503,
        "end_timestamp_ns": 23152365263482
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 5337,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365246229,
        "end_timestamp_ns": 23152365251770
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081455,
        "start_timestamp_ns": 23152365230163,
        "end_timestamp_ns": 23152365241729
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365229888,
        "end_timestamp_ns": 23152365236804
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081455,
        "start_timestamp_ns": 23152365228006,
        "end_timestamp_ns": 23152365229000
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365226010,
        "end_timestamp_ns": 23152365228938
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081455,
        "start_timestamp_ns": 23152365225000,
        "end_timestamp_ns": 23152365225976
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14199,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365218860,
        "end_timestamp_ns": 23152365224523
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081455,
        "start_timestamp_ns": 23152365222953,
        "end_timestamp_ns": 23152365223854
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081455,
        "start_timestamp_ns": 23152365220797,
        "end_timestamp_ns": 23152365222031
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365208882,
        "end_timestamp_ns": 23152365217996
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6031,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365203723,
        "end_timestamp_ns": 23152365208235
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081454,
        "start_timestamp_ns": 23152365196615,
        "end_timestamp_ns": 23152365201208
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365193041,
        "end_timestamp_ns": 23152365196637
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081454,
        "start_timestamp_ns": 23152365194718,
        "end_timestamp_ns": 23152365195683
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365189774,
        "end_timestamp_ns": 23152365192219
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081454,
        "start_timestamp_ns": 23152365190605,
        "end_timestamp_ns": 23152365191664
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081454,
        "start_timestamp_ns": 23152365188776,
        "end_timestamp_ns": 23152365189740
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6703,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365184048,
        "end_timestamp_ns": 23152365188308
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081454,
        "start_timestamp_ns": 23152365186098,
        "end_timestamp_ns": 23152365187718
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365172578,
        "end_timestamp_ns": 23152365183327
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 13346,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365167413,
        "end_timestamp_ns": 23152365171856
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365141156,
        "end_timestamp_ns": 23152365156126
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081453,
        "start_timestamp_ns": 23152365140534,
        "end_timestamp_ns": 23152365149696
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365135976,
        "end_timestamp_ns": 23152365140374
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081453,
        "start_timestamp_ns": 23152365138594,
        "end_timestamp_ns": 23152365139676
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081453,
        "start_timestamp_ns": 23152365135065,
        "end_timestamp_ns": 23152365136134
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081453,
        "start_timestamp_ns": 23152365133025,
        "end_timestamp_ns": 23152365133988
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 5083,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365128491,
        "end_timestamp_ns": 23152365133940
      },
      {
        "id": "madvise",
        "stack_id": 9617,
        "pid_tgid": 850236021081452,
        "start_timestamp_ns": 23152365128892,
        "end_timestamp_ns": 23152365133233
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081453,
        "start_timestamp_ns": 23152365130516,
        "end_timestamp_ns": 23152365132084
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6415,
        "pid_tgid": 850236021081452,
        "start_timestamp_ns": 23152365126633,
        "end_timestamp_ns": 23152365128018
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365112947,
        "end_timestamp_ns": 23152365127567
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 5652,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365107194,
        "end_timestamp_ns": 23152365112116
      },
      {
        "id": "fadvise64",
        "stack_id": 5583,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365109855,
        "end_timestamp_ns": 23152365111400
      },
      {
        "id": "fcntl",
        "stack_id": 12310,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365107495,
        "end_timestamp_ns": 23152365108556
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081452,
        "start_timestamp_ns": 23152365098921,
        "end_timestamp_ns": 23152365107094
      },
      {
        "id": "fcntl",
        "stack_id": 12310,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365104614,
        "end_timestamp_ns": 23152365106743
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365091813,
        "end_timestamp_ns": 23152365103616
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081452,
        "start_timestamp_ns": 23152365082190,
        "end_timestamp_ns": 23152365098115
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365072509,
        "end_timestamp_ns": 23152365088148
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081452,
        "start_timestamp_ns": 23152365071817,
        "end_timestamp_ns": 23152365081315
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365069326,
        "end_timestamp_ns": 23152365071845
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081452,
        "start_timestamp_ns": 23152365069089,
        "end_timestamp_ns": 23152365070146
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081452,
        "start_timestamp_ns": 23152365067242,
        "end_timestamp_ns": 23152365068226
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15208,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365062235,
        "end_timestamp_ns": 23152365066979
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081452,
        "start_timestamp_ns": 23152365064527,
        "end_timestamp_ns": 23152365066273
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365047710,
        "end_timestamp_ns": 23152365061258
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365048136,
        "end_timestamp_ns": 23152365052658
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365036222,
        "end_timestamp_ns": 23152365047250
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11976,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365042022,
        "end_timestamp_ns": 23152365046861
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365030577,
        "end_timestamp_ns": 23152365034735
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365032952,
        "end_timestamp_ns": 23152365033962
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365031116,
        "end_timestamp_ns": 23152365032157
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081451,
        "start_timestamp_ns": 23152365027888,
        "end_timestamp_ns": 23152365030134
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365026200,
        "end_timestamp_ns": 23152365029935
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 15606,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365020046,
        "end_timestamp_ns": 23152365025015
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152365002140,
        "end_timestamp_ns": 23152365019143
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 9449,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364996530,
        "end_timestamp_ns": 23152365001267
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364981800,
        "end_timestamp_ns": 23152364988334
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364975549,
        "end_timestamp_ns": 23152364980940
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364660384,
        "end_timestamp_ns": 23152364661961
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364566022,
        "end_timestamp_ns": 23152364659231
      },
      {
        "id": "newfstatat",
        "stack_id": 10390,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364559494,
        "end_timestamp_ns": 23152364562011
      },
      {
        "id": "close",
        "stack_id": 6023,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364550469,
        "end_timestamp_ns": 23152364551579
      },
      {
        "id": "read",
        "stack_id": 15579,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364546902,
        "end_timestamp_ns": 23152364549613
      },
      {
        "id": "openat",
        "stack_id": 12701,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364540963,
        "end_timestamp_ns": 23152364545919
      },
      {
        "id": "close",
        "stack_id": 4527,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364536251,
        "end_timestamp_ns": 23152364536845
      },
      {
        "id": "read",
        "stack_id": 6105,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364531811,
        "end_timestamp_ns": 23152364535345
      },
      {
        "id": "openat",
        "stack_id": 13219,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364523213,
        "end_timestamp_ns": 23152364531091
      },
      {
        "id": "gettid",
        "stack_id": 2950,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364494086,
        "end_timestamp_ns": 23152364495468
      },
      {
        "id": "gettid",
        "stack_id": 15519,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364491045,
        "end_timestamp_ns": 23152364492444
      },
      {
        "id": "gettid",
        "stack_id": 3135,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364487963,
        "end_timestamp_ns": 23152364489360
      },
      {
        "id": "gettid",
        "stack_id": 11873,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364484574,
        "end_timestamp_ns": 23152364486030
      },
      {
        "id": "gettid",
        "stack_id": 11954,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364480182,
        "end_timestamp_ns": 23152364481704
      },
      {
        "id": "gettid",
        "stack_id": 7891,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364476511,
        "end_timestamp_ns": 23152364477777
      },
      {
        "id": "gettid",
        "stack_id": 9214,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364472950,
        "end_timestamp_ns": 23152364474249
      },
      {
        "id": "gettid",
        "stack_id": 2808,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364468376,
        "end_timestamp_ns": 23152364469920
      },
      {
        "id": "gettid",
        "stack_id": 69,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364465373,
        "end_timestamp_ns": 23152364466730
      },
      {
        "id": "gettid",
        "stack_id": 16026,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364462418,
        "end_timestamp_ns": 23152364463735
      },
      {
        "id": "gettid",
        "stack_id": 6450,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364459378,
        "end_timestamp_ns": 23152364460696
      },
      {
        "id": "gettid",
        "stack_id": 6787,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364456368,
        "end_timestamp_ns": 23152364457726
      },
      {
        "id": "gettid",
        "stack_id": 3351,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364453211,
        "end_timestamp_ns": 23152364454633
      },
      {
        "id": "gettid",
        "stack_id": 5947,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364449092,
        "end_timestamp_ns": 23152364450615
      },
      {
        "id": "gettid",
        "stack_id": 2299,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364445548,
        "end_timestamp_ns": 23152364446772
      },
      {
        "id": "gettid",
        "stack_id": 7998,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364441524,
        "end_timestamp_ns": 23152364443137
      },
      {
        "id": "gettid",
        "stack_id": 12715,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364437601,
        "end_timestamp_ns": 23152364438951
      },
      {
        "id": "gettid",
        "stack_id": 14385,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364434585,
        "end_timestamp_ns": 23152364435966
      },
      {
        "id": "gettid",
        "stack_id": 5365,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364431487,
        "end_timestamp_ns": 23152364432883
      },
      {
        "id": "gettid",
        "stack_id": 11674,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364428430,
        "end_timestamp_ns": 23152364429800
      },
      {
        "id": "gettid",
        "stack_id": 10346,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364425382,
        "end_timestamp_ns": 23152364426776
      },
      {
        "id": "gettid",
        "stack_id": 16111,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364421612,
        "end_timestamp_ns": 23152364423671
      },
      {
        "id": "gettid",
        "stack_id": 13723,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364417080,
        "end_timestamp_ns": 23152364418565
      },
      {
        "id": "gettid",
        "stack_id": 7553,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364412985,
        "end_timestamp_ns": 23152364414637
      },
      {
        "id": "gettid",
        "stack_id": 9365,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364408947,
        "end_timestamp_ns": 23152364410256
      },
      {
        "id": "gettid",
        "stack_id": 10932,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364405785,
        "end_timestamp_ns": 23152364407200
      },
      {
        "id": "gettid",
        "stack_id": 6990,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364401754,
        "end_timestamp_ns": 23152364403142
      },
      {
        "id": "gettid",
        "stack_id": 1187,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364398717,
        "end_timestamp_ns": 23152364400100
      },
      {
        "id": "gettid",
        "stack_id": 2221,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364395622,
        "end_timestamp_ns": 23152364397074
      },
      {
        "id": "gettid",
        "stack_id": 14070,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364390888,
        "end_timestamp_ns": 23152364392290
      },
      {
        "id": "gettid",
        "stack_id": 10869,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364387118,
        "end_timestamp_ns": 23152364388441
      },
      {
        "id": "gettid",
        "stack_id": 12971,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364382459,
        "end_timestamp_ns": 23152364383934
      },
      {
        "id": "gettid",
        "stack_id": 3911,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364379334,
        "end_timestamp_ns": 23152364380714
      },
      {
        "id": "gettid",
        "stack_id": 10356,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364376321,
        "end_timestamp_ns": 23152364377721
      },
      {
        "id": "gettid",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364373266,
        "end_timestamp_ns": 23152364374628
      },
      {
        "id": "gettid",
        "stack_id": 4446,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364369892,
        "end_timestamp_ns": 23152364371299
      },
      {
        "id": "gettid",
        "stack_id": 8902,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364365923,
        "end_timestamp_ns": 23152364367843
      },
      {
        "id": "gettid",
        "stack_id": 6869,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364361863,
        "end_timestamp_ns": 23152364363070
      },
      {
        "id": "gettid",
        "stack_id": 2541,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364358324,
        "end_timestamp_ns": 23152364359621
      },
      {
        "id": "gettid",
        "stack_id": 10980,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364353774,
        "end_timestamp_ns": 23152364355295
      },
      {
        "id": "gettid",
        "stack_id": 1359,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364350755,
        "end_timestamp_ns": 23152364352125
      },
      {
        "id": "gettid",
        "stack_id": 6109,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364347736,
        "end_timestamp_ns": 23152364349113
      },
      {
        "id": "gettid",
        "stack_id": 12646,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364344649,
        "end_timestamp_ns": 23152364346059
      },
      {
        "id": "gettid",
        "stack_id": 6410,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364341760,
        "end_timestamp_ns": 23152364343008
      },
      {
        "id": "gettid",
        "stack_id": 6410,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364338736,
        "end_timestamp_ns": 23152364340068
      },
      {
        "id": "gettid",
        "stack_id": 6410,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364334716,
        "end_timestamp_ns": 23152364336099
      },
      {
        "id": "gettid",
        "stack_id": 6410,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364331104,
        "end_timestamp_ns": 23152364332342
      },
      {
        "id": "gettid",
        "stack_id": 6410,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364326556,
        "end_timestamp_ns": 23152364327999
      },
      {
        "id": "gettid",
        "stack_id": 6410,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364323585,
        "end_timestamp_ns": 23152364324862
      },
      {
        "id": "gettid",
        "stack_id": 6410,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364320384,
        "end_timestamp_ns": 23152364321788
      },
      {
        "id": "gettid",
        "stack_id": 10099,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364316986,
        "end_timestamp_ns": 23152364318365
      },
      {
        "id": "gettid",
        "stack_id": 6937,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364313976,
        "end_timestamp_ns": 23152364315351
      },
      {
        "id": "gettid",
        "stack_id": 12566,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364310585,
        "end_timestamp_ns": 23152364312249
      },
      {
        "id": "gettid",
        "stack_id": 2578,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364306386,
        "end_timestamp_ns": 23152364307756
      },
      {
        "id": "gettid",
        "stack_id": 4756,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364302791,
        "end_timestamp_ns": 23152364304081
      },
      {
        "id": "gettid",
        "stack_id": 9666,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364298302,
        "end_timestamp_ns": 23152364299805
      },
      {
        "id": "gettid",
        "stack_id": 1470,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364295254,
        "end_timestamp_ns": 23152364296697
      },
      {
        "id": "gettid",
        "stack_id": 628,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364292102,
        "end_timestamp_ns": 23152364293558
      },
      {
        "id": "gettid",
        "stack_id": 14976,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364289065,
        "end_timestamp_ns": 23152364290444
      },
      {
        "id": "gettid",
        "stack_id": 11732,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364285998,
        "end_timestamp_ns": 23152364287427
      },
      {
        "id": "gettid",
        "stack_id": 10749,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364282558,
        "end_timestamp_ns": 23152364284316
      },
      {
        "id": "gettid",
        "stack_id": 15960,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364278216,
        "end_timestamp_ns": 23152364279497
      },
      {
        "id": "gettid",
        "stack_id": 76,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364274332,
        "end_timestamp_ns": 23152364275781
      },
      {
        "id": "gettid",
        "stack_id": 8707,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364270059,
        "end_timestamp_ns": 23152364271536
      },
      {
        "id": "gettid",
        "stack_id": 15309,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364266991,
        "end_timestamp_ns": 23152364268404
      },
      {
        "id": "gettid",
        "stack_id": 5554,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364264023,
        "end_timestamp_ns": 23152364265344
      },
      {
        "id": "gettid",
        "stack_id": 7056,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364261048,
        "end_timestamp_ns": 23152364262366
      },
      {
        "id": "gettid",
        "stack_id": 14639,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364258084,
        "end_timestamp_ns": 23152364259423
      },
      {
        "id": "gettid",
        "stack_id": 15207,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364254606,
        "end_timestamp_ns": 23152364256281
      },
      {
        "id": "gettid",
        "stack_id": 13130,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364250449,
        "end_timestamp_ns": 23152364251829
      },
      {
        "id": "gettid",
        "stack_id": 14195,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364246397,
        "end_timestamp_ns": 23152364247910
      },
      {
        "id": "gettid",
        "stack_id": 4981,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364242858,
        "end_timestamp_ns": 23152364244214
      },
      {
        "id": "gettid",
        "stack_id": 9543,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364239936,
        "end_timestamp_ns": 23152364241263
      },
      {
        "id": "gettid",
        "stack_id": 9359,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364236901,
        "end_timestamp_ns": 23152364238282
      },
      {
        "id": "gettid",
        "stack_id": 16238,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364233825,
        "end_timestamp_ns": 23152364235178
      },
      {
        "id": "gettid",
        "stack_id": 13874,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364230694,
        "end_timestamp_ns": 23152364232049
      },
      {
        "id": "gettid",
        "stack_id": 7057,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364226601,
        "end_timestamp_ns": 23152364228139
      },
      {
        "id": "gettid",
        "stack_id": 7868,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364222725,
        "end_timestamp_ns": 23152364224105
      },
      {
        "id": "gettid",
        "stack_id": 7104,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364218593,
        "end_timestamp_ns": 23152364219945
      },
      {
        "id": "gettid",
        "stack_id": 5162,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364215637,
        "end_timestamp_ns": 23152364216969
      },
      {
        "id": "gettid",
        "stack_id": 4434,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364212601,
        "end_timestamp_ns": 23152364213980
      },
      {
        "id": "gettid",
        "stack_id": 6828,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364209597,
        "end_timestamp_ns": 23152364210975
      },
      {
        "id": "gettid",
        "stack_id": 5066,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364206401,
        "end_timestamp_ns": 23152364207837
      },
      {
        "id": "gettid",
        "stack_id": 6617,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364202529,
        "end_timestamp_ns": 23152364204560
      },
      {
        "id": "gettid",
        "stack_id": 11932,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364197911,
        "end_timestamp_ns": 23152364199729
      },
      {
        "id": "gettid",
        "stack_id": 15841,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364193472,
        "end_timestamp_ns": 23152364195090
      },
      {
        "id": "gettid",
        "stack_id": 29,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364183959,
        "end_timestamp_ns": 23152364185602
      },
      {
        "id": "brk",
        "stack_id": 813,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364166217,
        "end_timestamp_ns": 23152364170646
      },
      {
        "id": "gettid",
        "stack_id": 1034,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364155927,
        "end_timestamp_ns": 23152364157621
      },
      {
        "id": "gettid",
        "stack_id": 15910,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364150853,
        "end_timestamp_ns": 23152364152824
      },
      {
        "id": "gettid",
        "stack_id": 6696,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364147159,
        "end_timestamp_ns": 23152364148505
      },
      {
        "id": "gettid",
        "stack_id": 1744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364144203,
        "end_timestamp_ns": 23152364145571
      },
      {
        "id": "gettid",
        "stack_id": 5491,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364141202,
        "end_timestamp_ns": 23152364142561
      },
      {
        "id": "gettid",
        "stack_id": 10848,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364138132,
        "end_timestamp_ns": 23152364139496
      },
      {
        "id": "gettid",
        "stack_id": 5112,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364134486,
        "end_timestamp_ns": 23152364136100
      },
      {
        "id": "gettid",
        "stack_id": 3548,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152364126416,
        "end_timestamp_ns": 23152364128721
      },
      {
        "id": "close",
        "stack_id": 14801,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363777130,
        "end_timestamp_ns": 23152363779418
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363773139,
        "end_timestamp_ns": 23152363774104
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363767393,
        "end_timestamp_ns": 23152363770696
      },
      {
        "id": "newfstatat",
        "stack_id": 10390,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363760232,
        "end_timestamp_ns": 23152363763047
      },
      {
        "id": "openat",
        "stack_id": 1148,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363749740,
        "end_timestamp_ns": 23152363758756
      },
      {
        "id": "readlink",
        "stack_id": 3579,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363740474,
        "end_timestamp_ns": 23152363746347
      },
      {
        "id": "readlink",
        "stack_id": 3579,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363735499,
        "end_timestamp_ns": 23152363739623
      },
      {
        "id": "readlink",
        "stack_id": 3579,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363731428,
        "end_timestamp_ns": 23152363734659
      },
      {
        "id": "readlink",
        "stack_id": 3579,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363727746,
        "end_timestamp_ns": 23152363730608
      },
      {
        "id": "readlink",
        "stack_id": 3579,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363724270,
        "end_timestamp_ns": 23152363726938
      },
      {
        "id": "readlink",
        "stack_id": 3579,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363720390,
        "end_timestamp_ns": 23152363723459
      },
      {
        "id": "readlink",
        "stack_id": 3579,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363717111,
        "end_timestamp_ns": 23152363719599
      },
      {
        "id": "readlink",
        "stack_id": 2215,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363713951,
        "end_timestamp_ns": 23152363716272
      },
      {
        "id": "readlink",
        "stack_id": 13179,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363703655,
        "end_timestamp_ns": 23152363712511
      },
      {
        "id": "readlink",
        "stack_id": 10852,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363700172,
        "end_timestamp_ns": 23152363702746
      },
      {
        "id": "readlink",
        "stack_id": 8963,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363696659,
        "end_timestamp_ns": 23152363699371
      },
      {
        "id": "readlink",
        "stack_id": 11116,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363692955,
        "end_timestamp_ns": 23152363695531
      },
      {
        "id": "newfstatat",
        "stack_id": 4146,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363687616,
        "end_timestamp_ns": 23152363690562
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363680838,
        "end_timestamp_ns": 23152363686561
      },
      {
        "id": "write",
        "stack_id": 8304,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363415803,
        "end_timestamp_ns": 23152363420112
      },
      {
        "id": "gettid",
        "stack_id": 806,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363411307,
        "end_timestamp_ns": 23152363413072
      },
      {
        "id": "write",
        "stack_id": 10541,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363393219,
        "end_timestamp_ns": 23152363409104
      },
      {
        "id": "gettid",
        "stack_id": 16254,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363386168,
        "end_timestamp_ns": 23152363388704
      },
      {
        "id": "fcntl",
        "stack_id": 5539,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363150369,
        "end_timestamp_ns": 23152363151120
      },
      {
        "id": "fcntl",
        "stack_id": 2813,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363148709,
        "end_timestamp_ns": 23152363149606
      },
      {
        "id": "fcntl",
        "stack_id": 2813,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363146853,
        "end_timestamp_ns": 23152363148035
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363142693,
        "end_timestamp_ns": 23152363146167
      },
      {
        "id": "gettid",
        "stack_id": 11235,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363137454,
        "end_timestamp_ns": 23152363138734
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363133900,
        "end_timestamp_ns": 23152363134789
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363131603,
        "end_timestamp_ns": 23152363132598
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363128528,
        "end_timestamp_ns": 23152363129853
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363044925,
        "end_timestamp_ns": 23152363127411
      },
      {
        "id": "newfstatat",
        "stack_id": 10390,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363037911,
        "end_timestamp_ns": 23152363040517
      },
      {
        "id": "fcntl",
        "stack_id": 5539,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363032274,
        "end_timestamp_ns": 23152363033135
      },
      {
        "id": "fcntl",
        "stack_id": 15050,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363030535,
        "end_timestamp_ns": 23152363031509
      },
      {
        "id": "fcntl",
        "stack_id": 15050,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363028614,
        "end_timestamp_ns": 23152363029872
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152363024187,
        "end_timestamp_ns": 23152363027861
      },
      {
        "id": "close",
        "stack_id": 12923,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362759542,
        "end_timestamp_ns": 23152362760811
      },
      {
        "id": "fcntl",
        "stack_id": 10241,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362757197,
        "end_timestamp_ns": 23152362758185
      },
      {
        "id": "fcntl",
        "stack_id": 10241,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362755177,
        "end_timestamp_ns": 23152362756414
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362751182,
        "end_timestamp_ns": 23152362754315
      },
      {
        "id": "access",
        "stack_id": 11733,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362742026,
        "end_timestamp_ns": 23152362749789
      },
      {
        "id": "fcntl",
        "stack_id": 178,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362739058,
        "end_timestamp_ns": 23152362739967
      },
      {
        "id": "fcntl",
        "stack_id": 178,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362737394,
        "end_timestamp_ns": 23152362738383
      },
      {
        "id": "fcntl",
        "stack_id": 178,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362733827,
        "end_timestamp_ns": 23152362736687
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362559521,
        "end_timestamp_ns": 23152362732687
      },
      {
        "id": "gettid",
        "stack_id": 2852,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362557260,
        "end_timestamp_ns": 23152362558255
      },
      {
        "id": "fstatfs",
        "stack_id": 1505,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362553558,
        "end_timestamp_ns": 23152362555248
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362549935,
        "end_timestamp_ns": 23152362552659
      },
      {
        "id": "newfstatat",
        "stack_id": 15831,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362547278,
        "end_timestamp_ns": 23152362549051
      },
      {
        "id": "mkdir",
        "stack_id": 1223,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362544515,
        "end_timestamp_ns": 23152362546565
      },
      {
        "id": "newfstatat",
        "stack_id": 12825,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362537213,
        "end_timestamp_ns": 23152362539166
      },
      {
        "id": "mkdir",
        "stack_id": 10486,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362534506,
        "end_timestamp_ns": 23152362536436
      },
      {
        "id": "newfstatat",
        "stack_id": 3335,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362531187,
        "end_timestamp_ns": 23152362533281
      },
      {
        "id": "mkdir",
        "stack_id": 3527,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362527566,
        "end_timestamp_ns": 23152362530335
      },
      {
        "id": "gettid",
        "stack_id": 14762,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362524363,
        "end_timestamp_ns": 23152362525542
      },
      {
        "id": "gettid",
        "stack_id": 9420,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362520275,
        "end_timestamp_ns": 23152362521549
      },
      {
        "id": "gettid",
        "stack_id": 12488,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362516213,
        "end_timestamp_ns": 23152362517088
      },
      {
        "id": "gettid",
        "stack_id": 12488,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362513103,
        "end_timestamp_ns": 23152362513995
      },
      {
        "id": "gettid",
        "stack_id": 12488,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362509915,
        "end_timestamp_ns": 23152362510820
      },
      {
        "id": "gettid",
        "stack_id": 12488,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362505132,
        "end_timestamp_ns": 23152362506009
      },
      {
        "id": "gettid",
        "stack_id": 12488,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362501832,
        "end_timestamp_ns": 23152362502707
      },
      {
        "id": "gettid",
        "stack_id": 12488,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362498667,
        "end_timestamp_ns": 23152362499606
      },
      {
        "id": "gettid",
        "stack_id": 12488,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362495488,
        "end_timestamp_ns": 23152362496423
      },
      {
        "id": "gettid",
        "stack_id": 12488,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362491771,
        "end_timestamp_ns": 23152362492748
      },
      {
        "id": "gettid",
        "stack_id": 15318,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362488064,
        "end_timestamp_ns": 23152362489344
      },
      {
        "id": "gettid",
        "stack_id": 4855,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362484150,
        "end_timestamp_ns": 23152362485273
      },
      {
        "id": "gettid",
        "stack_id": 2429,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362481346,
        "end_timestamp_ns": 23152362482531
      },
      {
        "id": "gettid",
        "stack_id": 13916,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362478544,
        "end_timestamp_ns": 23152362479720
      },
      {
        "id": "gettid",
        "stack_id": 7458,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362475805,
        "end_timestamp_ns": 23152362476959
      },
      {
        "id": "gettid",
        "stack_id": 13995,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362473056,
        "end_timestamp_ns": 23152362474197
      },
      {
        "id": "gettid",
        "stack_id": 4290,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362470279,
        "end_timestamp_ns": 23152362471404
      },
      {
        "id": "gettid",
        "stack_id": 11920,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362466540,
        "end_timestamp_ns": 23152362467780
      },
      {
        "id": "gettid",
        "stack_id": 13230,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362463077,
        "end_timestamp_ns": 23152362464069
      },
      {
        "id": "gettid",
        "stack_id": 2545,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362459914,
        "end_timestamp_ns": 23152362460894
      },
      {
        "id": "gettid",
        "stack_id": 1596,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362456706,
        "end_timestamp_ns": 23152362457697
      },
      {
        "id": "gettid",
        "stack_id": 15585,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362453556,
        "end_timestamp_ns": 23152362454549
      },
      {
        "id": "gettid",
        "stack_id": 8883,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362450369,
        "end_timestamp_ns": 23152362451352
      },
      {
        "id": "gettid",
        "stack_id": 2483,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362446997,
        "end_timestamp_ns": 23152362447968
      },
      {
        "id": "gettid",
        "stack_id": 5544,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362443820,
        "end_timestamp_ns": 23152362444839
      },
      {
        "id": "gettid",
        "stack_id": 7380,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362440697,
        "end_timestamp_ns": 23152362441673
      },
      {
        "id": "gettid",
        "stack_id": 5732,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362437474,
        "end_timestamp_ns": 23152362438491
      },
      {
        "id": "gettid",
        "stack_id": 5159,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362433499,
        "end_timestamp_ns": 23152362435047
      },
      {
        "id": "gettid",
        "stack_id": 3225,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362430089,
        "end_timestamp_ns": 23152362431151
      },
      {
        "id": "gettid",
        "stack_id": 4400,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362427311,
        "end_timestamp_ns": 23152362428448
      },
      {
        "id": "gettid",
        "stack_id": 11418,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362424543,
        "end_timestamp_ns": 23152362425696
      },
      {
        "id": "gettid",
        "stack_id": 11053,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362421739,
        "end_timestamp_ns": 23152362422884
      },
      {
        "id": "gettid",
        "stack_id": 8709,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362418942,
        "end_timestamp_ns": 23152362420094
      },
      {
        "id": "gettid",
        "stack_id": 4227,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362416087,
        "end_timestamp_ns": 23152362417300
      },
      {
        "id": "gettid",
        "stack_id": 14957,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362412091,
        "end_timestamp_ns": 23152362413269
      },
      {
        "id": "gettid",
        "stack_id": 8500,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362408794,
        "end_timestamp_ns": 23152362409791
      },
      {
        "id": "gettid",
        "stack_id": 10819,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362405652,
        "end_timestamp_ns": 23152362406656
      },
      {
        "id": "gettid",
        "stack_id": 13136,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362402469,
        "end_timestamp_ns": 23152362403471
      },
      {
        "id": "gettid",
        "stack_id": 11444,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362399303,
        "end_timestamp_ns": 23152362400294
      },
      {
        "id": "gettid",
        "stack_id": 15961,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362396205,
        "end_timestamp_ns": 23152362397154
      },
      {
        "id": "gettid",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362393131,
        "end_timestamp_ns": 23152362394059
      },
      {
        "id": "gettid",
        "stack_id": 4482,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362389997,
        "end_timestamp_ns": 23152362391003
      },
      {
        "id": "gettid",
        "stack_id": 7687,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362386866,
        "end_timestamp_ns": 23152362387854
      },
      {
        "id": "gettid",
        "stack_id": 4110,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362383745,
        "end_timestamp_ns": 23152362384736
      },
      {
        "id": "gettid",
        "stack_id": 14354,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362380352,
        "end_timestamp_ns": 23152362381404
      },
      {
        "id": "gettid",
        "stack_id": 11212,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362375987,
        "end_timestamp_ns": 23152362377242
      },
      {
        "id": "gettid",
        "stack_id": 14793,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362373188,
        "end_timestamp_ns": 23152362374350
      },
      {
        "id": "gettid",
        "stack_id": 11143,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362370386,
        "end_timestamp_ns": 23152362371549
      },
      {
        "id": "gettid",
        "stack_id": 9599,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362367574,
        "end_timestamp_ns": 23152362368731
      },
      {
        "id": "gettid",
        "stack_id": 5211,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362364750,
        "end_timestamp_ns": 23152362365927
      },
      {
        "id": "gettid",
        "stack_id": 7854,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362362028,
        "end_timestamp_ns": 23152362363174
      },
      {
        "id": "gettid",
        "stack_id": 6807,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362358489,
        "end_timestamp_ns": 23152362360072
      },
      {
        "id": "gettid",
        "stack_id": 8172,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362354739,
        "end_timestamp_ns": 23152362355734
      },
      {
        "id": "gettid",
        "stack_id": 9044,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362351588,
        "end_timestamp_ns": 23152362352578
      },
      {
        "id": "gettid",
        "stack_id": 16132,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362348289,
        "end_timestamp_ns": 23152362349342
      },
      {
        "id": "gettid",
        "stack_id": 16362,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362342995,
        "end_timestamp_ns": 23152362343975
      },
      {
        "id": "gettid",
        "stack_id": 14941,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362339562,
        "end_timestamp_ns": 23152362340646
      },
      {
        "id": "gettid",
        "stack_id": 3042,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362336436,
        "end_timestamp_ns": 23152362337418
      },
      {
        "id": "gettid",
        "stack_id": 7635,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362333263,
        "end_timestamp_ns": 23152362334246
      },
      {
        "id": "gettid",
        "stack_id": 7298,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362329719,
        "end_timestamp_ns": 23152362331101
      },
      {
        "id": "gettid",
        "stack_id": 8017,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362325416,
        "end_timestamp_ns": 23152362326733
      },
      {
        "id": "gettid",
        "stack_id": 13711,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362322023,
        "end_timestamp_ns": 23152362323352
      },
      {
        "id": "gettid",
        "stack_id": 7846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362319261,
        "end_timestamp_ns": 23152362320401
      },
      {
        "id": "gettid",
        "stack_id": 14176,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362316470,
        "end_timestamp_ns": 23152362317612
      },
      {
        "id": "gettid",
        "stack_id": 14087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362313663,
        "end_timestamp_ns": 23152362314823
      },
      {
        "id": "gettid",
        "stack_id": 1757,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362310847,
        "end_timestamp_ns": 23152362312007
      },
      {
        "id": "gettid",
        "stack_id": 13590,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362307781,
        "end_timestamp_ns": 23152362309227
      },
      {
        "id": "gettid",
        "stack_id": 2476,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362303848,
        "end_timestamp_ns": 23152362305015
      },
      {
        "id": "gettid",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362300703,
        "end_timestamp_ns": 23152362301640
      },
      {
        "id": "gettid",
        "stack_id": 7180,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362297493,
        "end_timestamp_ns": 23152362298539
      },
      {
        "id": "gettid",
        "stack_id": 9161,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362294313,
        "end_timestamp_ns": 23152362295308
      },
      {
        "id": "gettid",
        "stack_id": 4671,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362291191,
        "end_timestamp_ns": 23152362292168
      },
      {
        "id": "gettid",
        "stack_id": 3300,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362288042,
        "end_timestamp_ns": 23152362289035
      },
      {
        "id": "gettid",
        "stack_id": 5155,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362284795,
        "end_timestamp_ns": 23152362285880
      },
      {
        "id": "gettid",
        "stack_id": 2180,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362281200,
        "end_timestamp_ns": 23152362282188
      },
      {
        "id": "gettid",
        "stack_id": 9375,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362278036,
        "end_timestamp_ns": 23152362279029
      },
      {
        "id": "gettid",
        "stack_id": 3696,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362274476,
        "end_timestamp_ns": 23152362275634
      },
      {
        "id": "gettid",
        "stack_id": 15954,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362270217,
        "end_timestamp_ns": 23152362271404
      },
      {
        "id": "gettid",
        "stack_id": 6316,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362267451,
        "end_timestamp_ns": 23152362268622
      },
      {
        "id": "gettid",
        "stack_id": 3329,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362264631,
        "end_timestamp_ns": 23152362265782
      },
      {
        "id": "gettid",
        "stack_id": 3080,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362261810,
        "end_timestamp_ns": 23152362262956
      },
      {
        "id": "gettid",
        "stack_id": 11442,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362258951,
        "end_timestamp_ns": 23152362260128
      },
      {
        "id": "gettid",
        "stack_id": 647,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362256136,
        "end_timestamp_ns": 23152362257318
      },
      {
        "id": "gettid",
        "stack_id": 15542,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362252349,
        "end_timestamp_ns": 23152362253559
      },
      {
        "id": "gettid",
        "stack_id": 10282,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362248821,
        "end_timestamp_ns": 23152362249804
      },
      {
        "id": "gettid",
        "stack_id": 890,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362245647,
        "end_timestamp_ns": 23152362246638
      },
      {
        "id": "gettid",
        "stack_id": 6277,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362242425,
        "end_timestamp_ns": 23152362243422
      },
      {
        "id": "gettid",
        "stack_id": 4658,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362239005,
        "end_timestamp_ns": 23152362240003
      },
      {
        "id": "gettid",
        "stack_id": 12938,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362235813,
        "end_timestamp_ns": 23152362236840
      },
      {
        "id": "gettid",
        "stack_id": 3681,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362232644,
        "end_timestamp_ns": 23152362233636
      },
      {
        "id": "gettid",
        "stack_id": 5658,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362229502,
        "end_timestamp_ns": 23152362230484
      },
      {
        "id": "gettid",
        "stack_id": 10080,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362226344,
        "end_timestamp_ns": 23152362227360
      },
      {
        "id": "gettid",
        "stack_id": 4368,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362222521,
        "end_timestamp_ns": 23152362223905
      },
      {
        "id": "gettid",
        "stack_id": 936,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362218235,
        "end_timestamp_ns": 23152362219423
      },
      {
        "id": "gettid",
        "stack_id": 5758,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362215011,
        "end_timestamp_ns": 23152362216174
      },
      {
        "id": "gettid",
        "stack_id": 9624,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362211851,
        "end_timestamp_ns": 23152362213029
      },
      {
        "id": "gettid",
        "stack_id": 2267,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362208292,
        "end_timestamp_ns": 23152362209499
      },
      {
        "id": "newfstatat",
        "stack_id": 5126,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362202445,
        "end_timestamp_ns": 23152362207287
      },
      {
        "id": "gettid",
        "stack_id": 4281,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362197380,
        "end_timestamp_ns": 23152362198452
      },
      {
        "id": "gettid",
        "stack_id": 8766,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362193026,
        "end_timestamp_ns": 23152362194066
      },
      {
        "id": "newfstatat",
        "stack_id": 4263,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362184526,
        "end_timestamp_ns": 23152362190988
      },
      {
        "id": "close",
        "stack_id": 11822,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362177982,
        "end_timestamp_ns": 23152362179313
      },
      {
        "id": "getdents64",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362176033,
        "end_timestamp_ns": 23152362177172
      },
      {
        "id": "getdents64",
        "stack_id": 13006,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362165374,
        "end_timestamp_ns": 23152362172246
      },
      {
        "id": "newfstatat",
        "stack_id": 13867,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362159966,
        "end_timestamp_ns": 23152362162020
      },
      {
        "id": "openat",
        "stack_id": 10265,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362154195,
        "end_timestamp_ns": 23152362159158
      },
      {
        "id": "gettid",
        "stack_id": 5264,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362150836,
        "end_timestamp_ns": 23152362152206
      },
      {
        "id": "gettid",
        "stack_id": 15532,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362146879,
        "end_timestamp_ns": 23152362148142
      },
      {
        "id": "gettid",
        "stack_id": 10806,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362142965,
        "end_timestamp_ns": 23152362143976
      },
      {
        "id": "gettid",
        "stack_id": 3440,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362138841,
        "end_timestamp_ns": 23152362139954
      },
      {
        "id": "write",
        "stack_id": 16375,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362124558,
        "end_timestamp_ns": 23152362134562
      },
      {
        "id": "gettid",
        "stack_id": 14065,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152362115892,
        "end_timestamp_ns": 23152362117865
      },
      {
        "id": "getpid",
        "stack_id": 13953,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361831421,
        "end_timestamp_ns": 23152361832536
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361827596,
        "end_timestamp_ns": 23152361828494
      },
      {
        "id": "read",
        "stack_id": 1095,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361821411,
        "end_timestamp_ns": 23152361825916
      },
      {
        "id": "openat",
        "stack_id": 3509,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361808344,
        "end_timestamp_ns": 23152361819614
      },
      {
        "id": "gettid",
        "stack_id": 2812,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361804055,
        "end_timestamp_ns": 23152361805344
      },
      {
        "id": "getpid",
        "stack_id": 5592,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361801434,
        "end_timestamp_ns": 23152361803242
      },
      {
        "id": "uname",
        "stack_id": 10310,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361799062,
        "end_timestamp_ns": 23152361800495
      },
      {
        "id": "getpid",
        "stack_id": 14066,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361786394,
        "end_timestamp_ns": 23152361787998
      },
      {
        "id": "close",
        "stack_id": 13098,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361500272,
        "end_timestamp_ns": 23152361501624
      },
      {
        "id": "getdents64",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361498247,
        "end_timestamp_ns": 23152361499435
      },
      {
        "id": "getdents64",
        "stack_id": 13006,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361485894,
        "end_timestamp_ns": 23152361495744
      },
      {
        "id": "newfstatat",
        "stack_id": 13867,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361479844,
        "end_timestamp_ns": 23152361482312
      },
      {
        "id": "openat",
        "stack_id": 9587,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361474683,
        "end_timestamp_ns": 23152361478996
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152361459976,
        "end_timestamp_ns": 23152361465327
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152361453473,
        "end_timestamp_ns": 23152361459260
      },
      {
        "id": "close",
        "stack_id": 8375,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361457657,
        "end_timestamp_ns": 23152361458566
      },
      {
        "id": "write",
        "stack_id": 9061,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361455669,
        "end_timestamp_ns": 23152361457019
      },
      {
        "id": "openat",
        "stack_id": 15793,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361446807,
        "end_timestamp_ns": 23152361454966
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152361447963,
        "end_timestamp_ns": 23152361452734
      },
      {
        "id": "gettid",
        "stack_id": 10993,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152361446033,
        "end_timestamp_ns": 23152361446966
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152361444115,
        "end_timestamp_ns": 23152361444977
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152361442656,
        "end_timestamp_ns": 23152361443416
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 12279,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361438442,
        "end_timestamp_ns": 23152361443325
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081450,
        "start_timestamp_ns": 23152361440377,
        "end_timestamp_ns": 23152361441756
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361422551,
        "end_timestamp_ns": 23152361437558
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7346,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361417207,
        "end_timestamp_ns": 23152361421750
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361401530,
        "end_timestamp_ns": 23152361409020
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081449,
        "start_timestamp_ns": 23152361398239,
        "end_timestamp_ns": 23152361403098
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361394714,
        "end_timestamp_ns": 23152361400723
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081449,
        "start_timestamp_ns": 23152361394036,
        "end_timestamp_ns": 23152361397552
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081449,
        "start_timestamp_ns": 23152361383624,
        "end_timestamp_ns": 23152361393271
      },
      {
        "id": "close",
        "stack_id": 15092,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361390624,
        "end_timestamp_ns": 23152361391710
      },
      {
        "id": "write",
        "stack_id": 7853,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361388023,
        "end_timestamp_ns": 23152361389832
      },
      {
        "id": "openat",
        "stack_id": 15279,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361372439,
        "end_timestamp_ns": 23152361387231
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081449,
        "start_timestamp_ns": 23152361375408,
        "end_timestamp_ns": 23152361382867
      },
      {
        "id": "gettid",
        "stack_id": 10993,
        "pid_tgid": 850236021081449,
        "start_timestamp_ns": 23152361372809,
        "end_timestamp_ns": 23152361374099
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081449,
        "start_timestamp_ns": 23152361370229,
        "end_timestamp_ns": 23152361371139
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081449,
        "start_timestamp_ns": 23152361368613,
        "end_timestamp_ns": 23152361369501
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 10446,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361364643,
        "end_timestamp_ns": 23152361368890
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081449,
        "start_timestamp_ns": 23152361366047,
        "end_timestamp_ns": 23152361367760
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361347146,
        "end_timestamp_ns": 23152361363864
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 8958,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361341437,
        "end_timestamp_ns": 23152361346281
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361325382,
        "end_timestamp_ns": 23152361331235
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361319884,
        "end_timestamp_ns": 23152361324722
      },
      {
        "id": "brk",
        "stack_id": 813,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361300068,
        "end_timestamp_ns": 23152361309076
      },
      {
        "id": "sync_file_range",
        "stack_id": 11450,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361295801,
        "end_timestamp_ns": 23152361297419
      },
      {
        "id": "fstatfs",
        "stack_id": 8270,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361291965,
        "end_timestamp_ns": 23152361294996
      },
      {
        "id": "fcntl",
        "stack_id": 7947,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361289238,
        "end_timestamp_ns": 23152361290546
      },
      {
        "id": "fcntl",
        "stack_id": 7947,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361286820,
        "end_timestamp_ns": 23152361288416
      },
      {
        "id": "openat",
        "stack_id": 5546,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361270618,
        "end_timestamp_ns": 23152361285833
      },
      {
        "id": "rename",
        "stack_id": 14853,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361241183,
        "end_timestamp_ns": 23152361260726
      },
      {
        "id": "access",
        "stack_id": 7918,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361228647,
        "end_timestamp_ns": 23152361234930
      },
      {
        "id": "newfstatat",
        "stack_id": 8057,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361225241,
        "end_timestamp_ns": 23152361227584
      },
      {
        "id": "mkdir",
        "stack_id": 8889,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361220830,
        "end_timestamp_ns": 23152361224428
      },
      {
        "id": "getcwd",
        "stack_id": 16023,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361215514,
        "end_timestamp_ns": 23152361218706
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361130706,
        "end_timestamp_ns": 23152361131894
      },
      {
        "id": "read",
        "stack_id": 1095,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361067879,
        "end_timestamp_ns": 23152361124600
      },
      {
        "id": "openat",
        "stack_id": 725,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361055360,
        "end_timestamp_ns": 23152361064722
      },
      {
        "id": "futex",
        "stack_id": 14643,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361051247,
        "end_timestamp_ns": 23152361052562
      },
      {
        "id": "newfstatat",
        "stack_id": 4632,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361044699,
        "end_timestamp_ns": 23152361047977
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361036750,
        "end_timestamp_ns": 23152361037988
      },
      {
        "id": "munmap",
        "stack_id": 8469,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152361022942,
        "end_timestamp_ns": 23152361035182
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152360790981,
        "end_timestamp_ns": 23152360792505
      },
      {
        "id": "read",
        "stack_id": 11972,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152360668642,
        "end_timestamp_ns": 23152360789714
      },
      {
        "id": "newfstatat",
        "stack_id": 10390,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152360664312,
        "end_timestamp_ns": 23152360667410
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152360421837,
        "end_timestamp_ns": 23152360428600
      },
      {
        "id": "fcntl",
        "stack_id": 5539,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152360137305,
        "end_timestamp_ns": 23152360138588
      },
      {
        "id": "fcntl",
        "stack_id": 1320,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152360134955,
        "end_timestamp_ns": 23152360136002
      },
      {
        "id": "fcntl",
        "stack_id": 1320,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152360131083,
        "end_timestamp_ns": 23152360134213
      },
      {
        "id": "openat",
        "stack_id": 725,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359942317,
        "end_timestamp_ns": 23152360129173
      },
      {
        "id": "write",
        "stack_id": 3808,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359513664,
        "end_timestamp_ns": 23152359518167
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152359514496,
        "end_timestamp_ns": 23152359515638
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152359512546,
        "end_timestamp_ns": 23152359513638
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081448,
        "start_timestamp_ns": 23152359509260,
        "end_timestamp_ns": 23152359511435
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 11375,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359504271,
        "end_timestamp_ns": 23152359509249
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359489010,
        "end_timestamp_ns": 23152359503383
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 16209,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359483249,
        "end_timestamp_ns": 23152359488084
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152359475049,
        "end_timestamp_ns": 23152359475982
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152359473349,
        "end_timestamp_ns": 23152359474267
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359449061,
        "end_timestamp_ns": 23152359474164
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081447,
        "start_timestamp_ns": 23152359470428,
        "end_timestamp_ns": 23152359472368
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359444960,
        "end_timestamp_ns": 23152359448312
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 7398,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359420309,
        "end_timestamp_ns": 23152359443934
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359369589,
        "end_timestamp_ns": 23152359419244
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 6490,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359363435,
        "end_timestamp_ns": 23152359368730
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359327428,
        "end_timestamp_ns": 23152359352623
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 940,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152359329970,
        "end_timestamp_ns": 23152359330934
      },
      {
        "id": "set_robust_list",
        "stack_id": 9539,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152359328336,
        "end_timestamp_ns": 23152359329252
      },
      {
        "id": "rseq",
        "stack_id": 10636,
        "pid_tgid": 850236021081446,
        "start_timestamp_ns": 23152359324984,
        "end_timestamp_ns": 23152359327373
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359322020,
        "end_timestamp_ns": 23152359326632
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 14226,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359297546,
        "end_timestamp_ns": 23152359320745
      },
      {
        "id": "clone3",
        "stack_id": 767,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359242295,
        "end_timestamp_ns": 23152359296427
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 8888,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359216582,
        "end_timestamp_ns": 23152359241301
      },
      {
        "id": "mprotect",
        "stack_id": 846,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359167846,
        "end_timestamp_ns": 23152359187278
      },
      {
        "id": "mmap",
        "stack_id": -17,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359161585,
        "end_timestamp_ns": 23152359167225
      },
      {
        "id": "rt_sigprocmask",
        "stack_id": 8387,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359159762,
        "end_timestamp_ns": 23152359160566
      },
      {
        "id": "rt_sigaction",
        "stack_id": 3219,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359157925,
        "end_timestamp_ns": 23152359159120
      },
      {
        "id": "write",
        "stack_id": 12565,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359120634,
        "end_timestamp_ns": 23152359151211
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359086986,
        "end_timestamp_ns": 23152359087800
      },
      {
        "id": "read",
        "stack_id": 4783,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359083957,
        "end_timestamp_ns": 23152359084995
      },
      {
        "id": "lseek",
        "stack_id": 4182,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359082188,
        "end_timestamp_ns": 23152359083248
      },
      {
        "id": "read",
        "stack_id": 4783,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359079251,
        "end_timestamp_ns": 23152359081078
      },
      {
        "id": "newfstatat",
        "stack_id": 10390,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359076973,
        "end_timestamp_ns": 23152359078203
      },
      {
        "id": "newfstatat",
        "stack_id": 13834,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359074497,
        "end_timestamp_ns": 23152359076169
      },
      {
        "id": "openat",
        "stack_id": 187,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359067968,
        "end_timestamp_ns": 23152359073770
      },
      {
        "id": "write",
        "stack_id": 7613,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359057962,
        "end_timestamp_ns": 23152359061549
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359055121,
        "end_timestamp_ns": 23152359055855
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359053682,
        "end_timestamp_ns": 23152359054411
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359052290,
        "end_timestamp_ns": 23152359053018
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359050896,
        "end_timestamp_ns": 23152359051626
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359049493,
        "end_timestamp_ns": 23152359050221
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359048092,
        "end_timestamp_ns": 23152359048821
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359046689,
        "end_timestamp_ns": 23152359047425
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359045296,
        "end_timestamp_ns": 23152359046024
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359043843,
        "end_timestamp_ns": 23152359044577
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359042442,
        "end_timestamp_ns": 23152359043177
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359041042,
        "end_timestamp_ns": 23152359041774
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359039633,
        "end_timestamp_ns": 23152359040367
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359038225,
        "end_timestamp_ns": 23152359038959
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359036819,
        "end_timestamp_ns": 23152359037551
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359035413,
        "end_timestamp_ns": 23152359036145
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359034006,
        "end_timestamp_ns": 23152359034741
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359032602,
        "end_timestamp_ns": 23152359033338
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359031207,
        "end_timestamp_ns": 23152359031936
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359029813,
        "end_timestamp_ns": 23152359030542
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359028411,
        "end_timestamp_ns": 23152359029140
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359027000,
        "end_timestamp_ns": 23152359027731
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359025598,
        "end_timestamp_ns": 23152359026330
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359024198,
        "end_timestamp_ns": 23152359024926
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359022799,
        "end_timestamp_ns": 23152359023527
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359021403,
        "end_timestamp_ns": 23152359022135
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359019999,
        "end_timestamp_ns": 23152359020730
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359018605,
        "end_timestamp_ns": 23152359019335
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359017205,
        "end_timestamp_ns": 23152359017935
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359015798,
        "end_timestamp_ns": 23152359016531
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359014404,
        "end_timestamp_ns": 23152359015136
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359012999,
        "end_timestamp_ns": 23152359013730
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359011592,
        "end_timestamp_ns": 23152359012322
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359010183,
        "end_timestamp_ns": 23152359010916
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359008779,
        "end_timestamp_ns": 23152359009510
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359007375,
        "end_timestamp_ns": 23152359008105
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359005974,
        "end_timestamp_ns": 23152359006706
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359004562,
        "end_timestamp_ns": 23152359005300
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359003158,
        "end_timestamp_ns": 23152359003889
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359001754,
        "end_timestamp_ns": 23152359002491
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152359000356,
        "end_timestamp_ns": 23152359001089
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358998952,
        "end_timestamp_ns": 23152358999684
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358997555,
        "end_timestamp_ns": 23152358998285
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358996160,
        "end_timestamp_ns": 23152358996889
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358994767,
        "end_timestamp_ns": 23152358995495
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358993363,
        "end_timestamp_ns": 23152358994095
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358991961,
        "end_timestamp_ns": 23152358992691
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358990563,
        "end_timestamp_ns": 23152358991297
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358989163,
        "end_timestamp_ns": 23152358989891
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358987762,
        "end_timestamp_ns": 23152358988493
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358986366,
        "end_timestamp_ns": 23152358987096
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358984971,
        "end_timestamp_ns": 23152358985700
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358983576,
        "end_timestamp_ns": 23152358984308
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358982174,
        "end_timestamp_ns": 23152358982906
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358980776,
        "end_timestamp_ns": 23152358981510
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358979374,
        "end_timestamp_ns": 23152358980103
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358977975,
        "end_timestamp_ns": 23152358978707
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358976573,
        "end_timestamp_ns": 23152358977308
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358975175,
        "end_timestamp_ns": 23152358975907
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358973769,
        "end_timestamp_ns": 23152358974508
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358972372,
        "end_timestamp_ns": 23152358973102
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358970962,
        "end_timestamp_ns": 23152358971695
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358969559,
        "end_timestamp_ns": 23152358970291
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358968161,
        "end_timestamp_ns": 23152358968893
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358966759,
        "end_timestamp_ns": 23152358967489
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358965359,
        "end_timestamp_ns": 23152358966092
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358963960,
        "end_timestamp_ns": 23152358964690
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358962565,
        "end_timestamp_ns": 23152358963295
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358961163,
        "end_timestamp_ns": 23152358961893
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358959768,
        "end_timestamp_ns": 23152358960498
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358958370,
        "end_timestamp_ns": 23152358959096
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358956969,
        "end_timestamp_ns": 23152358957698
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358955569,
        "end_timestamp_ns": 23152358956298
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358954162,
        "end_timestamp_ns": 23152358954897
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358952758,
        "end_timestamp_ns": 23152358953489
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358951353,
        "end_timestamp_ns": 23152358952087
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358949949,
        "end_timestamp_ns": 23152358950684
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358948555,
        "end_timestamp_ns": 23152358949285
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358947154,
        "end_timestamp_ns": 23152358947886
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358945751,
        "end_timestamp_ns": 23152358946480
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358944337,
        "end_timestamp_ns": 23152358945069
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358942928,
        "end_timestamp_ns": 23152358943664
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358941529,
        "end_timestamp_ns": 23152358942262
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358940120,
        "end_timestamp_ns": 23152358940853
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358938704,
        "end_timestamp_ns": 23152358939447
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358937302,
        "end_timestamp_ns": 23152358938037
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358935904,
        "end_timestamp_ns": 23152358936636
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358934507,
        "end_timestamp_ns": 23152358935238
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358933103,
        "end_timestamp_ns": 23152358933836
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358931702,
        "end_timestamp_ns": 23152358932431
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358930289,
        "end_timestamp_ns": 23152358931021
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358928883,
        "end_timestamp_ns": 23152358929615
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358927475,
        "end_timestamp_ns": 23152358928211
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358926083,
        "end_timestamp_ns": 23152358926810
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358924691,
        "end_timestamp_ns": 23152358925420
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358923292,
        "end_timestamp_ns": 23152358924022
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358921883,
        "end_timestamp_ns": 23152358922617
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358920488,
        "end_timestamp_ns": 23152358921218
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358919093,
        "end_timestamp_ns": 23152358919824
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358917688,
        "end_timestamp_ns": 23152358918419
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358916285,
        "end_timestamp_ns": 23152358917016
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358914879,
        "end_timestamp_ns": 23152358915618
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358913480,
        "end_timestamp_ns": 23152358914213
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358912078,
        "end_timestamp_ns": 23152358912810
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358910673,
        "end_timestamp_ns": 23152358911405
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358909262,
        "end_timestamp_ns": 23152358909995
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358907858,
        "end_timestamp_ns": 23152358908588
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358906453,
        "end_timestamp_ns": 23152358907186
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358905049,
        "end_timestamp_ns": 23152358905779
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358903647,
        "end_timestamp_ns": 23152358904382
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358902251,
        "end_timestamp_ns": 23152358902981
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358900857,
        "end_timestamp_ns": 23152358901586
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358899460,
        "end_timestamp_ns": 23152358900192
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358898014,
        "end_timestamp_ns": 23152358898744
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358896614,
        "end_timestamp_ns": 23152358897343
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358895221,
        "end_timestamp_ns": 23152358895948
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358893817,
        "end_timestamp_ns": 23152358894550
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358892408,
        "end_timestamp_ns": 23152358893144
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358891014,
        "end_timestamp_ns": 23152358891743
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358889607,
        "end_timestamp_ns": 23152358890343
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358888212,
        "end_timestamp_ns": 23152358888940
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358886815,
        "end_timestamp_ns": 23152358887546
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358885411,
        "end_timestamp_ns": 23152358886144
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358884004,
        "end_timestamp_ns": 23152358884734
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358882606,
        "end_timestamp_ns": 23152358883339
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358881209,
        "end_timestamp_ns": 23152358881939
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358879807,
        "end_timestamp_ns": 23152358880542
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358878399,
        "end_timestamp_ns": 23152358879134
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358876988,
        "end_timestamp_ns": 23152358877722
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358875587,
        "end_timestamp_ns": 23152358876323
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358874184,
        "end_timestamp_ns": 23152358874916
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358872784,
        "end_timestamp_ns": 23152358873519
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358871381,
        "end_timestamp_ns": 23152358872111
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358869976,
        "end_timestamp_ns": 23152358870706
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358868574,
        "end_timestamp_ns": 23152358869303
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358867178,
        "end_timestamp_ns": 23152358867908
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358865777,
        "end_timestamp_ns": 23152358866507
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358864381,
        "end_timestamp_ns": 23152358865109
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358862984,
        "end_timestamp_ns": 23152358863715
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358861584,
        "end_timestamp_ns": 23152358862312
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358860186,
        "end_timestamp_ns": 23152358860915
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358858787,
        "end_timestamp_ns": 23152358859518
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358857394,
        "end_timestamp_ns": 23152358858123
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358855986,
        "end_timestamp_ns": 23152358856717
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358854580,
        "end_timestamp_ns": 23152358855310
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358853146,
        "end_timestamp_ns": 23152358853886
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358851627,
        "end_timestamp_ns": 23152358852443
      },
      {
        "id": "write",
        "stack_id": 5236,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358847682,
        "end_timestamp_ns": 23152358849475
      },
      {
        "id": "ioctl",
        "stack_id": 6380,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358845929,
        "end_timestamp_ns": 23152358846934
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358843486,
        "end_timestamp_ns": 23152358844219
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358841993,
        "end_timestamp_ns": 23152358842752
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358839672,
        "end_timestamp_ns": 23152358840436
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358838267,
        "end_timestamp_ns": 23152358839026
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358836710,
        "end_timestamp_ns": 23152358837506
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358833158,
        "end_timestamp_ns": 23152358833929
      },
      {
        "id": "ioctl",
        "stack_id": 15736,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358831526,
        "end_timestamp_ns": 23152358832443
      },
      {
        "id": "write",
        "stack_id": 7613,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358821630,
        "end_timestamp_ns": 23152358828646
      },
      {
        "id": "ioctl",
        "stack_id": 1210,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358819746,
        "end_timestamp_ns": 23152358820829
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358817754,
        "end_timestamp_ns": 23152358818521
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358816227,
        "end_timestamp_ns": 23152358816989
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358814798,
        "end_timestamp_ns": 23152358815557
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358813362,
        "end_timestamp_ns": 23152358814125
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358811926,
        "end_timestamp_ns": 23152358812690
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358810494,
        "end_timestamp_ns": 23152358811257
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358809068,
        "end_timestamp_ns": 23152358809828
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358807637,
        "end_timestamp_ns": 23152358808396
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358806204,
        "end_timestamp_ns": 23152358806966
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358804758,
        "end_timestamp_ns": 23152358805518
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358803332,
        "end_timestamp_ns": 23152358804090
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358801904,
        "end_timestamp_ns": 23152358802666
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358800480,
        "end_timestamp_ns": 23152358801239
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358799059,
        "end_timestamp_ns": 23152358799818
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358797629,
        "end_timestamp_ns": 23152358798388
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358796196,
        "end_timestamp_ns": 23152358796960
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358794770,
        "end_timestamp_ns": 23152358795525
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358793345,
        "end_timestamp_ns": 23152358794105
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358791914,
        "end_timestamp_ns": 23152358792673
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358790486,
        "end_timestamp_ns": 23152358791245
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358789055,
        "end_timestamp_ns": 23152358789816
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358787626,
        "end_timestamp_ns": 23152358788389
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358786195,
        "end_timestamp_ns": 23152358786958
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358784763,
        "end_timestamp_ns": 23152358785523
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358783333,
        "end_timestamp_ns": 23152358784093
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358781886,
        "end_timestamp_ns": 23152358782648
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358780454,
        "end_timestamp_ns": 23152358781216
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358779021,
        "end_timestamp_ns": 23152358779783
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358777596,
        "end_timestamp_ns": 23152358778357
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358776170,
        "end_timestamp_ns": 23152358776932
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358774734,
        "end_timestamp_ns": 23152358775494
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358773305,
        "end_timestamp_ns": 23152358774065
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358771876,
        "end_timestamp_ns": 23152358772635
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358770444,
        "end_timestamp_ns": 23152358771204
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358769019,
        "end_timestamp_ns": 23152358769776
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358767596,
        "end_timestamp_ns": 23152358768355
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358766176,
        "end_timestamp_ns": 23152358766933
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358764748,
        "end_timestamp_ns": 23152358765511
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358763315,
        "end_timestamp_ns": 23152358764080
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358761886,
        "end_timestamp_ns": 23152358762644
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358760457,
        "end_timestamp_ns": 23152358761216
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358759011,
        "end_timestamp_ns": 23152358759771
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358757580,
        "end_timestamp_ns": 23152358758339
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358756153,
        "end_timestamp_ns": 23152358756913
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358754724,
        "end_timestamp_ns": 23152358755482
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358753274,
        "end_timestamp_ns": 23152358754035
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358751841,
        "end_timestamp_ns": 23152358752603
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358750406,
        "end_timestamp_ns": 23152358751173
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358748980,
        "end_timestamp_ns": 23152358749741
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358747547,
        "end_timestamp_ns": 23152358748309
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358746117,
        "end_timestamp_ns": 23152358746877
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358744688,
        "end_timestamp_ns": 23152358745449
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358743256,
        "end_timestamp_ns": 23152358744015
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358741825,
        "end_timestamp_ns": 23152358742586
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358740397,
        "end_timestamp_ns": 23152358741156
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358738965,
        "end_timestamp_ns": 23152358739728
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358737517,
        "end_timestamp_ns": 23152358738279
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358736083,
        "end_timestamp_ns": 23152358736846
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358734656,
        "end_timestamp_ns": 23152358735415
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358733235,
        "end_timestamp_ns": 23152358733991
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358731806,
        "end_timestamp_ns": 23152358732570
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358730378,
        "end_timestamp_ns": 23152358731137
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358728956,
        "end_timestamp_ns": 23152358729714
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358727526,
        "end_timestamp_ns": 23152358728285
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358726105,
        "end_timestamp_ns": 23152358726864
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358724678,
        "end_timestamp_ns": 23152358725438
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358723248,
        "end_timestamp_ns": 23152358724009
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358721816,
        "end_timestamp_ns": 23152358722577
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358720391,
        "end_timestamp_ns": 23152358721151
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358718943,
        "end_timestamp_ns": 23152358719707
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358717518,
        "end_timestamp_ns": 23152358718279
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358716084,
        "end_timestamp_ns": 23152358716846
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358714654,
        "end_timestamp_ns": 23152358715420
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358713219,
        "end_timestamp_ns": 23152358713985
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358711788,
        "end_timestamp_ns": 23152358712547
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358710125,
        "end_timestamp_ns": 23152358710887
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358708701,
        "end_timestamp_ns": 23152358709460
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358707270,
        "end_timestamp_ns": 23152358708029
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358705843,
        "end_timestamp_ns": 23152358706603
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358704411,
        "end_timestamp_ns": 23152358705174
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358702990,
        "end_timestamp_ns": 23152358703749
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358701570,
        "end_timestamp_ns": 23152358702327
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358700144,
        "end_timestamp_ns": 23152358700903
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358698715,
        "end_timestamp_ns": 23152358699475
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358697284,
        "end_timestamp_ns": 23152358698043
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358695853,
        "end_timestamp_ns": 23152358696613
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358694424,
        "end_timestamp_ns": 23152358695184
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358692999,
        "end_timestamp_ns": 23152358693759
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358691572,
        "end_timestamp_ns": 23152358692333
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358690145,
        "end_timestamp_ns": 23152358690905
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358688714,
        "end_timestamp_ns": 23152358689475
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358687267,
        "end_timestamp_ns": 23152358688030
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358685834,
        "end_timestamp_ns": 23152358686597
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358684394,
        "end_timestamp_ns": 23152358685162
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358682962,
        "end_timestamp_ns": 23152358683722
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358681534,
        "end_timestamp_ns": 23152358682296
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358680104,
        "end_timestamp_ns": 23152358680865
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358678668,
        "end_timestamp_ns": 23152358679433
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358677237,
        "end_timestamp_ns": 23152358677999
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358675810,
        "end_timestamp_ns": 23152358676567
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358674382,
        "end_timestamp_ns": 23152358675144
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358672949,
        "end_timestamp_ns": 23152358673710
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358671525,
        "end_timestamp_ns": 23152358672282
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358670104,
        "end_timestamp_ns": 23152358670861
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358668682,
        "end_timestamp_ns": 23152358669441
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358667259,
        "end_timestamp_ns": 23152358668018
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358665834,
        "end_timestamp_ns": 23152358666592
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358664353,
        "end_timestamp_ns": 23152358665114
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358662931,
        "end_timestamp_ns": 23152358663690
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358661506,
        "end_timestamp_ns": 23152358662266
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358660076,
        "end_timestamp_ns": 23152358660836
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358658650,
        "end_timestamp_ns": 23152358659410
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358657220,
        "end_timestamp_ns": 23152358657981
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358655786,
        "end_timestamp_ns": 23152358656548
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358654354,
        "end_timestamp_ns": 23152358655115
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358652905,
        "end_timestamp_ns": 23152358653665
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358651476,
        "end_timestamp_ns": 23152358652236
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358650047,
        "end_timestamp_ns": 23152358650810
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358648623,
        "end_timestamp_ns": 23152358649384
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358647195,
        "end_timestamp_ns": 23152358647954
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358645767,
        "end_timestamp_ns": 23152358646527
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358644336,
        "end_timestamp_ns": 23152358645098
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358642913,
        "end_timestamp_ns": 23152358643672
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358641490,
        "end_timestamp_ns": 23152358642248
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358640068,
        "end_timestamp_ns": 23152358640827
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358638642,
        "end_timestamp_ns": 23152358639402
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358637223,
        "end_timestamp_ns": 23152358637980
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358635797,
        "end_timestamp_ns": 23152358636554
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358634370,
        "end_timestamp_ns": 23152358635128
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358632945,
        "end_timestamp_ns": 23152358633706
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358631517,
        "end_timestamp_ns": 23152358632277
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358630075,
        "end_timestamp_ns": 23152358630836
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358628652,
        "end_timestamp_ns": 23152358629411
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358627223,
        "end_timestamp_ns": 23152358627986
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358625794,
        "end_timestamp_ns": 23152358626555
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358624112,
        "end_timestamp_ns": 23152358624873
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358622681,
        "end_timestamp_ns": 23152358623442
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358621231,
        "end_timestamp_ns": 23152358621992
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358619800,
        "end_timestamp_ns": 23152358620563
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358618374,
        "end_timestamp_ns": 23152358619135
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358616943,
        "end_timestamp_ns": 23152358617704
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358615512,
        "end_timestamp_ns": 23152358616274
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358614083,
        "end_timestamp_ns": 23152358614843
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358612655,
        "end_timestamp_ns": 23152358613421
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358611142,
        "end_timestamp_ns": 23152358611944
      },
      {
        "id": "ioctl",
        "stack_id": 706,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358608316,
        "end_timestamp_ns": 23152358610216
      },
      {
        "id": "newfstatat",
        "stack_id": 10390,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358604291,
        "end_timestamp_ns": 23152358607280
      },
      {
        "id": "uname",
        "stack_id": 4258,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358309767,
        "end_timestamp_ns": 23152358311036
      },
      {
        "id": "sysinfo",
        "stack_id": 5260,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358303037,
        "end_timestamp_ns": 23152358307832
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358298200,
        "end_timestamp_ns": 23152358300988
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358295394,
        "end_timestamp_ns": 23152358296119
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358292951,
        "end_timestamp_ns": 23152358293678
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358290586,
        "end_timestamp_ns": 23152358292195
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358286474,
        "end_timestamp_ns": 23152358289867
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358283905,
        "end_timestamp_ns": 23152358284635
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358281583,
        "end_timestamp_ns": 23152358283120
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358277718,
        "end_timestamp_ns": 23152358280893
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358275102,
        "end_timestamp_ns": 23152358275843
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358272864,
        "end_timestamp_ns": 23152358274315
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358269025,
        "end_timestamp_ns": 23152358272162
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358265972,
        "end_timestamp_ns": 23152358267762
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358261774,
        "end_timestamp_ns": 23152358265256
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358259018,
        "end_timestamp_ns": 23152358259739
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358256627,
        "end_timestamp_ns": 23152358257357
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358254285,
        "end_timestamp_ns": 23152358255872
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358250279,
        "end_timestamp_ns": 23152358253576
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358247685,
        "end_timestamp_ns": 23152358248411
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358245368,
        "end_timestamp_ns": 23152358246915
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358241361,
        "end_timestamp_ns": 23152358244672
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358238720,
        "end_timestamp_ns": 23152358239463
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358236432,
        "end_timestamp_ns": 23152358237925
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358232281,
        "end_timestamp_ns": 23152358235731
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358229258,
        "end_timestamp_ns": 23152358231037
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358224784,
        "end_timestamp_ns": 23152358228535
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358221995,
        "end_timestamp_ns": 23152358222727
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358219432,
        "end_timestamp_ns": 23152358220172
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358217048,
        "end_timestamp_ns": 23152358218660
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358212893,
        "end_timestamp_ns": 23152358216338
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358210252,
        "end_timestamp_ns": 23152358210979
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358207907,
        "end_timestamp_ns": 23152358209472
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358203814,
        "end_timestamp_ns": 23152358207191
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358201162,
        "end_timestamp_ns": 23152358201902
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358198789,
        "end_timestamp_ns": 23152358200314
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358194859,
        "end_timestamp_ns": 23152358198091
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358191831,
        "end_timestamp_ns": 23152358193540
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358187184,
        "end_timestamp_ns": 23152358191019
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358184072,
        "end_timestamp_ns": 23152358184830
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358179217,
        "end_timestamp_ns": 23152358179938
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358176461,
        "end_timestamp_ns": 23152358178392
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358171156,
        "end_timestamp_ns": 23152358175696
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358168191,
        "end_timestamp_ns": 23152358168935
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358165600,
        "end_timestamp_ns": 23152358167271
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358160287,
        "end_timestamp_ns": 23152358164794
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358156862,
        "end_timestamp_ns": 23152358157663
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358153879,
        "end_timestamp_ns": 23152358155859
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358146267,
        "end_timestamp_ns": 23152358151112
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358141487,
        "end_timestamp_ns": 23152358144223
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358134947,
        "end_timestamp_ns": 23152358139916
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358097934,
        "end_timestamp_ns": 23152358098696
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358093961,
        "end_timestamp_ns": 23152358095929
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358087187,
        "end_timestamp_ns": 23152358092283
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358082066,
        "end_timestamp_ns": 23152358085881
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358078903,
        "end_timestamp_ns": 23152358079704
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358074964,
        "end_timestamp_ns": 23152358077245
      },
      {
        "id": "openat",
        "stack_id": 12395,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358060237,
        "end_timestamp_ns": 23152358073259
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358051218,
        "end_timestamp_ns": 23152358052107
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358048950,
        "end_timestamp_ns": 23152358049746
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152358021357,
        "end_timestamp_ns": 23152358046153
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357984303,
        "end_timestamp_ns": 23152358018601
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357947239,
        "end_timestamp_ns": 23152357981450
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357909029,
        "end_timestamp_ns": 23152357944369
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357869279,
        "end_timestamp_ns": 23152357905809
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357811999,
        "end_timestamp_ns": 23152357861742
      },
      {
        "id": "openat",
        "stack_id": 7863,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357799010,
        "end_timestamp_ns": 23152357806613
      },
      {
        "id": "openat",
        "stack_id": 10089,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357744552,
        "end_timestamp_ns": 23152357766482
      },
      {
        "id": "close",
        "stack_id": 10470,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357684933,
        "end_timestamp_ns": 23152357685805
      },
      {
        "id": "read",
        "stack_id": 6515,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357679349,
        "end_timestamp_ns": 23152357684092
      },
      {
        "id": "openat",
        "stack_id": 15966,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357669322,
        "end_timestamp_ns": 23152357678666
      },
      {
        "id": "close",
        "stack_id": 8744,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357485498,
        "end_timestamp_ns": 23152357487450
      },
      {
        "id": "read",
        "stack_id": 9087,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357152127,
        "end_timestamp_ns": 23152357272856
      },
      {
        "id": "openat",
        "stack_id": 6437,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152357132364,
        "end_timestamp_ns": 23152357139254
      },
      {
        "id": "newfstatat",
        "stack_id": 13354,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152356995850,
        "end_timestamp_ns": 23152357119672
      },
      {
        "id": "newfstatat",
        "stack_id": 14687,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152356990810,
        "end_timestamp_ns": 23152356994554
      },
      {
        "id": "newfstatat",
        "stack_id": 9030,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152356653120,
        "end_timestamp_ns": 23152356987478
      },
      {
        "id": "newfstatat",
        "stack_id": 9030,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152356624973,
        "end_timestamp_ns": 23152356649822
      },
      {
        "id": "kill",
        "stack_id": 11112,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152356589423,
        "end_timestamp_ns": 23152356592823
      },
      {
        "id": "getppid",
        "stack_id": 4798,
        "pid_tgid": 850236021081417,
        "start_timestamp_ns": 23152356584127,
        "end_timestamp_ns": 23152356588481
      }
    ]
  }
}